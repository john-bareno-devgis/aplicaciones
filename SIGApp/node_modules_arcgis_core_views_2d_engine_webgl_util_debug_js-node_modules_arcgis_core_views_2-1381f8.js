"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["node_modules_arcgis_core_views_2d_engine_webgl_util_debug_js-node_modules_arcgis_core_views_2-1381f8"],{

/***/ 19602:
/*!**********************************************************!*\
  !*** ./node_modules/@arcgis/core/geohash/GeohashTree.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GeohashNode": () => (/* binding */ c),
/* harmony export */   "GeohashTree": () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var _core_CircularArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/CircularArray.js */ 30248);
/* harmony import */ var _geohashUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geohashUtils.js */ 86074);
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/SpatialReference.js */ 68230);
/* harmony import */ var _layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../layers/graphics/featureConversionUtils.js */ 50805);
/* harmony import */ var _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../layers/graphics/OptimizedGeometry.js */ 93846);
/* harmony import */ var _layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../layers/graphics/data/projectionSupport.js */ 19482);
/* harmony import */ var _views_2d_layers_features_support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../views/2d/layers/features/support/FeatureSetReaderJSON.js */ 80416);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/







class h {
  constructor(e = [], s, i = 8096) {
    this.onRelease = t => {}, this._nodes = 0, this._root = new c(this, 0, 0, 0), this._statisticFields = e, this._pool = i ? new _core_CircularArray_js__WEBPACK_IMPORTED_MODULE_0__["default"](8096) : null, this._serviceInfo = s;
  }
  destroy() {
    this.clear();
  }
  _acquire(t, e, s) {
    this._nodes++;
    let i = null;
    return null != this._pool && (i = this._pool.dequeue()), null != i ? i.realloc(t, e, s) : i = new c(this, t, e, s), i;
  }
  _release(t) {
    this.onRelease(t), this._nodes--, null != this._pool && this._pool.enqueue(t);
  }
  get count() {
    return this._root.count;
  }
  get size() {
    return this._nodes;
  }
  get poolSize() {
    return this._pool?.size ?? 0;
  }
  get depth() {
    let t = 0;
    return this.forEach(e => t = Math.max(t, e.depth)), t;
  }
  dropLevels(t) {
    this.forEach(e => {
      if (e.depth >= t) for (let t = 0; t < e.children.length; t++) {
        const s = e.children[t];
        s && this._release(s);
      }
    }), this.forEach(e => {
      if (e.depth >= t) for (let t = 0; t < e.children.length; t++) e.children[t] = null;
    });
  }
  clear() {
    this.forEach(t => this._release(t)), this._root = new c(this, 0, 0, 0);
  }
  insert(t, e, s = 0) {
    const i = _views_2d_layers_features_support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_6__.FeatureSetReaderJSON.fromOptimizedFeatures([t], this._serviceInfo).getCursor();
    i.next();
    const n = i.readGeometry();
    if (!n) return;
    const [o, a] = n.coords,
      r = t.geohashX,
      h = t.geohashY;
    this.insertCursor(i, t.displayId, o, a, r, h, e, s);
  }
  insertCursor(t, e, s, i, n, o, a, r = 0) {
    let l = this._root,
      h = 0,
      c = 0,
      u = 0;
    for (; null !== l;) {
      if (l.depth >= r && (l.count += 1, l.xTotal += s, l.yTotal += i, l.xGeohashTotal += n, l.yGeohashTotal += o, l.referenceId = e, this._updateStatisticsCursor(t, l, 1)), h >= a) return void l.add(e);
      const d = Math.ceil((h + 1) / 2),
        f = Math.floor((h + 1) / 2),
        x = 1 - h % 2,
        m = 30 - (3 * d + 2 * f),
        g = 30 - (2 * d + 3 * f),
        y = (n & 7 * x + 3 * (1 - x) << m) >> m,
        p = (o & 3 * x + 7 * (1 - x) << g) >> g,
        _ = y + p * (8 * x + 4 * (1 - x));
      c = c << 3 * x + 2 * (1 - x) | y, u = u << 2 * x + 3 * (1 - x) | p, null == l.children[_] && (l.children[_] = this._acquire(c, u, h + 1)), h += 1, l = l.children[_];
    }
  }
  remove(t, e) {
    const s = _views_2d_layers_features_support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_6__.FeatureSetReaderJSON.fromOptimizedFeatures([t], this._serviceInfo).getCursor();
    s.next();
    const i = s.readGeometry();
    if (!i) return;
    const [n, o] = i.coords,
      a = t.geohashX,
      r = t.geohashY;
    this.removeCursor(s, n, o, a, r, e);
  }
  removeCursor(t, e, s, i, n, o) {
    let a = this._root,
      r = 0;
    for (; null !== a;) {
      if (a.count -= 1, a.xTotal -= e, a.yTotal -= s, a.xGeohashTotal -= i, a.yGeohashTotal -= n, this._updateStatisticsCursor(t, a, -1), r >= o) return void a.remove(t.getDisplayId());
      const l = Math.ceil((r + 1) / 2),
        h = Math.floor((r + 1) / 2),
        c = 1 - r % 2,
        u = 30 - (3 * l + 2 * h),
        d = 30 - (2 * l + 3 * h),
        f = ((i & 7 * c + 3 * (1 - c) << u) >> u) + ((n & 3 * c + 7 * (1 - c) << d) >> d) * (8 * c + 4 * (1 - c)),
        x = a.children[f];
      1 === x?.count && (this._release(x), a.children[f] = null), r += 1, a = x;
    }
  }
  forEach(t) {
    let e = this._root;
    for (; null !== e;) {
      const s = this._linkChildren(e) || e.next;
      t(e), e = s;
    }
  }
  find(t, e, s) {
    return this._root.find(t, e, s, 0, 0, 0);
  }
  findIf(t) {
    let e = null;
    return this.forEach(s => {
      t(s) && (e = s);
    }), e;
  }
  findAllIf(t) {
    const e = [];
    return this.forEach(s => {
      t(s) && e.push(s);
    }), e;
  }
  findSingleOccupancyNode(t, e, s, i, n) {
    let o = this._root;
    for (; null !== o;) {
      const a = o.depth,
        r = o.xNode,
        l = o.yNode,
        h = 1 - a % 2,
        c = o.xGeohashTotal / o.count,
        u = o.yGeohashTotal / o.count;
      if (1 === o.count && t < c && c <= s && e < u && u <= i) return o;
      if (a >= n) {
        o = o.next;
        continue;
      }
      const d = Math.ceil((a + 1) / 2),
        f = Math.floor((a + 1) / 2),
        x = 30 - (3 * d + 2 * f),
        m = 30 - (2 * d + 3 * f),
        g = ~((1 << x) - 1),
        y = ~((1 << m) - 1),
        p = (t & g) >> x,
        _ = (e & y) >> m,
        v = (s & g) >> x,
        M = (i & y) >> m,
        T = r << 3 * h + 2 * (1 - h),
        b = l << 2 * h + 3 * (1 - h),
        k = T + 8 * h + 4 * (1 - h),
        N = b + 4 * h + 8 * (1 - h),
        I = Math.max(T, p),
        C = Math.max(b, _),
        G = Math.min(k, v),
        L = Math.min(N, M);
      let S = null,
        w = null;
      for (let t = C; t <= L; t++) for (let e = I; e <= G; e++) {
        const s = e - T + (t - b) * (8 * h + 4 * (1 - h)),
          i = o.children[s];
        i && (S || (S = i, S.next = o.next), w && (w.next = i), w = i, i.next = o.next);
      }
      o = S || o.next;
    }
    return null;
  }
  getRegionDisplayIds(t) {
    let e = this._root;
    const {
        bounds: s,
        geohashBounds: i,
        level: n
      } = t,
      [o, a, r, l] = s,
      h = [];
    for (; null !== e;) {
      const t = e.depth,
        s = e.xNode,
        c = e.yNode;
      if (t >= n) {
        const t = e.xTotal / e.count,
          s = e.yTotal / e.count;
        t >= o && t <= r && s >= a && s <= l && e.displayIds.forEach(t => h.push(t)), e = e.next;
        continue;
      }
      const u = Math.ceil((t + 1) / 2),
        d = Math.floor((t + 1) / 2),
        f = 1 - t % 2,
        x = 30 - (3 * u + 2 * d),
        m = 30 - (2 * u + 3 * d),
        g = ~((1 << x) - 1),
        y = ~((1 << m) - 1),
        p = (i.xLL & g) >> x,
        _ = (i.yLL & y) >> m,
        v = (i.xTR & g) >> x,
        M = (i.yTR & y) >> m,
        T = s << 3 * f + 2 * (1 - f),
        b = c << 2 * f + 3 * (1 - f),
        k = T + 8 * f + 4 * (1 - f),
        N = b + 4 * f + 8 * (1 - f),
        I = Math.max(T, p),
        C = Math.max(b, _),
        G = Math.min(k, v),
        L = Math.min(N, M);
      let S = null,
        w = null;
      for (let i = C; i <= L; i++) for (let t = I; t <= G; t++) {
        const s = t - T + (i - b) * (8 * f + 4 * (1 - f)),
          n = e.children[s];
        n && (S || (S = n, S.next = e.next), w && (w.next = n), w = n, n.next = e.next);
      }
      e = S || e.next;
    }
    return h;
  }
  getRegionStatistics(t) {
    let e = this._root,
      s = 0,
      i = 0,
      n = 0;
    const o = {},
      {
        bounds: a,
        geohashBounds: r,
        level: l
      } = t,
      [h, c, u, d] = a;
    let f = 0;
    for (; null !== e;) {
      const t = e.depth,
        a = e.xNode,
        x = e.yNode;
      if (t >= l) {
        const t = e.xTotal / e.count,
          a = e.yTotal / e.count;
        t > h && t <= u && a > c && a <= d && (s += e.count, i += e.xTotal, n += e.yTotal, 1 === e.count && (f = e.referenceId), this._aggregateStatistics(o, e.statistics)), e = e.next;
        continue;
      }
      const m = Math.ceil((t + 1) / 2),
        g = Math.floor((t + 1) / 2),
        y = 1 - t % 2,
        p = 30 - (3 * m + 2 * g),
        _ = 30 - (2 * m + 3 * g),
        v = ~((1 << p) - 1),
        M = ~((1 << _) - 1),
        T = (r.xLL & v) >> p,
        b = (r.yLL & M) >> _,
        k = (r.xTR & v) >> p,
        N = (r.yTR & M) >> _,
        I = a << 3 * y + 2 * (1 - y),
        C = x << 2 * y + 3 * (1 - y),
        G = I + 8 * y + 4 * (1 - y),
        L = C + 4 * y + 8 * (1 - y),
        S = Math.max(I, T),
        w = Math.max(C, b),
        R = Math.min(G, k),
        F = Math.min(L, N);
      let z = null,
        j = null;
      for (let r = w; r <= F; r++) for (let t = S; t <= R; t++) {
        const a = t - I + (r - C) * (8 * y + 4 * (1 - y)),
          l = e.children[a];
        if (l) {
          if (r !== w && r !== F && t !== S && t !== R) {
            const t = l.xTotal / l.count,
              e = l.yTotal / l.count;
            t > h && t <= u && e > c && e <= d && (s += l.count, i += l.xTotal, n += l.yTotal, 1 === l.count && (f = l.referenceId), this._aggregateStatistics(o, l.statistics));
            continue;
          }
          z || (z = l, z.next = e.next), j && (j.next = l), j = l, l.next = e.next;
        }
      }
      e = z || e.next;
    }
    return {
      count: s,
      attributes: this.normalizeStatistics(o, s),
      xTotal: i,
      yTotal: n,
      referenceId: f
    };
  }
  getBins(t) {
    const e = [],
      {
        geohashBounds: s,
        level: i
      } = t;
    let n = this._root;
    for (; null !== n;) {
      const t = n.depth,
        o = n.xNode,
        a = n.yNode;
      if (t >= i) {
        e.push(n), n = n.next;
        continue;
      }
      const r = Math.ceil((t + 1) / 2),
        l = Math.floor((t + 1) / 2),
        h = 1 - t % 2,
        c = 30 - (3 * r + 2 * l),
        u = 30 - (2 * r + 3 * l),
        d = ~((1 << c) - 1),
        f = ~((1 << u) - 1),
        x = (s.xLL & d) >> c,
        m = (s.yLL & f) >> u,
        g = (s.xTR & d) >> c,
        y = (s.yTR & f) >> u,
        p = o << 3 * h + 2 * (1 - h),
        _ = a << 2 * h + 3 * (1 - h),
        v = p + 8 * h + 4 * (1 - h),
        M = _ + 4 * h + 8 * (1 - h),
        T = Math.max(p, x),
        b = Math.max(_, m),
        k = Math.min(v, g),
        N = Math.min(M, y);
      let I = null,
        C = null;
      for (let e = b; e <= N; e++) for (let t = T; t <= k; t++) {
        const s = t - p + (e - _) * (8 * h + 4 * (1 - h)),
          i = n.children[s];
        i && (I || (I = i, I.next = n.next), C && (C.next = i), C = i, i.next = n.next);
      }
      n = I || n.next;
    }
    return e;
  }
  _linkChildren(t) {
    let e = null,
      s = null;
    for (let i = 0; i <= t.children.length; i++) {
      const n = t.children[i];
      n && (e || (e = n, e.next = t.next), s && (s.next = n), s = n, n.next = t.next);
    }
    return e;
  }
  _updateStatisticsCursor(t, e, s) {
    for (const i of this._statisticFields) {
      const n = i.name,
        o = i.inField ? t.readAttribute(i.inField) : t.getComputedNumericAtIndex(i.inFieldIndex);
      switch (i.statisticType) {
        case "min":
          {
            if (isNaN(o)) break;
            if (!e.statistics[n]) {
              e.statistics[n] = {
                value: o
              };
              break;
            }
            const t = e.statistics[n].value;
            e.statistics[n].value = Math.min(t, o);
            break;
          }
        case "max":
          {
            if (isNaN(o)) break;
            if (!e.statistics[n]) {
              e.statistics[n] = {
                value: o
              };
              break;
            }
            const t = e.statistics[n].value;
            e.statistics[n].value = Math.max(t, o);
            break;
          }
        case "count":
          break;
        case "sum":
        case "avg":
          {
            e.statistics[n] || (e.statistics[n] = {
              value: 0,
              nanCount: 0
            });
            const t = e.statistics[n].value,
              i = e.statistics[n].nanCount ?? 0;
            null == o || isNaN(o) ? e.statistics[n].nanCount = i + s : e.statistics[n].value = t + s * o;
            break;
          }
        case "avg_angle":
          {
            e.statistics[n] || (e.statistics[n] = {
              x: 0,
              y: 0,
              nanCount: 0
            });
            const t = e.statistics[n].x,
              i = e.statistics[n].y,
              a = e.statistics[n].nanCount ?? 0,
              r = Math.PI / 180;
            null == o || isNaN(o) ? e.statistics[n].nanCount = a + s : (e.statistics[n].x = t + s * Math.cos(o * r), e.statistics[n].y = i + s * Math.sin(o * r));
            break;
          }
        case "mode":
          {
            e.statistics[n] || (e.statistics[n] = {});
            const t = e.statistics[n][o] || 0;
            e.statistics[n][o] = t + s;
            break;
          }
      }
    }
  }
  _aggregateStatistics(t, e) {
    for (const s of this._statisticFields) {
      const i = s.name;
      switch (s.statisticType) {
        case "min":
          {
            if (!t[i]) {
              t[i] = {
                value: e[i].value
              };
              break;
            }
            const s = t[i].value;
            t[i].value = Math.min(s, e[i].value);
            break;
          }
        case "max":
          {
            if (!t[i]) {
              t[i] = {
                value: e[i].value
              };
              break;
            }
            const s = t[i].value;
            t[i].value = Math.max(s, e[i].value);
            break;
          }
        case "count":
          break;
        case "sum":
        case "avg":
        case "avg_angle":
        case "mode":
          t[i] || (t[i] = {});
          for (const s in e[i]) {
            const n = t[i][s] || 0;
            t[i][s] = n + e[i][s];
          }
      }
    }
  }
  normalizeStatistics(t, e) {
    const s = {};
    for (const i of this._statisticFields) {
      const n = i.name;
      switch (i.statisticType) {
        case "min":
        case "max":
          {
            const i = t[n];
            if (!e || !i) break;
            s[n] = i.value;
            break;
          }
        case "count":
          if (!e) break;
          s[n] = e;
          break;
        case "sum":
          {
            if (!e) break;
            const {
              value: i,
              nanCount: o
            } = t[n];
            if (!(e - o)) break;
            s[n] = i;
            break;
          }
        case "avg":
          {
            if (!e) break;
            const {
              value: i,
              nanCount: o
            } = t[n];
            if (!(e - o)) break;
            s[n] = i / (e - o);
            break;
          }
        case "avg_angle":
          {
            if (!e) break;
            const {
              x: i,
              y: o,
              nanCount: a
            } = t[n];
            if (!(e - a)) break;
            const r = i / (e - a),
              l = o / (e - a),
              h = 180 / Math.PI,
              c = Math.atan2(l, r) * h;
            s[n] = c;
            break;
          }
        case "mode":
          {
            const e = t[n];
            let i = 0,
              o = 0,
              a = null;
            for (const t in e) {
              const s = e[t];
              s === i ? o += 1 : s > i && (i = s, o = 1, a = t);
            }
            s[n] = "null" === a || o > 1 ? null : a;
            break;
          }
      }
    }
    return s;
  }
}
class c {
  constructor(t, e, s, i) {
    this.count = 0, this.xTotal = 0, this.yTotal = 0, this.statistics = {}, this.displayId = 0, this.referenceId = 0, this.displayIds = new Set(), this.next = null, this.depth = 0, this.xNode = 0, this.yNode = 0, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this._tree = t, this.children = new Array(32);
    for (let n = 0; n < this.children.length; n++) this.children[n] = null;
    this.xNode = e, this.yNode = s, this.depth = i;
  }
  realloc(t, e, s) {
    for (let i = 0; i < this.children.length; i++) this.children[i] = null;
    return this.xNode = t, this.yNode = e, this.depth = s, this.next = null, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this.displayId = 0, this.referenceId = 0, this.xTotal = 0, this.yTotal = 0, this.count = 0, this.statistics = {}, this.displayIds.clear(), this;
  }
  get id() {
    return `${this.xNode}.${this.yNode}`;
  }
  add(t) {
    this.displayIds.add(t);
  }
  remove(t) {
    this.displayIds.delete(t);
  }
  getAttributes() {
    const t = this._tree.normalizeStatistics(this.statistics, this.count);
    return t.referenceId = null, t.aggregateId = this.id, t.aggregateCount = this.count, t;
  }
  getGeometry(t, e) {
    const o = this.getLngLatBounds(),
      [l, h, c, u] = o,
      d = (0,_layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_5__.project)({
        rings: [[[l, h], [l, u], [c, u], [c, h], [l, h]]]
      }, _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_2__["default"].WGS84, t),
      f = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__.convertFromPolygon)(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__["default"](), d, !1, !1);
    if (null != e) {
      return (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__.quantizeOptimizedGeometry)(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__["default"](), f, !1, !1, "esriGeometryPolygon", e, !1, !1);
    }
    return f;
  }
  getGeometryCentroid(t, e) {
    const i = this.getLngLatBounds(),
      [l, h, c, u] = i,
      d = (0,_layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_5__.project)({
        x: (l + c) / 2,
        y: (h + u) / 2
      }, _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_2__["default"].WGS84, t),
      f = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__.convertFromPoint)(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__["default"](), d);
    if (null != e) {
      return (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__.quantizeOptimizedGeometry)(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__["default"](), f, !1, !1, "esriGeometryPoint", e, !1, !1);
    }
    return f;
  }
  getLngLatBounds() {
    const t = this.depth,
      s = Math.ceil(t / 2),
      i = Math.floor(t / 2),
      n = 30 - (3 * s + 2 * i),
      o = 30 - (2 * s + 3 * i),
      a = this.xNode << n,
      r = this.yNode << o;
    return (0,_geohashUtils_js__WEBPACK_IMPORTED_MODULE_1__.decodeGeohashXY)({
      geohashX: a,
      geohashY: r
    }, this.depth);
  }
  find(t, e, s, i, n, o) {
    if (i >= s) return this;
    const a = 1 - i % 2,
      r = 3 * a + 2 * (1 - a),
      l = 2 * a + 3 * (1 - a),
      h = 30 - n - r,
      c = 30 - o - l,
      u = ((t & 7 * a + 3 * (1 - a) << h) >> h) + ((e & 3 * a + 7 * (1 - a) << c) >> c) * (8 * a + 4 * (1 - a)),
      d = this.children[u];
    return null == d ? null : d.find(t, e, s, i + 1, n + r, o + l);
  }
}


/***/ }),

/***/ 23917:
/*!********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/data/StreamFeatureManager.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StreamFeatureManager": () => (/* binding */ o),
/* harmony export */   "defaultStreamIdField": () => (/* binding */ s),
/* harmony export */   "esriTimestamp": () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _core_CircularArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/CircularArray.js */ 30248);
/* harmony import */ var _core_mathUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/mathUtils.js */ 93142);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/


const s = "__esri_stream_id__",
  i = "__esri_timestamp__",
  r = 1e3;
class o {
  constructor(t, e, i, r, o = 128) {
    this._trackIdToObservations = new Map(), this._idCounter = 0, this._lastPurge = performance.now(), this._addOrUpdated = new Map(), this._removed = [], this._maxAge = 0, this._timeInfo = i, this._purgeOptions = r, this.store = t, this.objectIdField = e, this.purgeInterval = o, this._useGeneratedIds = this.objectIdField === s;
  }
  removeById(t) {
    this._removed.push(t);
  }
  removeByTrackId(t) {
    const e = this._trackIdToObservations.get(t);
    if (e) for (const s of e.entries) this._removed.push(s);
  }
  add(s) {
    if (this._useGeneratedIds) {
      const t = this._nextId();
      s.attributes[this.objectIdField] = t, s.objectId = t;
    } else s.objectId = s.attributes[this.objectIdField];
    const i = s.objectId;
    if (this._addOrUpdated.set(i, s), this._maxAge = Math.max(this._maxAge, s.attributes[this._timeInfo.startTimeField]), !this._timeInfo.trackIdField) return null == this._trackIdLessObservations && (this._trackIdLessObservations = new _core_CircularArray_js__WEBPACK_IMPORTED_MODULE_0__["default"](1e5)), void this._trackIdLessObservations.enqueue(i);
    const o = s.attributes[this._timeInfo.trackIdField];
    if (!this._trackIdToObservations.has(o)) {
      const s = null != this._purgeOptions?.maxObservations ? this._purgeOptions.maxObservations : r,
        i = (0,_core_mathUtils_js__WEBPACK_IMPORTED_MODULE_1__.clamp)(s, 0, r);
      this._trackIdToObservations.set(o, new _core_CircularArray_js__WEBPACK_IMPORTED_MODULE_0__["default"](i));
    }
    const d = this._trackIdToObservations.get(o),
      a = d?.enqueue(i);
    null != a && (this._addOrUpdated.has(a) ? this._addOrUpdated.delete(a) : this._removed.push(a));
  }
  checkForUpdates() {
    const t = this._getToAdd(),
      e = this._getToRemove(),
      s = performance.now();
    s - this._lastPurge >= this.purgeInterval && (this._purge(s), this._lastPurge = s);
    const r = [];
    if (null != e) for (const i of e) {
      const t = this.store.removeById(i);
      null != t && r.push(t);
    }
    const o = [];
    if (null != t) {
      const r = new Set(e ?? []);
      for (const e of t) r.has(e.objectId) || (e.attributes[i] = s, this.store.add(e), o.push(e));
    }
    (o.length || r?.length) && this.store.update(o, r);
  }
  _getToAdd() {
    if (!this._addOrUpdated.size) return null;
    const t = new Array(this._addOrUpdated.size);
    let e = 0;
    return this._addOrUpdated.forEach(s => t[e++] = s), this._addOrUpdated.clear(), t;
  }
  _getToRemove() {
    const t = this._removed;
    return this._removed.length ? (this._removed = [], t) : null;
  }
  _nextId() {
    const t = this._idCounter;
    return this._idCounter = (this._idCounter + 1) % 4294967294 + 1, t;
  }
  _purge(t) {
    const e = this._purgeOptions;
    null != e && (this._purgeSomeByDisplayCount(e), this._purgeByAge(e), this._purgeByAgeReceived(t, e), this._purgeTracks());
  }
  _purgeSomeByDisplayCount(t) {
    if (!t.displayCount) return;
    let e = this.store.size;
    if (e > t.displayCount) {
      if (this._timeInfo.trackIdField) for (const s of this._trackIdToObservations.values()) if (e > t.displayCount && s.size) {
        const t = s.dequeue();
        this._removed.push(t), e--;
      }
      if (null != this._trackIdLessObservations) {
        let s = e - t.displayCount;
        for (; s-- > 0;) {
          const t = this._trackIdLessObservations.dequeue();
          null != t && this._removed.push(t);
        }
      }
    }
  }
  _purgeByAge(t) {
    const e = this._timeInfo?.startTimeField;
    if (!t.age || !e) return;
    const s = 60 * t.age * 1e3,
      i = this._maxAge - s;
    this.store.forEach(t => {
      t.attributes[e] < i && this._removed.push(t.objectId);
    });
  }
  _purgeByAgeReceived(t, e) {
    if (!e.ageReceived) return;
    const s = t - 60 * e.ageReceived * 1e3;
    this.store.forEach(t => {
      t.attributes[i] < s && this._removed.push(t.objectId);
    });
  }
  _purgeTracks() {
    this._trackIdToObservations.forEach((t, e) => {
      0 === t.size && this._trackIdToObservations.delete(e);
    });
  }
}


/***/ }),

/***/ 21288:
/*!**********************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/DisplayId.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "aggregateValidFiltersMask": () => (/* binding */ r),
/* harmony export */   "createDisplayId": () => (/* binding */ s),
/* harmony export */   "displayIdTexelMask": () => (/* binding */ n),
/* harmony export */   "displayIdTypeAggregate": () => (/* binding */ c),
/* harmony export */   "displayIdTypeFeature": () => (/* binding */ u),
/* harmony export */   "displayIdTypeMask": () => (/* binding */ t),
/* harmony export */   "getDisplayIdFilterMask": () => (/* binding */ i),
/* harmony export */   "getDisplayIdTexel": () => (/* binding */ f),
/* harmony export */   "getDisplayIdType": () => (/* binding */ e),
/* harmony export */   "isAggregateId": () => (/* binding */ p),
/* harmony export */   "nonAggregateValidFiltersMask": () => (/* binding */ o)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const n = 8388607,
  t = 8388608,
  r = 254,
  o = 255,
  u = 0,
  c = 1,
  e = n => (n & t) >>> 23,
  f = t => t & n,
  i = n => e(n) === c ? r : o;
function p(n) {
  return e(n) === c;
}
function s(n, r) {
  return ((r ? t : 0) | n) >>> 0;
}


/***/ }),

/***/ 80696:
/*!************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "angleFactor256": () => (/* binding */ f),
/* harmony export */   "attributeDataAnimation": () => (/* binding */ Q),
/* harmony export */   "attributeDataDd0": () => (/* binding */ T),
/* harmony export */   "attributeDataDd1": () => (/* binding */ U),
/* harmony export */   "attributeDataFilterFlags": () => (/* binding */ P),
/* harmony export */   "attributeDataGpgpu": () => (/* binding */ R),
/* harmony export */   "attributeDataVv": () => (/* binding */ S),
/* harmony export */   "attributeStoreTextureSize": () => (/* binding */ A),
/* harmony export */   "averageGlyphMosaicItem": () => (/* binding */ z),
/* harmony export */   "bitsetFillHasPatternHeightPrecisionFactor": () => (/* binding */ ye),
/* harmony export */   "bitsetFillHasPatternWidthPrecisionFactor": () => (/* binding */ be),
/* harmony export */   "bitsetFillHasUnresolvedReplacementColor": () => (/* binding */ ve),
/* harmony export */   "bitsetFillRandomPatternOffset": () => (/* binding */ ue),
/* harmony export */   "bitsetGenericConsiderAlphaOnly": () => (/* binding */ ge),
/* harmony export */   "bitsetGenericLockColor": () => (/* binding */ pe),
/* harmony export */   "bitsetLineScaleDash": () => (/* binding */ je),
/* harmony export */   "bitsetMarkerAlignmentMap": () => (/* binding */ ne),
/* harmony export */   "bitsetMarkerAlignmentScreen": () => (/* binding */ le),
/* harmony export */   "bitsetMarkerOutlineAllowColorOverride": () => (/* binding */ we),
/* harmony export */   "bitsetMarkerScaleSymbolsProportionally": () => (/* binding */ xe),
/* harmony export */   "bitsetTypeFillOutline": () => (/* binding */ ke),
/* harmony export */   "bufferDataMinimumSize": () => (/* binding */ ie),
/* harmony export */   "bufferDataPoolSize": () => (/* binding */ he),
/* harmony export */   "chartMaxFields": () => (/* binding */ n),
/* harmony export */   "collisionBoxPadding": () => (/* binding */ j),
/* harmony export */   "collisionBucketSize": () => (/* binding */ p),
/* harmony export */   "collisionEarlyRejectBucketSize": () => (/* binding */ g),
/* harmony export */   "collisionMaxZoomDelta": () => (/* binding */ x),
/* harmony export */   "collisionPlacementPadding": () => (/* binding */ u),
/* harmony export */   "collisionTileBoxSize": () => (/* binding */ k),
/* harmony export */   "compressionFactorForU16": () => (/* binding */ h),
/* harmony export */   "debugLabels": () => (/* binding */ s),
/* harmony export */   "displayRecordIntPerElement": () => (/* binding */ de),
/* harmony export */   "dotDensityMaxFields": () => (/* binding */ l),
/* harmony export */   "effectFlag0": () => (/* binding */ Y),
/* harmony export */   "enableEarlyLabelDiscard": () => (/* binding */ Z),
/* harmony export */   "extrudeScale": () => (/* binding */ o),
/* harmony export */   "filterFlag0": () => (/* binding */ X),
/* harmony export */   "glyphSize": () => (/* binding */ b),
/* harmony export */   "heuristicGlyphsPerFeature": () => (/* binding */ y),
/* harmony export */   "heuristicGlyphsPerLine": () => (/* binding */ v),
/* harmony export */   "highlightFlag": () => (/* binding */ W),
/* harmony export */   "hittestRadius": () => (/* binding */ _),
/* harmony export */   "magicLabelLineHeight": () => (/* binding */ w),
/* harmony export */   "maxFilters": () => (/* binding */ V),
/* harmony export */   "maxGpuUploadsPerFrame": () => (/* binding */ oe),
/* harmony export */   "maxRepresentableInt": () => (/* binding */ m),
/* harmony export */   "maxSizeForU16Compression": () => (/* binding */ i),
/* harmony export */   "minMaxZoomPrecisionFactor": () => (/* binding */ me),
/* harmony export */   "nanMagicNumber": () => (/* binding */ t),
/* harmony export */   "patchPixelBufferAllocSize": () => (/* binding */ fe),
/* harmony export */   "patternFillRasterizationScale": () => (/* binding */ Ae),
/* harmony export */   "pictureFillColor": () => (/* binding */ a),
/* harmony export */   "randomInsidePolygonTextureSize": () => (/* binding */ se),
/* harmony export */   "rasterTileSize": () => (/* binding */ d),
/* harmony export */   "sdfTextureSize": () => (/* binding */ ce),
/* harmony export */   "spritePadding": () => (/* binding */ ae),
/* harmony export */   "textPlacementPadding": () => (/* binding */ q),
/* harmony export */   "textureBindingAttributeData0": () => (/* binding */ E),
/* harmony export */   "textureBindingAttributeData1": () => (/* binding */ F),
/* harmony export */   "textureBindingAttributeData2": () => (/* binding */ G),
/* harmony export */   "textureBindingAttributeData3": () => (/* binding */ H),
/* harmony export */   "textureBindingAttributeData4": () => (/* binding */ I),
/* harmony export */   "textureBindingAttributeData5": () => (/* binding */ J),
/* harmony export */   "textureBindingBitmap": () => (/* binding */ D),
/* harmony export */   "textureBindingGlyphAtlas": () => (/* binding */ C),
/* harmony export */   "textureBindingGpgpu": () => (/* binding */ K),
/* harmony export */   "textureBindingHighlight0": () => (/* binding */ L),
/* harmony export */   "textureBindingHighlight1": () => (/* binding */ M),
/* harmony export */   "textureBindingRenderer0": () => (/* binding */ N),
/* harmony export */   "textureBindingRenderer1": () => (/* binding */ O),
/* harmony export */   "textureBindingSpriteAtlas": () => (/* binding */ B),
/* harmony export */   "textureUploadManagerBudget": () => (/* binding */ ze),
/* harmony export */   "textureUploadManagerChunkSize": () => (/* binding */ qe),
/* harmony export */   "thinLineHalfWidthThreshold": () => (/* binding */ $),
/* harmony export */   "tileSize": () => (/* binding */ c),
/* harmony export */   "vtlHighResCutoff": () => (/* binding */ te),
/* harmony export */   "vtlTextureBindingUnitGlyphs": () => (/* binding */ re),
/* harmony export */   "vtlTextureBindingUnitSprites": () => (/* binding */ ee),
/* harmony export */   "webglMaxInnerStops": () => (/* binding */ r),
/* harmony export */   "webglMaxStops": () => (/* binding */ e)
/* harmony export */ });
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/has.js */ 67087);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/

const e = 8,
  r = e - 2,
  t = 1e-30,
  o = 64,
  a = 4294967295,
  c = 512,
  d = 256,
  f = 256 / 360,
  h = 128,
  i = 511,
  m = 16777216,
  s = !1,
  p = 128,
  l = 8,
  n = 10,
  w = 29,
  x = 1,
  g = 16,
  j = 16,
  k = c / p,
  u = 8,
  v = 50,
  y = 10,
  b = 24,
  q = 8,
  z = {
    metrics: {
      width: 15,
      height: 17,
      left: 0,
      top: -7,
      advance: 14
    }
  },
  A = 1024,
  B = 0,
  C = 0,
  D = 0,
  E = 1,
  F = 2,
  G = 3,
  H = 4,
  I = 5,
  J = 6,
  K = 12,
  L = 5,
  M = 6,
  N = 5,
  O = 6,
  P = 0,
  Q = 1,
  R = 2,
  S = 3,
  T = 3,
  U = 4,
  V = 2,
  W = 1,
  X = 2,
  Y = 4,
  Z = !1,
  $ = 1.05,
  _ = (0,_core_has_js__WEBPACK_IMPORTED_MODULE_0__["default"])("featurelayer-force-marker-text-draw-order") ? .5 : 3,
  ee = 5,
  re = 6,
  te = 1.15,
  oe = 2,
  ae = 2,
  ce = 128 - 2 * ae,
  de = 8,
  fe = 500,
  he = 4,
  ie = 128,
  me = 10,
  se = 1024,
  pe = 2,
  le = 0,
  ne = 1,
  we = 4,
  xe = 8,
  ge = 16,
  je = 4,
  ke = 1,
  ue = 4,
  ve = 8,
  ye = 32,
  be = 64,
  qe = 128,
  ze = 4,
  Ae = 2;


/***/ }),

/***/ 13458:
/*!***********************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/util/debug.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDebugLogger": () => (/* binding */ n),
/* harmony export */   "debugAttrUpdates": () => (/* binding */ l)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const n = (n, l) => n && ((...n) => l.warn("DEBUG:", ...n)) || (() => null),
  l = !1;


/***/ }),

/***/ 75683:
/*!*********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/visualVariablesUtils.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getTypeOfSizeVisualVariable": () => (/* binding */ l)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ 32995);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Logger.js */ 28191);
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enums.js */ 20753);
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Utils.js */ 52300);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/




function l(l) {
  return (0,_Utils_js__WEBPACK_IMPORTED_MODULE_3__.isNumber)(l.minDataValue) && (0,_Utils_js__WEBPACK_IMPORTED_MODULE_3__.isNumber)(l.maxDataValue) && null != l.minSize && null != l.maxSize ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_MINMAX_VALUE : (l.expression && "view.scale" === l.expression || l.valueExpression && "$view.scale" === l.valueExpression) && Array.isArray(l.stops) ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_SCALE_STOPS : (null != l.field || l.expression && "view.scale" !== l.expression || l.valueExpression && "$view.scale" !== l.valueExpression) && (Array.isArray(l.stops) || "levels" in l && l.levels) ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_FIELD_STOPS : (null != l.field || l.expression && "view.scale" !== l.expression || l.valueExpression && "$view.scale" !== l.valueExpression) && null != l.valueUnit ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_UNIT_VALUE : (_core_Logger_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLogger("esri.views.2d.engine.webgl").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("mapview-bad-type", "Found invalid size VisualVariable", l)), _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.NONE);
}


/***/ }),

/***/ 41883:
/*!************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/Pipeline.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ u)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../chunks/tslib.es6.js */ 18100);
/* harmony import */ var _core_Accessor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Accessor.js */ 2299);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/has.js */ 67087);
/* harmony import */ var _core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/reactiveUtils.js */ 7521);
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/accessorSupport/decorators/property.js */ 9497);
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../core/accessorSupport/ensureType.js */ 83382);
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../core/arrayUtils.js */ 19420);
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../core/accessorSupport/decorators/subclass.js */ 20891);
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ 53492);
/* harmony import */ var _layers_support_TileInfo_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../layers/support/TileInfo.js */ 51015);
/* harmony import */ var _processors_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./processors.js */ 96916);
/* harmony import */ var _controllers_FeatureController2D_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./controllers/FeatureController2D.js */ 20778);
/* harmony import */ var _support_TileStore_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./support/TileStore.js */ 40175);
/* harmony import */ var _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./support/UpdateToken.js */ 7408);
/* harmony import */ var _tiling_TileInfoView_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../tiling/TileInfoView.js */ 3795);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/















let d = class extends _core_Accessor_js__WEBPACK_IMPORTED_MODULE_2__["default"] {
  constructor() {
    super(...arguments), this.controller = null, this.processor = null, this.remoteClient = null, this.tileStore = null, this.service = null, this.viewState = null, this._paused = !1, this._pendingTileUpdates = [];
  }
  initialize() {
    this.addHandles([(0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_4__.watch)(() => this.updating, e => {
      this.remoteClient.invoke("setUpdating", e).catch(e => {});
    })]);
  }
  destroy() {
    this.stop(), this.controller?.destroy(), this.processor?.destroy(), this.controller = this.processor = this.tileStore = this.remoteClient = null;
  }
  get updating() {
    return !this.controller || this.controller.updating;
  }
  stop() {
    this._paused = !0, Array.isArray(this.service?.source) && (this.service.source.forEach(e => e.close()), this.service.source.length = 0), this.tileStore?.updateTiles({
      added: [],
      removed: this.tileStore.tiles.map(e => e.id)
    }), this.tileStore?.destroy(), this.tileStore = null, this._pendingTileUpdates.length = 0;
  }
  startup({
    service: e,
    config: t,
    tileInfo: r,
    tiles: s
  }) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this._paused = !0, Array.isArray(_this.service?.source) && (_this.service.source.forEach(e => e.close()), _this.service.source.length = 0), _this.service = e, !_this.tileStore || !(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__.equals)(_this.tileStore.tileScheme.spatialReference, r.spatialReference)) {
        const e = new _tiling_TileInfoView_js__WEBPACK_IMPORTED_MODULE_15__["default"](_layers_support_TileInfo_js__WEBPACK_IMPORTED_MODULE_10__["default"].fromJSON(r));
        s.added.length = s.removed.length = 0, _this.tileStore?.updateTiles({
          added: [],
          removed: _this.tileStore.tiles.map(e => e.id)
        }), _this.tileStore?.destroy(), _this.tileStore = new _support_TileStore_js__WEBPACK_IMPORTED_MODULE_13__["default"](e), _this._pendingTileUpdates.length = 0;
      }
      for (yield _this._createProcessorAndController(t), yield _this.update({
        config: t
      }), _this.controller.resume(), _this.tileStore.clear(), _this.tileStore.updateTiles(s), _this._paused = !1; _this._pendingTileUpdates.length;) _this.tileStore.updateTiles(_this._pendingTileUpdates.pop());
    })();
  }
  updateTiles(e) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this2._paused ? _this2._pendingTileUpdates.push(e) : _this2.tileStore?.updateTiles(e);
    })();
  }
  update({
    config: e
  }) {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const t = _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_14__.UpdateToken.empty();
      return yield Promise.all([_this3.processor.update(t, e), _this3.controller.update(t, e)]), t.toJSON();
    })();
  }
  applyUpdate(e) {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this4.controller.applyUpdate(_support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_14__.UpdateToken.create(e));
    })();
  }
  _createProcessorAndController(e) {
    var _this5 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield Promise.all([_this5._handleControllerConfig(e), _this5._handleProcessorConfig(e)]), _this5.controller.processor = _this5.processor;
    })();
  }
  _handleControllerConfig(e) {
    var _this6 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this6._createController(_this6.service, e);
    })();
  }
  _handleProcessorConfig(e) {
    var _this7 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this7._createProcessor(_this7.service, e);
    })();
  }
  _createController(e, t) {
    var _this8 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this8.controller && (_this8.controller.destroy(), _this8.removeHandles("controller"));
      const {
          tileStore: s,
          remoteClient: o
        } = _this8,
        i = new _controllers_FeatureController2D_js__WEBPACK_IMPORTED_MODULE_12__["default"]({
          service: e,
          tileStore: s,
          remoteClient: o
        }),
        l = (0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_4__.watch)(() => i.dataUpdating, e => {
          _this8.remoteClient.invoke("setDataUpdating", e).catch(e => {});
        });
      return _this8.addHandles(l, "controller"), _this8.controller = i, i;
    })();
  }
  _createProcessor(e, t) {
    var _this9 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const r = t.schema.processors[0].type,
        s = (yield (0,_processors_js__WEBPACK_IMPORTED_MODULE_11__.loadProcessorModule)(r)).default,
        {
          remoteClient: o,
          tileStore: i
        } = _this9,
        l = new s({
          service: e,
          config: t,
          tileStore: i,
          remoteClient: o
        });
      return _this9.processor && _this9.processor.destroy(), _this9.processor = l, l;
    })();
  }
};
(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__.property)()], d.prototype, "controller", void 0), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__.property)()], d.prototype, "processor", void 0), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__.property)()], d.prototype, "updating", null), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_5__.property)()], d.prototype, "viewState", void 0), d = (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_8__.subclass)("esri.views.2d.layers.features.Pipeline")], d);
const u = d;


/***/ }),

/***/ 20778:
/*!***********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/controllers/FeatureController2D.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ q)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../chunks/tslib.es6.js */ 18100);
/* harmony import */ var _core_Accessor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/Accessor.js */ 2299);
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/arrayUtils.js */ 19420);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../core/has.js */ 67087);
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../core/promiseUtils.js */ 30801);
/* harmony import */ var _core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../core/reactiveUtils.js */ 7521);
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../core/accessorSupport/decorators/property.js */ 9497);
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../core/accessorSupport/ensureType.js */ 83382);
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../core/accessorSupport/decorators/subclass.js */ 20891);
/* harmony import */ var _core_support_UpdatingHandles_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../core/support/UpdatingHandles.js */ 58454);
/* harmony import */ var _layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../layers/graphics/featureConversionUtils.js */ 50805);
/* harmony import */ var _layers_graphics_data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../layers/graphics/data/QueryEngine.js */ 59266);
/* harmony import */ var _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../layers/support/FieldsIndex.js */ 19346);
/* harmony import */ var _time_timeZoneUtils_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../time/timeZoneUtils.js */ 92691);
/* harmony import */ var _FeatureStore2D_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../FeatureStore2D.js */ 59690);
/* harmony import */ var _sources_createSource_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../sources/createSource.js */ 92768);
/* harmony import */ var _support_AttributeStore_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../support/AttributeStore.js */ 25534);
/* harmony import */ var _support_BinStore_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../support/BinStore.js */ 30441);
/* harmony import */ var _support_ClusterStore_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../support/ClusterStore.js */ 96674);
/* harmony import */ var _support_ComputedAttributeStorage_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../support/ComputedAttributeStorage.js */ 19049);
/* harmony import */ var _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../support/FeatureSetReaderJSON.js */ 80416);
/* harmony import */ var _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../support/UpdateToken.js */ 7408);
/* harmony import */ var _support_QueueProcessor_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../../../support/QueueProcessor.js */ 46103);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/























const w = 5e3,
  x = "tileRenderer.featuresView.attributeView.initialize",
  T = "tileRenderer.featuresView.attributeView.requestUpdate",
  A = "tileRenderer.featuresView.requestRender";
function j(e) {
  return "worker:port-closed" === e.name;
}
function k(e) {
  if (!(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.isAbortError)(e) && !j(e)) throw e;
}
function U(e) {
  return "feature" === e.type && "snapshot" === e.mode;
}
let R = class extends _core_Accessor_js__WEBPACK_IMPORTED_MODULE_2__["default"] {
  constructor() {
    super(...arguments), this._storage = new _support_ComputedAttributeStorage_js__WEBPACK_IMPORTED_MODULE_20__.ComputedAttributeStorage(), this._markedIdsBufId = this._storage.createBitset(), this._lastCleanup = performance.now(), this._cleanupNeeded = !1, this._invalidated = !1, this._tileToResolver = new Map(), this._didEdit = !1, this._updateVersion = 1, this._updatingHandles = new _core_support_UpdatingHandles_js__WEBPACK_IMPORTED_MODULE_10__.UpdatingHandles(), this.tileStore = null, this.config = null, this.processor = null, this.remoteClient = null, this.service = null;
  }
  initialize() {
    this._initStores(), this._initSource(), this._updateQueue = new _support_QueueProcessor_js__WEBPACK_IMPORTED_MODULE_23__.QueueProcessor({
      concurrency: "stream" === this._source.type ? 1 : 4,
      process: (e, t) => this._onTileMessage(e, {
        signal: t
      })
    }), this.addHandles([this.tileStore.on("update", this.onTileUpdate.bind(this)), (0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__.when)(() => !this.updating, () => this.onIdle())]);
  }
  _initSource() {
    const e = this.tileStore.tileScheme,
      t = () => this._updateQueue && this._updateQueue.length < 50,
      r = (e, t) => (this._invalidated = !0, this._patchTile(e, t));
    this._source = (0,_sources_createSource_js__WEBPACK_IMPORTED_MODULE_16__.createSource)(this.service, {
      ...this.service,
      fieldsIndex: this.fieldsIndex
    }, this.spatialReference, e, r, t, this.featureStore), this._proxyEvents();
  }
  _setStreamClientProperty(e, t) {
    this.remoteClient.invoke("setProperty", {
      propertyName: e,
      value: t
    }).catch(k);
  }
  _proxyEvents() {
    if ("stream" === this._source.type) {
      const e = this._source.events,
        t = this._source;
      this.addHandles([(0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__.watch)(() => t.connectionStatus, e => this._setStreamClientProperty("pipelineConnectionStatus", e), {
        initial: !0
      }), (0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__.watch)(() => t.errorString, e => this._setStreamClientProperty("pipelineErrorString", e), {
        initial: !0
      }), e.on("data-received", e => this.remoteClient.invoke("emitEvent", {
        name: "data-received",
        event: {
          attributes: e.attributes,
          centroid: e.centroid,
          geometry: e.geometry
        }
      }).catch(k)), e.on("message-received", e => this.remoteClient.invoke("emitEvent", {
        name: "message-received",
        event: e
      }).catch(k)), e.on("updateRate", e => this.remoteClient.invoke("emitEvent", {
        name: "update-rate",
        event: {
          ...e
        }
      }).catch(k))]);
    }
  }
  _initAttributeStore(e) {
    this.attributeStore || (this.attributeStore = new _support_AttributeStore_js__WEBPACK_IMPORTED_MODULE_17__["default"]({
      type: "remote",
      initialize: (e, t) => (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.ignoreAbortErrors)(this.remoteClient.invoke(x, e, {
        signal: t
      }).catch(k)),
      update: (e, t) => (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.ignoreAbortErrors)(this.remoteClient.invoke(T, e, {
        signal: t
      }).catch(k)),
      render: e => (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.ignoreAbortErrors)(this.remoteClient.invoke(A, void 0, {
        signal: e
      }).catch(k))
    }, e));
  }
  _initStores() {
    const e = "snapshot" === this.service.type ? "snapshot" : "on-demand",
      t = {
        geometryInfo: {
          geometryType: this.service.geometryType,
          hasM: !1,
          hasZ: !1
        },
        spatialReference: this.spatialReference,
        fieldsIndex: this.fieldsIndex
      };
    this.featureStore = new _FeatureStore2D_js__WEBPACK_IMPORTED_MODULE_15__.FeatureStore2D(t, this._storage, e);
  }
  _initQueryEngine(e) {
    const t = this;
    this.featureQueryEngine?.destroy(), this.featureQueryEngine = new _layers_graphics_data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_12__.QueryEngine({
      availableFields: e.availableFields,
      definitionExpression: e.schema.source.definitionExpression ?? void 0,
      fieldsIndex: _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_13__["default"].fromJSON(this.service.fieldsIndex),
      geometryType: this.service.geometryType,
      objectIdField: this.service.objectIdField,
      hasM: !1,
      hasZ: !1,
      spatialReference: this.spatialReference.toJSON(),
      cacheSpatialQueries: !0,
      featureStore: this.featureStore,
      aggregateAdapter: {
        getFeatureObjectIds(e) {
          if (null == t.aggregateStore) return [];
          return t.aggregateStore.getFeatureDisplayIdsForAggregate(e).map(e => t.getObjectId(e));
        }
      },
      timeInfo: this.service.timeInfo
    });
  }
  _initAggregateQueryEngine(e, t) {
    if (this.aggregateQueryEngine?.destroy(), null == e) return;
    const r = t.targets.aggregate.params.fields.slice();
    this.aggregateQueryEngine = new _layers_graphics_data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_12__.QueryEngine({
      definitionExpression: void 0,
      fieldsIndex: _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_13__["default"].fromLayerJSON({
        fields: r,
        dateFieldsTimeReference: {
          timeZoneIANA: _time_timeZoneUtils_js__WEBPACK_IMPORTED_MODULE_14__.utc
        }
      }),
      geometryType: e.geometryInfo.geometryType,
      objectIdField: e.objectIdField,
      hasM: e.geometryInfo.hasM,
      hasZ: e.geometryInfo.hasZ,
      spatialReference: this.spatialReference.toJSON(),
      cacheSpatialQueries: !1,
      featureStore: e,
      aggregateAdapter: {
        getFeatureObjectIds: e => []
      }
    });
  }
  destroy() {
    this._updateQueue.destroy(), this._source.destroy(), this.featureQueryEngine?.destroy(), this.aggregateQueryEngine?.destroy(), this.attributeStore?.destroy();
    for (const e of this.tileStore.tiles) this._source.unsubscribe(e);
    clearInterval(this._checkUpdating), this._updatingHandles.destroy();
  }
  get fieldsIndex() {
    return _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_13__["default"].fromJSON(this.service.fieldsIndex);
  }
  get spatialReference() {
    return this.tileStore.tileScheme.spatialReference;
  }
  get dataUpdating() {
    return this._source.updatingHandles.updating;
  }
  get updating() {
    return this.isUpdating();
  }
  isUpdating() {
    const e = this._source.updatingHandles.updating,
      t = !this.attributeStore || this.attributeStore.updatingHandles.updating,
      r = e || t || this._updatingHandles.updating;
    if ((0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-log-updating")) {
      let s = `Updating FeatureController2D: ${r}\n`;
      s += `  -> updatingSource ${e}\n`;
      for (const e of this._source.subscriptions) s += `     ${e.tile.id} ${e.isDone}\n`;
      s += `  -> updatingAttributeStore ${t}\n`, s += `  -> updatingHandles ${this._updatingHandles.updating} (queue: ${this._updateQueue.length})\n`, console.log(s);
    }
    return r;
  }
  updateCustomParameters(e) {
    "stream" === this._source.type && this._source.updateCustomParameters(e);
  }
  enableEvent(e) {
    this._source.enableEvent(e.name, e.value);
  }
  pause() {
    this._updateQueue.pause(), this._updateQueue.clear();
  }
  resume() {
    this._updateQueue.resume();
  }
  pauseStream() {
    "stream" === this._source.type && this._source.pauseStream();
  }
  resumeStream() {
    "stream" === this._source.type && this._source.resumeStream();
  }
  sendMessageToSocket(e) {
    "stream" === this._source.type && this._source.sendMessageToSocket(e);
  }
  sendMessageToClient(e) {
    "stream" === this._source.type && this._source.sendMessageToClient(e);
  }
  _initAggregateStore(e) {
    const t = e.schema.targets?.aggregate?.type ?? null;
    if ((this.config?.schema.targets?.aggregate?.type ?? null) !== t && (null != this.aggregateStore && (this.removeHandles("valueRangesChanged"), this.aggregateStore.destroy(), this.aggregateStore = null), t)) {
      switch (t) {
        case "cluster":
          {
            const e = {
              geometryInfo: {
                geometryType: "esriGeometryPoint",
                hasM: !1,
                hasZ: !1
              },
              spatialReference: this.spatialReference,
              fieldsIndex: this.fieldsIndex,
              fields: this.service.fields
            };
            this.aggregateStore = new _support_ClusterStore_js__WEBPACK_IMPORTED_MODULE_19__.ClusterStore(e, this.spatialReference, this._storage, {
              ...this.service,
              fieldsIndex: this.fieldsIndex
            }), this.addHandles(this.aggregateStore.events.on("valueRangesChanged", e => {
              this.remoteClient.invoke("emitEvent", {
                name: "valueRangesChanged",
                event: {
                  valueRanges: e.valueRanges
                }
              }).catch(k);
            }), "valueRangesChanged");
            break;
          }
        case "bin":
          {
            const e = {
              geometryInfo: {
                geometryType: "esriGeometryPolygon",
                hasM: !1,
                hasZ: !1
              },
              spatialReference: this.spatialReference,
              fieldsIndex: this.fieldsIndex,
              fields: this.service.fields
            };
            this.aggregateStore = new _support_BinStore_js__WEBPACK_IMPORTED_MODULE_18__.BinStore(e, this.spatialReference, this._storage, {
              ...this.service,
              fieldsIndex: this.fieldsIndex
            });
            break;
          }
      }
      this.aggregateStore.onTileUpdate({
        added: this.tileStore.tiles,
        removed: []
      });
    }
  }
  update(e, t) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this._updateVersion++, (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug") && console.debug(`FeatureController2D::update: Token version ${_this._updateVersion}`), _this._initQueryEngine(t), _this._initAttributeStore(t), _this.pause(), _this.config?.timeZone !== t.timeZone && (e.mesh = !0, e.storage.data = !0, e.storage.filters = !0, e.targets.aggregate = !0, e.targets.feature = !0, _this.featureStore.invalidate()), yield Promise.all([_this._source.update(e, t.schema.source), _this.featureStore.updateSchema(e, t.schema.targets.feature), _this.attributeStore.update(e, t), _this.attributeStore.updateFilters(e, t, _this)]), _this._initAggregateStore(t), null != _this.aggregateStore && (yield _this.aggregateStore.updateSchema(e, t.schema.targets.aggregate)), _this._initAggregateQueryEngine(_this.aggregateStore, t.schema), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug") && e.describe(), _this._set("config", t);
    })();
  }
  applyUpdate(e) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      e.version = _this2._updateVersion, (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug") && console.debug(`FeatureController2D::applyUpdate: Token version ${e.version}`), e.mesh && _this2.clearTiles(), _this2._updateQueue.resume(), yield _this2._source.applyUpdate(e), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug") && console.debug("FeatureController2D::applyUpdate Waiting for source update to finish"), _this2.notifyChange("updating"), yield (0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__.whenOnce)(() => !_this2.updating), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug") && console.debug("FeatureController2D::applyUpdate Source update finsihed"), null != _this2.aggregateStore && (yield (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.after)(10), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug") && console.debug("FeatureController2D::applyUpdate Waiting for aggregate idle call"), yield (0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__.whenOnce)(() => !_this2.updating), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug") && console.debug("FeatureController2D::applyUpdate Aggregate idle called")), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug") && console.debug("FeatureController2D::applyUpdate Update finished");
    })();
  }
  onEdits({
    edits: e
  }) {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug") && console.debug("Applying Edit:", e), _this3._didEdit = !0;
      try {
        const t = e.removed.map(e => e.objectId && -1 !== e.objectId ? e.objectId : _this3._lookupObjectIdByGlobalId(e.globalId)),
          r = e.addOrModified.map(({
            objectId: e
          }) => e);
        _this3.featureStore.invalidate(), yield _this3._source.edit(r, t), _this3.clearTiles(), _this3.notifyChange("updating"), null != _this3.aggregateStore && _this3.aggregateStore.clear(), yield _this3._source.resend(), yield (0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__.whenOnce)(() => !_this3.updating);
      } catch (t) {}
    })();
  }
  refresh(e) {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (!e.dataChanged) {
        const e = _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_22__.UpdateToken.empty();
        return e.storage.filters = !0, _this4.applyUpdate(e);
      }
      _this4.featureStore.invalidate(), _this4.clearTiles(), _this4._source.refresh(_this4._updateVersion, e), _this4._cleanupNeeded = !0, _this4.notifyChange("updating"), yield (0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_6__.whenOnce)(() => !_this4.updating);
    })();
  }
  clearTiles() {
    for (const e of this.tileStore.tiles) this.processor.onTileClear(e, !1);
  }
  onTileUpdate(e) {
    null != this.aggregateStore && this.aggregateStore.onTileUpdate(e);
    for (const t of e.added) {
      const e = this._source.subscribe(t, this._updateVersion);
      "stream" !== this._source.type && this._updatingHandles.addPromise(e.done), this._level = t.level;
    }
    for (const t of e.removed) this._source.unsubscribe(t), this._cleanupNeeded = !0, this._tileToResolver.has(t.id) && (this._tileToResolver.get(t.id).resolve(), this._tileToResolver.delete(t.id));
    this.notifyChange("updating");
  }
  onIdle() {
    var _this5 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this5._invalidated && (_this5._invalidated = !1, null == _this5.aggregateStore && "heatmap" !== _this5.processor.type || (yield _this5._repushCurrentLevelTiles())), _this5._markAndSweep();
    })();
  }
  querySummaryStatistics({
    query: e,
    params: t
  }) {
    var _this6 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this6.featureQueryEngine.executeQueryForSummaryStatistics(e, t);
    })();
  }
  queryAggregateSummaryStatistics({
    query: e,
    params: t
  }) {
    var _this7 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this7.aggregateQueryEngine.executeQueryForSummaryStatistics(_this7._normalizeAggregateQuery(e), t);
    })();
  }
  queryUniqueValues({
    query: e,
    params: t
  }) {
    var _this8 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this8.featureQueryEngine.executeQueryForUniqueValues(e, t);
    })();
  }
  queryAggregateUniqueValues({
    query: e,
    params: t
  }) {
    var _this9 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this9.aggregateQueryEngine.executeQueryForUniqueValues(_this9._normalizeAggregateQuery(e), t);
    })();
  }
  queryClassBreaks({
    query: e,
    params: t
  }) {
    var _this10 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this10.featureQueryEngine.executeQueryForClassBreaks(e, t);
    })();
  }
  queryAggregateClassBreaks({
    query: e,
    params: t
  }) {
    var _this11 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this11.aggregateQueryEngine.executeQueryForClassBreaks(_this11._normalizeAggregateQuery(e), t);
    })();
  }
  queryHistogram({
    query: e,
    params: t
  }) {
    var _this12 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this12.featureQueryEngine.executeQueryForHistogram(e, t);
    })();
  }
  queryAggregateHistogram({
    query: e,
    params: t
  }) {
    var _this13 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this13.aggregateQueryEngine.executeQueryForHistogram(_this13._normalizeAggregateQuery(e), t);
    })();
  }
  queryExtent(e) {
    return this.featureQueryEngine.executeQueryForExtent(e);
  }
  queryAggregates(e) {
    return this.aggregateQueryEngine.executeQuery(this._normalizeAggregateQuery(e));
  }
  queryAggregateCount(e) {
    return this.aggregateQueryEngine.executeQueryForCount(this._normalizeAggregateQuery(e));
  }
  queryAggregateIds(e) {
    return this.aggregateQueryEngine.executeQueryForIds(this._normalizeAggregateQuery(e));
  }
  queryFeatures(e) {
    return this.featureQueryEngine.executeQuery(e);
  }
  queryVisibleFeatures(e) {
    var _this14 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const t = yield _this14.featureQueryEngine.executeQuery(e),
        r = t.objectIdFieldName;
      return t.features = t.features.filter(e => {
        const t = e.attributes[r],
          s = _this14.getDisplayId(t);
        return null != s && _this14.attributeStore.isVisible(s);
      }), t;
    })();
  }
  queryFeatureCount(e) {
    return this.featureQueryEngine.executeQueryForCount(e);
  }
  queryLatestObservations(e) {
    return this.featureQueryEngine.executeQueryForLatestObservations(e);
  }
  queryObjectIds(e) {
    return this.featureQueryEngine.executeQueryForIds(e);
  }
  queryStatistics() {
    var _this15 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this15.featureStore.storeStatistics;
    })();
  }
  getObjectId(e) {
    return this.featureStore.lookupObjectId(e, this._storage);
  }
  getDisplayId(e) {
    if (null != this.aggregateStore) {
      const t = this.aggregateStore.getDisplayId(e);
      if (null == t) {
        const t = this.featureStore.lookupDisplayId(e);
        return this.aggregateStore.getDisplayIdForReferenceId(t);
      }
      return t;
    }
    return this.featureStore.lookupDisplayId(e);
  }
  getFeatures(e) {
    const t = [],
      r = [];
    for (const s of e) {
      const e = null != this.aggregateStore ? this.getAggregate(s) : null;
      if (null != e) {
        if (null != e.attributes.referenceId) {
          const r = this.getFeature(e.attributes.referenceId);
          null != r && t.push(r);
        } else r.push(e);
      } else {
        const e = this.getFeature(s);
        null != e && t.push(e);
      }
    }
    return {
      features: t,
      aggregates: r
    };
  }
  getFeature(e) {
    const t = this.featureStore.lookupFeatureByDisplayId(e, this._storage);
    if (null == t) return null;
    const r = t.readHydratedGeometry(),
      s = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_11__.convertToGeometry)(r, t.geometryType, t.hasZ, t.hasM);
    return {
      attributes: t.readAttributes(),
      geometry: s
    };
  }
  getAggregate(e) {
    return null == this.aggregateStore ? null : this.aggregateStore.getAggregate(e);
  }
  getAggregates() {
    return null == this.aggregateStore ? [] : this.aggregateStore.getAggregates();
  }
  setHighlight(e) {
    var _this16 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const t = e.map(e => _this16.getDisplayId(e)).filter(_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_3__.isSome);
      return _this16.attributeStore.setHighlight(e, t);
    })();
  }
  _normalizeAggregateQuery(e) {
    const t = e.objectIds ?? [];
    for (const r of e.aggregateIds ?? []) t.push(r);
    return e.objectIds = t, e.aggregateIds = [], e;
  }
  _lookupObjectIdByGlobalId(e) {
    const t = this.service.globalIdField;
    if (null == t) throw new Error("Expected globalIdField to be defined");
    let r = null;
    if (this.featureStore.forEach(s => {
      e === s.readAttribute(t) && (r = s.getObjectId());
    }), null == r) throw new Error(`Expected to find a feature with globalId ${e}`);
    return r;
  }
  _repushCurrentLevelTiles() {
    var _this17 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const e = _this17.tileStore.tiles.filter(e => e.level === _this17._level);
      e.map( /*#__PURE__*/function () {
        var _ref = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (e) {
          return _this17._patchTile({
            type: "append",
            id: e.key.id,
            clear: !0,
            addOrUpdate: null,
            end: !1
          });
        });
        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }());
      const t = e.map( /*#__PURE__*/function () {
        var _ref2 = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (e) {
          return _this17._patchTile({
            type: "append",
            id: e.key.id,
            addOrUpdate: _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_21__.FeatureSetReaderJSON.fromOptimizedFeatures([], {
              ..._this17.service,
              fieldsIndex: _this17.fieldsIndex
            }),
            remove: [],
            end: !0,
            isRepush: !0,
            status: _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_22__.UpdateToken.empty()
          });
        });
        return function (_x2) {
          return _ref2.apply(this, arguments);
        };
      }());
      yield Promise.all(t);
    })();
  }
  _maybeForceCleanup() {
    performance.now() - this._lastCleanup > w && this._markAndSweep();
  }
  _patchTile(e, t) {
    const r = this._updateQueue.push(e, t).catch(e => {});
    return this._updatingHandles.addPromise(r);
  }
  _onTileMessage(e, t) {
    var _this18 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if ((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfAborted)(t), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_4__["default"])("esri-2d-update-debug")) {
        const t = e.addOrUpdate?.hasFeatures;
        console.debug(e.id, `FeatureController:onTileMessage: [clear:${e.clear}, end:${e.end}, features: ${t}]`);
      }
      const r = _this18.tileStore.get(e.id);
      if (!r) return;
      if (e.clear) return _this18.processor.onTileClear(r, e.end);
      const s = e.status;
      _this18._cleanupNeeded = !0;
      const i = [];
      for (const a of e.remove ?? []) {
        const e = _this18.featureStore.lookupDisplayId(a);
        e && i.push(e);
      }
      e.remove = i;
      try {
        if (null == e.addOrUpdate) return void _this18.processor.onTileMessage(r, {
          ...e,
          addOrUpdate: null
        }, null != _this18.aggregateStore, t).catch(_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfNotAbortError);
        if (e.addOrUpdate.setArcadeSpatialReference(_this18.spatialReference), _this18.featureStore.hasInstance(e.addOrUpdate.instance) && s.targets.feature || (s.targets.feature = !0, _this18.featureStore.onTileData(r, e, _this18.config?.timeZone)), !s.storage.data || !s.storage.filters) {
          s.storage.data = !0, s.storage.filters = !0, _this18.attributeStore.onTileData(r, e);
          "stream" === _this18._source.type || _this18._didEdit ? (yield _this18.attributeStore.sendUpdates(), (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfAborted)(t)) : _this18.attributeStore.sendUpdates();
        }
        if (null != _this18.aggregateStore && !s.targets.aggregate) {
          s.targets.aggregate = !0;
          const t = U(_this18._source) && _this18._source.loading,
            i = !U(_this18._source) || t || e.end;
          if (_this18.aggregateStore.onTileData(r, e, _this18._storage, _this18.attributeStore, _this18.config?.timeZone, i), !i) return;
          s.mesh || (_this18.attributeStore.onTileData(r, e), yield _this18.attributeStore.sendUpdates());
        }
        if (!s.mesh) {
          s.mesh = !0;
          const i = null != _this18.aggregateStore && "cluster" === _this18.aggregateStore.type;
          yield _this18.processor.onTileMessage(r, e, i, t), (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfAborted)(t);
        }
        _this18._maybeForceCleanup();
      } catch (n) {
        (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfNotAbortError)(n);
      }
    })();
  }
  _mark(e, t, r) {
    const s = (4294901760 & this._storage.getInstanceId(e)) >>> 16;
    e && (t.add(s), r.set(e));
  }
  _markAndSweep() {
    this._lastCleanup = performance.now();
    if (!(!("feature" === this._source.type && "snapshot" === this._source.mode) && ("stream" === this._source.type || this._cleanupNeeded))) return;
    this._cleanupNeeded = !1;
    const e = this._storage.getBitset(this._markedIdsBufId),
      t = new Set();
    e.clear();
    for (const r of this.tileStore.tiles) for (const s of this._source.readers(r.id)) {
      const r = s.getCursor();
      for (; r.next();) {
        let s = r.getDisplayId();
        if (!s) {
          const e = r.getObjectId();
          s = this.featureStore.lookupDisplayId(e);
        }
        this._mark(s, t, e);
      }
    }
    "symbol" === this.processor.type && this.processor.forEachBufferId(r => {
      this._mark(r, t, e);
    }), this._updateQueue.forEach(r => {
      for (const s of r.remove ?? []) {
        const r = this.featureStore.lookupDisplayId(s);
        this._mark(r, t, e);
      }
    }), null != this.aggregateStore && (this.aggregateStore.sweepFeatures(e, this.featureStore), "sweepAggregates" in this.aggregateStore && this.aggregateStore.sweepAggregates(this._storage, this.attributeStore, this._level)), this.featureStore.sweepFeatures(e, this._storage, this.attributeStore), this.featureStore.sweepFeatureSets(t);
  }
};
(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({
  constructOnly: !0
})], R.prototype, "tileStore", void 0), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)()], R.prototype, "config", void 0), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({
  readOnly: !0
})], R.prototype, "fieldsIndex", null), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)()], R.prototype, "processor", void 0), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({
  constructOnly: !0
})], R.prototype, "remoteClient", void 0), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)({
  constructOnly: !0
})], R.prototype, "service", void 0), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)()], R.prototype, "spatialReference", null), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)()], R.prototype, "dataUpdating", null), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_7__.property)()], R.prototype, "updating", null), R = (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_9__.subclass)("esri.views.2d.layers.features.controllers.FeatureController2D")], R);
const q = R;


/***/ }),

/***/ 73563:
/*!**************************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/controllers/support/sourceAdapters.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SourceAdapter": () => (/* binding */ m),
/* harmony export */   "createSourceAdapter": () => (/* binding */ y)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../core/has.js */ 67087);
/* harmony import */ var _core_workers_Connection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../core/workers/Connection.js */ 28247);
/* harmony import */ var _geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../geometry/support/quantizationUtils.js */ 6099);
/* harmony import */ var _layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../layers/graphics/featureConversionUtils.js */ 50805);
/* harmony import */ var _layers_ogc_ogcFeatureUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../layers/ogc/ogcFeatureUtils.js */ 79264);
/* harmony import */ var _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../layers/support/FieldsIndex.js */ 19346);
/* harmony import */ var _rest_query_operations_query_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../rest/query/operations/query.js */ 78170);
/* harmony import */ var _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../support/FeatureSetReaderJSON.js */ 80416);
/* harmony import */ var _support_FeatureSetReaderPBF_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../support/FeatureSetReaderPBF.js */ 38749);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/









class m {
  constructor(e) {
    this.service = e, this._arcadeLayerSchema = {
      ...e,
      fieldsIndex: _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_6__["default"].fromJSON(e.fieldsIndex)
    };
  }
  destroy() {}
}
function p(e) {
  return Array.isArray(e.source);
}
function l(e) {
  return "ogc-source" === e?.type;
}
function y(e) {
  const {
    capabilities: t
  } = e;
  return l(e.source) ? new F(e) : p(e) ? new h(e) : t.query.supportsFormatPBF && (0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("featurelayer-pbf") ? new d(e) : new S(e);
}
function f(_x) {
  return _f.apply(this, arguments);
}
function _f() {
  _f = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (t) {
    const r = new _core_workers_Connection_js__WEBPACK_IMPORTED_MODULE_2__["default"]();
    return yield r.open(t, {}), r;
  });
  return _f.apply(this, arguments);
}
class h extends m {
  constructor(e) {
    super(e), this._portsOpen = f(e.source).then(e => this.client = e);
  }
  destroy() {
    this.client.close(), this.client = null;
  }
  executeQuery(e, t) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield _this._portsOpen;
      const r = yield _this.client.invoke("queryFeatures", e.toJSON(), t);
      return _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_8__.FeatureSetReaderJSON.fromFeatureSet(r, _this._arcadeLayerSchema);
    })();
  }
}
class d extends m {
  executeQuery(e, t) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
          data: r
        } = yield (0,_rest_query_operations_query_js__WEBPACK_IMPORTED_MODULE_7__.executeQueryPBFBuffer)(_this2.service.source, e, t),
        a = !e.quantizationParameters;
      return _support_FeatureSetReaderPBF_js__WEBPACK_IMPORTED_MODULE_9__.FeatureSetReaderPBF.fromBuffer(r, _this2._arcadeLayerSchema, a);
    })();
  }
}
class S extends m {
  executeQuery(e, s) {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
        source: i,
        capabilities: o,
        spatialReference: u,
        objectIdField: m,
        geometryType: p
      } = _this3.service;
      if (null != e.quantizationParameters && !o.query.supportsQuantization) {
        const o = e.clone(),
          p = (0,_geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_3__.toQuantizationTransform)(o.quantizationParameters);
        o.quantizationParameters = null;
        const {
            data: l
          } = yield (0,_rest_query_operations_query_js__WEBPACK_IMPORTED_MODULE_7__.executeQuery)(i, o, u, s),
          y = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__.convertFromFeatureSet)(l, m);
        return (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__.quantizeOptimizedFeatureSet)(p, y), _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_8__.FeatureSetReaderJSON.fromOptimizedFeatureSet(y, _this3._arcadeLayerSchema);
      }
      const {
        data: l
      } = yield (0,_rest_query_operations_query_js__WEBPACK_IMPORTED_MODULE_7__.executeQuery)(i, e, _this3.service.spatialReference, s);
      return "esriGeometryPoint" === p && (l.features = l.features?.filter(e => {
        if (null != e.geometry) {
          const t = e.geometry;
          return Number.isFinite(t.x) && Number.isFinite(t.y);
        }
        return !0;
      })), _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_8__.FeatureSetReaderJSON.fromFeatureSet(l, _this3._arcadeLayerSchema);
    })();
  }
}
class F extends m {
  executeQuery(e, r) {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
        capabilities: i
      } = _this4.service;
      if (e.quantizationParameters && !i.query.supportsQuantization) {
        const i = e.clone(),
          o = (0,_geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_3__.toQuantizationTransform)(i.quantizationParameters);
        i.quantizationParameters = null;
        const n = yield (0,_layers_ogc_ogcFeatureUtils_js__WEBPACK_IMPORTED_MODULE_5__.queryOptimizedFeatureSet)(_this4.service.source, e, r);
        return (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__.quantizeOptimizedFeatureSet)(o, n), _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_8__.FeatureSetReaderJSON.fromOptimizedFeatureSet(n, _this4._arcadeLayerSchema);
      }
      const o = yield (0,_layers_ogc_ogcFeatureUtils_js__WEBPACK_IMPORTED_MODULE_5__.queryOptimizedFeatureSet)(_this4.service.source, e, r);
      return _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_8__.FeatureSetReaderJSON.fromOptimizedFeatureSet(o, _this4._arcadeLayerSchema);
    })();
  }
}


/***/ }),

/***/ 96916:
/*!**************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/processors.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "loadProcessorModule": () => (/* binding */ o)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function o(o) {
  return "heatmap" === o ? Promise.all(/*! import() */[__webpack_require__.e("common"), __webpack_require__.e("node_modules_arcgis_core_views_2d_layers_features_processors_HeatmapProcessor_js")]).then(__webpack_require__.bind(__webpack_require__, /*! ./processors/HeatmapProcessor.js */ 70113)) : Promise.all(/*! import() */[__webpack_require__.e("default-node_modules_arcgis_core_chunks_earcut_js"), __webpack_require__.e("default-node_modules_arcgis_core_geometry_support_TileClipper_js-node_modules_arcgis_core_vie-7188d8"), __webpack_require__.e("default-node_modules_arcgis_core_views_2d_engine_webgl_GeometryUtils_js-node_modules_arcgis_c-0fbeb5"), __webpack_require__.e("default-node_modules_arcgis_core_core_BidiEngine_js-node_modules_arcgis_core_views_2d_engine_-5573c1"), __webpack_require__.e("default-node_modules_arcgis_core_symbols_cim_cimAnalyzer_js"), __webpack_require__.e("default-node_modules_arcgis_core_geometry_libtess_js-node_modules_arcgis_core_views_2d_engine-c949c0"), __webpack_require__.e("default-node_modules_arcgis_core_views_2d_engine_webgl_mesh_MeshData_js-node_modules_arcgis_c-787976"), __webpack_require__.e("common"), __webpack_require__.e("node_modules_arcgis_core_core_floatRGBA_js-node_modules_arcgis_core_core_fontUtils_js-node_mo-ea24df")]).then(__webpack_require__.bind(__webpack_require__, /*! ./processors/SymbolProcessor.js */ 63481));
}


/***/ }),

/***/ 8608:
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/sources/BaseFeatureSource.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseFeatureSource": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../request.js */ 1897);
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/Error.js */ 32995);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/has.js */ 67087);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../core/Logger.js */ 28191);
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../core/promiseUtils.js */ 30801);
/* harmony import */ var _controllers_support_sourceAdapters_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../controllers/support/sourceAdapters.js */ 73563);
/* harmony import */ var _DataTileSource_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./DataTileSource.js */ 92457);
/* harmony import */ var _support_QueueProcessor_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../support/QueueProcessor.js */ 46103);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/








const u = 4;
class c extends _DataTileSource_js__WEBPACK_IMPORTED_MODULE_7__.DataTileSource {
  constructor(e) {
    var _this;
    (super(e), _this = this), this.type = "feature", this.mode = "on-demand", this._adapter = (0,_controllers_support_sourceAdapters_js__WEBPACK_IMPORTED_MODULE_6__.createSourceAdapter)(e.serviceInfo), this._queue = new _support_QueueProcessor_js__WEBPACK_IMPORTED_MODULE_8__.QueueProcessor({
      concurrency: 8,
      process: function () {
        var _ref = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (e) {
          if ((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfAborted)(e), null != e.tile) {
            const t = e.tile.key.id,
              {
                signal: r
              } = e,
              s = (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("esri-tiles-debug") ? {
                tile: t.replaceAll("/", "."),
                depth: e.depth
              } : void 0,
              i = yield _this._adapter.executeQuery(e.query, {
                signal: r,
                query: {
                  ...s,
                  ..._this._schema?.customParameters
                }
              });
            return i.level = e.tile.key.level, i;
          }
          return _this._adapter.executeQuery(e.query, {
            ...e,
            query: _this._schema?.customParameters
          });
        });
        return function process(_x) {
          return _ref.apply(this, arguments);
        };
      }()
    }), this._patchQueue = new _support_QueueProcessor_js__WEBPACK_IMPORTED_MODULE_8__.QueueProcessor({
      concurrency: 8,
      process: function () {
        var _ref2 = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (e) {
          if ((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfAborted)(e), null != e.tile) {
            const t = e.tile.key.id,
              {
                signal: r
              } = e,
              s = (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("esri-tiles-debug") ? {
                tile: t.replaceAll("/", "."),
                depth: e.depth
              } : void 0,
              i = yield _this._adapter.executeQuery(e.query, {
                signal: r,
                query: {
                  ...s,
                  ..._this._schema?.customParameters
                }
              });
            return i.level = e.tile.key.level, i;
          }
          return _this._adapter.executeQuery(e.query, {
            ...e,
            query: _this._schema?.customParameters
          });
        });
        return function process(_x2) {
          return _ref2.apply(this, arguments);
        };
      }()
    });
  }
  destroy() {
    super.destroy(), this._adapter.destroy(), this._queue.destroy(), this._patchQueue.destroy();
  }
  enqueueQuery(e, t) {
    return this.updatingHandles.addPromise(this._queue.push(e, t));
  }
  enqueuePatchQuery(e, t) {
    return this.updatingHandles.addPromise(this._patchQueue.push(e, t));
  }
  get maxRecordCountFactor() {
    const {
      query: e
    } = this._serviceInfo.capabilities;
    return e.supportsMaxRecordCountFactor ? u : null;
  }
  get maxPageSize() {
    const {
      query: e
    } = this._serviceInfo.capabilities;
    return (e.maxRecordCount ?? 8e3) * (this.maxRecordCountFactor ?? 1);
  }
  get pageSize() {
    return Math.min(8e3, this.maxPageSize);
  }
  enableEvent(e, t) {}
  subscribe(e, s) {
    const a = super.subscribe(e, s);
    return this._fetchDataTile(e).catch(s => {
      (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.isAbortError)(s) || _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__["default"].getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("mapview-query-error", "Encountered error when fetching tile", {
        tile: e,
        error: s
      }));
    }), a;
  }
  unsubscribe(e) {
    super.unsubscribe(e);
  }
  readers(e) {
    return this._subscriptions.get(e).readers();
  }
  query(e, t = {}) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const r = t.query ?? {};
      return _this2._adapter.executeQuery(e, {
        ...t,
        query: {
          ...r,
          ..._this2._schema?.customParameters
        }
      });
    })();
  }
  queryLastEditDate() {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const t = _this3._serviceInfo.source,
        r = {
          ...t.query,
          f: "json"
        };
      return (yield (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(t.path, {
        query: r,
        responseType: "json"
      })).data.editingInfo.lastEditDate;
    })();
  }
  createTileQuery(e, t = {}) {
    const r = this._serviceInfo.geometryType,
      s = this.createQuery(t);
    s.quantizationParameters = t.quantizationParameters ?? e.getQuantizationParameters(), s.resultType = "tile", s.geometry = e.extent, this._serviceInfo.capabilities.query.supportsQuantization ? "esriGeometryPolyline" === r && (s.maxAllowableOffset = e.resolution * (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("feature-polyline-generalization-factor")) : "esriGeometryPolyline" !== r && "esriGeometryPolygon" !== r || (s.maxAllowableOffset = e.resolution, "esriGeometryPolyline" === r && (s.maxAllowableOffset *= (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("feature-polyline-generalization-factor")));
    const i = this._serviceInfo.capabilities.query;
    return s.defaultSpatialReferenceEnabled = i.supportsDefaultSpatialReference, s.compactGeometryEnabled = i.supportsCompactGeometry, s;
  }
  _executePatchQuery(e, t, r, s) {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const i = t.clone();
      i.outFields = [_this4._serviceInfo.objectIdField, ...r], i.returnCentroid = !1, i.returnGeometry = !1;
      const a = null != i.start ? i.start / 8e3 : 0,
        o = s.signal;
      return yield _this4.enqueuePatchQuery({
        tile: e,
        query: i,
        signal: o,
        depth: a
      });
    })();
  }
  _resend(e, t) {
    var _this5 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
          query: r,
          message: i
        } = e,
        a = null != r.outFields ? r.outFields : [],
        o = _this5._queryInfo.outFields,
        n = o.filter(e => !a.includes(e));
      if (null != i.addOrUpdate) {
        if (n.length) try {
          const e = _this5._subscriptions.get(i.id).tile,
            a = yield _this5._executePatchQuery(e, r, n, t);
          (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfAborted)(t), r.outFields = o, i.addOrUpdate.joinAttributes(a), _this5._onMessage({
            ...i,
            end: i.end,
            type: "append"
          });
        } catch (u) {} else _this5._onMessage({
          ...i,
          type: "append"
        });
      } else _this5._onMessage({
        ...i,
        type: "append"
      });
    })();
  }
  _resendSubscription(e) {
    var _this6 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if ((0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("esri-2d-update-debug") && console.debug(e.tile.id, "Resend Subscription"), e.empty) return _this6._onMessage({
        id: e.tile.id,
        addOrUpdate: null,
        end: !1,
        type: "append"
      });
      const t = e.signal;
      for (const r of e.requests.done) yield _this6._resend(r, {
        signal: t
      });
      return null != e.edits ? _this6._onMessage(e.edits) : void 0;
    })();
  }
  resend() {
    var _this7 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const e = Array.from(_this7._subscriptions.values());
      yield Promise.all(e.map(e => _this7._resendSubscription(e)));
    })();
  }
}


/***/ }),

/***/ 92457:
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/sources/DataTileSource.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataTileSource": () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _TimeExtent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../TimeExtent.js */ 55025);
/* harmony import */ var _core_Evented_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/Evented.js */ 95442);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/has.js */ 67087);
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../core/promiseUtils.js */ 30801);
/* harmony import */ var _core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../core/accessorSupport/diffUtils.js */ 51118);
/* harmony import */ var _core_support_UpdatingHandles_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../core/support/UpdatingHandles.js */ 58454);
/* harmony import */ var _layers_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../layers/support/arcgisLayerUrl.js */ 4583);
/* harmony import */ var _rest_support_Query_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../rest/support/Query.js */ 28665);
/* harmony import */ var _DataTileSubscription_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DataTileSubscription.js */ 954);
/* harmony import */ var _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../support/UpdateToken.js */ 7408);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/










function p(e, s) {
  const t = new Set();
  return e && e.forEach(e => t.add(e)), s && s.forEach(e => t.add(e)), t.has("*") ? ["*"] : Array.from(t);
}
class m {
  constructor(e) {
    this.updatingHandles = new _core_support_UpdatingHandles_js__WEBPACK_IMPORTED_MODULE_6__.UpdatingHandles(), this.events = new _core_Evented_js__WEBPACK_IMPORTED_MODULE_2__["default"](), this._resolver = (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.createResolver)(), this._didEdit = !1, this._subscriptions = new Map(), this._outSR = e.outSR, this._serviceInfo = e.serviceInfo, this._onTileUpdateMessage = e.onMessage, this._arcadeLayerSchema = e.arcadeLayerSchema;
  }
  destroy() {
    for (const e of this._subscriptions.values()) e.abort();
    this.updatingHandles.destroy();
  }
  get subscriptions() {
    return this._subscriptions.values();
  }
  _onMessage(e) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const s = _this._subscriptions.get(e.id);
      if (!s) return;
      const t = {
        ...e,
        remove: e.remove ?? [],
        status: e.status ?? _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_10__.UpdateToken.empty()
      };
      return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.ignoreAbortErrors)(_this._onTileUpdateMessage(t, s.options));
    })();
  }
  update(s, t) {
    const i = t.fields.length;
    t.outFields = p(this._schema?.outFields, t.outFields), t.outFields = t.outFields.length >= .75 * i ? ["*"] : t.outFields, t.outFields.sort();
    const r = (0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_5__.diff)(this._schema, t);
    if (!r) return;
    (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("esri-2d-update-debug") && console.debug("Applying Update - Source:", r);
    const a = "orderByFields" in this._serviceInfo && this._serviceInfo.orderByFields ? this._serviceInfo.orderByFields : this._serviceInfo.objectIdField + " ASC",
      d = this._serviceInfo.source,
      h = {
        returnCentroid: !(null !== d && "object" == typeof d && "path" in d && (0,_layers_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_7__.isHostedAgolService)(d.path)) && "esriGeometryPolygon" === this._serviceInfo.geometryType,
        returnGeometry: !0,
        timeReferenceUnknownClient: "stream" !== this._serviceInfo.type && this._serviceInfo.timeReferenceUnknownClient,
        outFields: t.outFields,
        outSpatialReference: this._outSR,
        orderByFields: [a],
        where: t.definitionExpression || "1=1",
        gdbVersion: t.gdbVersion,
        historicMoment: t.historicMoment,
        timeExtent: t.timeExtent ? _TimeExtent_js__WEBPACK_IMPORTED_MODULE_1__["default"].fromJSON(t.timeExtent) : null
      },
      l = this._schema && (0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_5__.hasDiff)(r, "outFields");
    this._schema && (0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_5__.hasDiffAny)(r, ["timeExtent", "definitionExpression", "gdbVersion", "historicMoment", "customParameters"]) && (s.why.mesh.push("Layer filter and/or custom parameters changed"), s.why.source.push("Layer filter and/or custom parameters changed"), s.mesh = !0, s.source = !0, s.queryFilter = !0), l && (s.why.source.push("Layer required fields changed"), s.source = !0), (0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_5__.diff)(h, this._queryInfo) && (this._queryInfo = h), this._schema = t, this._resolver.resolve();
  }
  whenInitialized() {
    return this._resolver.promise;
  }
  applyUpdate(e) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (e.queryFilter || e.source && _this2._didEdit) return _this2.refresh(e.version), void (_this2._didEdit = !1);
      _this2._subscriptions.forEach(s => s.applyUpdate(e)), yield _this2.resend();
    })();
  }
  refresh(e, s) {
    for (const t of this._tiles()) this.unsubscribe(t), this.subscribe(t, e);
  }
  subscribe(e, s) {
    const t = new _DataTileSubscription_js__WEBPACK_IMPORTED_MODULE_9__.DataTileSubscription(e, s);
    return this._subscriptions.set(e.id, t), t;
  }
  unsubscribe(e) {
    const s = this.getSubscription(e.id);
    null != s && s.abort(), this._subscriptions.delete(e.id);
  }
  createQuery(e = {}) {
    const s = this._queryInfo.historicMoment ? new Date(this._queryInfo.historicMoment) : null;
    return new _rest_support_Query_js__WEBPACK_IMPORTED_MODULE_8__["default"]({
      ...this._queryInfo,
      historicMoment: s,
      ...e
    });
  }
  getSubscription(e) {
    return this._subscriptions.has(e) ? this._subscriptions.get(e) : null;
  }
  queryLastEditDate() {
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      throw new Error("Service does not support query type");
    })();
  }
  query(e, s) {
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      throw new Error("Service does not support query");
    })();
  }
  *_tiles() {
    const e = Array.from(this._subscriptions.values());
    for (const s of e) yield s.tile;
  }
  edit(e, s) {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return _this3.updatingHandles.addPromise(_this3._edit(e, s));
    })();
  }
  _edit(e, s) {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const t = Array.from(_this4._subscriptions.values()),
        i = t.map(({
          tile: e
        }) => e);
      for (const r of t) r.removeIds(s);
      if (e.length) {
        const t = i.map(s => {
            const t = _this4.createTileQuery(s);
            return t.objectIds = e, {
              tile: s,
              query: t
            };
          }).map( /*#__PURE__*/function () {
            var _ref = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* ({
              tile: e,
              query: s
            }) {
              return {
                tile: e,
                result: yield _this4.query(s, {
                  query: {
                    tile: (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("esri-tiles-debug") ? e.id.replaceAll("/", ".") : void 0
                  }
                }),
                query: s
              };
            });
            return function (_x) {
              return _ref.apply(this, arguments);
            };
          }()),
          o = (yield (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.eachAlwaysValues)(t)).map( /*#__PURE__*/function () {
            var _ref2 = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* ({
              tile: t,
              result: i
            }) {
              if (!i.hasFeatures && !s.length && !e.length) return;
              const r = _this4._subscriptions.get(t.key.id);
              r && r.edit(i, e);
            });
            return function (_x2) {
              return _ref2.apply(this, arguments);
            };
          }());
        yield Promise.allSettled(o);
      }
      _this4._didEdit = !0;
    })();
  }
}


/***/ }),

/***/ 954:
/*!********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/sources/DataTileSubscription.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataTileSubscription": () => (/* binding */ a)
/* harmony export */ });
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/arrayUtils.js */ 19420);
/* harmony import */ var _core_CircularArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/CircularArray.js */ 30248);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/has.js */ 67087);
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/promiseUtils.js */ 30801);
/* harmony import */ var _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../support/FeatureSetReaderJSON.js */ 80416);
/* harmony import */ var _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../support/UpdateToken.js */ 7408);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/






class a {
  constructor(e, i) {
    this.requests = {
      done: new Array(),
      stream: new _core_CircularArray_js__WEBPACK_IMPORTED_MODULE_1__["default"](10)
    }, this._edits = null, this._abortController = new AbortController(), this._version = 0, this._isDone = !1, this.didSend = !1, this.tile = e, this._version = i, this._resolver = (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.createResolver)(), this._resolver.promise.catch(e => (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfNotAbortError)(e));
  }
  get signal() {
    return this._abortController.signal;
  }
  get options() {
    return {
      signal: this._abortController.signal
    };
  }
  get empty() {
    return !this.requests.done.length && null == this.edits;
  }
  get edits() {
    return this._edits;
  }
  get done() {
    return this._resolver.promise;
  }
  get isDone() {
    return this._isDone;
  }
  resolve() {
    this._isDone = !0, this._resolver.resolve();
  }
  clear() {
    this.requests.done = [];
  }
  applyUpdate(e) {
    this.requests.done.forEach(s => s.message.status.unset(e)), this._version = e.version, null != this._edits && this._edits.status.unset(e);
  }
  add(e) {
    e.message.status = e.message.status ?? _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_5__.UpdateToken.empty(), e.message.status.version = this._version, (0,_core_has_js__WEBPACK_IMPORTED_MODULE_2__["default"])("esri-2d-update-debug") && console.debug(this.tile.id, "DataTileSubscription:add", this._version), e.message.end && (this.requests.done.forEach(e => {
      null != e.message && e.message.end && (e.message.end = !1);
    }), this._resolver.resolve(), this._isDone = !0), this.requests.done.push(e);
  }
  edit(s, t) {
    const r = s.getQuantizationTransform(),
      i = s.fullSchema(),
      a = Array.from(s.features()).filter(_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__.isSome),
      n = [...t, ...a.map(e => e.objectId)];
    if (this.removeIds(n), this._invalidate(), null == this._edits) return void (this._edits = {
      type: "append",
      addOrUpdate: _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_4__.FeatureSetReaderJSON.fromOptimizedFeatures(a, i, r),
      id: this.tile.id,
      status: _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_5__.UpdateToken.empty(),
      end: !0
    });
    this.requests.done.forEach(e => e.message.end = !1);
    this._edits.addOrUpdate.append(s.features());
  }
  *readers() {
    for (const {
      message: e
    } of this.requests.done) null != e.addOrUpdate && (yield e.addOrUpdate);
    null != this._edits?.addOrUpdate && (yield this._edits.addOrUpdate);
  }
  _invalidate() {
    for (const e of this.requests.done) e.message.status = _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_5__.UpdateToken.empty();
    null != this._edits && (this._edits.status = _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_5__.UpdateToken.empty());
  }
  removeIds(e) {
    this._invalidate();
    for (const {
      message: s
    } of this.requests.done) {
      const t = s.addOrUpdate;
      null != t && (t.removeIds(e), t.isEmpty && ((0,_core_has_js__WEBPACK_IMPORTED_MODULE_2__["default"])("esri-2d-update-debug") && console.debug("Removing FeatureSetReader"), s.addOrUpdate = null));
    }
    null != this._edits?.addOrUpdate && this._edits.addOrUpdate.removeIds(e), this.requests.done = this.requests.done.filter(e => e.message.addOrUpdate || e.message.end);
  }
  abort() {
    this._abortController.abort(), this._resolver.reject((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.createAbortError)());
  }
}


/***/ }),

/***/ 10452:
/*!**********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/sources/DrillDownFeatureSource.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DrillDownFeatureSource": () => (/* binding */ a)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/has.js */ 67087);
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/promiseUtils.js */ 30801);
/* harmony import */ var _BaseFeatureSource_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BaseFeatureSource.js */ 8608);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/



const s = (0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("esri-mobile"),
  i = {
    maxDrillLevel: s ? 1 : 4,
    maxRecordCountFactor: s ? 1 : 3
  };
class a extends _BaseFeatureSource_js__WEBPACK_IMPORTED_MODULE_3__.BaseFeatureSource {
  constructor(e) {
    super(e);
  }
  _fetchDataTile(r) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const s = _this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,
        a = _this._subscriptions.get(r.key.id),
        o = a.signal,
        n = r.getQuantizationParameters();
      let c = 0;
      const d = /*#__PURE__*/function () {
        var _ref = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (u, l) {
          const m = _this._queryInfo,
            p = _this.createTileQuery(u, {
              maxRecordCountFactor: s ? i.maxRecordCountFactor : void 0,
              returnExceededLimitFeatures: !1,
              quantizationParameters: n
            });
          c++;
          try {
            const t = yield _this.enqueueQuery({
              tile: r,
              query: p,
              signal: o,
              depth: l
            });
            if (c--, (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_2__.throwIfAborted)(o), !t) return;
            if (m !== _this._queryInfo) return void d(u, l);
            if (t.exceededTransferLimit && l < i.maxDrillLevel) {
              for (const e of u.createChildTiles()) d(e, l + 1);
              return;
            }
            const s = {
              id: r.id,
              addOrUpdate: t,
              end: 0 === c,
              type: "append"
            };
            a.add({
              query: p,
              message: s
            }), _this._onMessage(s);
          } catch (f) {
            if (!(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_2__.isAbortError)(f)) {
              const e = {
                id: r.id,
                addOrUpdate: null,
                end: !0,
                type: "append"
              };
              a.add({
                query: p,
                message: e
              }), _this._onMessage(e);
            }
          }
        });
        return function d(_x, _x2) {
          return _ref.apply(this, arguments);
        };
      }();
      d(r, 0);
    })();
  }
}


/***/ }),

/***/ 75742:
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/sources/PagedFeatureSource.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PagedFeatureSource": () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/Error.js */ 32995);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/Logger.js */ 28191);
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/promiseUtils.js */ 30801);
/* harmony import */ var _BaseFeatureSource_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./BaseFeatureSource.js */ 8608);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/




class o extends _BaseFeatureSource_js__WEBPACK_IMPORTED_MODULE_4__.BaseFeatureSource {
  constructor(e) {
    super(e);
  }
  _fetchDataTile(s) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const i = 6,
        o = 20,
        n = _this._subscriptions.get(s.key.id);
      let d = !1,
        c = 0,
        u = 0;
      const h = (e, t) => {
        u--, (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(n);
        const r = s.id,
          i = e.reader,
          o = e.query;
        if (!i.exceededTransferLimit) {
          if (d = !0, 0 !== t && !i.hasFeatures) {
            const e = {
              id: r,
              addOrUpdate: i,
              end: 0 === u,
              type: "append"
            };
            return n.add({
              message: e,
              query: o
            }), void _this._onMessage(e);
          }
          const e = {
            id: r,
            addOrUpdate: i,
            end: 0 === u,
            type: "append"
          };
          return n.add({
            message: e,
            query: o
          }), void _this._onMessage(e);
        }
        const c = {
          id: r,
          addOrUpdate: i,
          end: d && 0 === u,
          type: "append"
        };
        n.add({
          message: c,
          query: o
        }), _this._onMessage(c);
      };
      let m = 0,
        p = 0;
      for (; !d && p++ < o;) {
        let o;
        for (let a = 0; a < m + 1; a++) {
          const a = c++;
          u++, o = _this._fetchDataTilePage(s, a, n).then(e => e && h(e, a)).catch(a => {
            if (d = !0, !(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.isAbortError)(a)) {
              _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.views.2d.layers.features.sources.PagedFeatureSource").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("mapview-query-error", "Encountered error when fetching tile", {
                tile: s,
                error: a
              }));
              const r = {
                  id: s.id,
                  addOrUpdate: null,
                  end: d,
                  type: "append"
                },
                i = {
                  start: _this.pageSize * c,
                  num: _this.pageSize,
                  returnExceededLimitFeatures: !0,
                  quantizationParameters: s.getQuantizationParameters()
                };
              null != _this.maxRecordCountFactor && (i.maxRecordCountFactor = _this.maxRecordCountFactor);
              const o = _this.createTileQuery(s, i);
              n.add({
                message: r,
                query: o
              }), _this._onMessage(r);
            }
          });
        }
        yield o, (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(n), m = Math.min(m + 2, i);
      }
    })();
  }
  _fetchDataTilePage(e, t, r) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r);
      const i = _this2._queryInfo,
        o = {
          start: _this2.pageSize * t,
          num: _this2.pageSize,
          returnExceededLimitFeatures: !0,
          quantizationParameters: e.getQuantizationParameters()
        };
      null != _this2.maxRecordCountFactor && (o.maxRecordCountFactor = _this2.maxRecordCountFactor);
      const n = _this2.createTileQuery(e, o);
      try {
        const s = r.signal,
          o = yield _this2.enqueueQuery({
            tile: e,
            query: n,
            signal: s,
            depth: t
          });
        return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r), o ? i !== _this2._queryInfo ? _this2._fetchDataTilePage(e, t, r) : {
          reader: o,
          query: n
        } : null;
      } catch (d) {
        return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfNotAbortError)(d), null;
      }
    })();
  }
}


/***/ }),

/***/ 88774:
/*!*********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/sources/SnapshotFeatureSource.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SnapshotFeatureSource": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../chunks/tslib.es6.js */ 18100);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/has.js */ 67087);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/Logger.js */ 28191);
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../core/maybe.js */ 53661);
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../core/promiseUtils.js */ 30801);
/* harmony import */ var _core_RandomLCG_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../core/RandomLCG.js */ 37313);
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../core/accessorSupport/decorators/subclass.js */ 20891);
/* harmony import */ var _BaseFeatureSource_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./BaseFeatureSource.js */ 8608);
/* harmony import */ var _support_FeatureSetReaderPBFIndirect_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../support/FeatureSetReaderPBFIndirect.js */ 10002);
/* harmony import */ var _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../support/UpdateToken.js */ 7408);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/










function l(e, t, s) {
  const r = e.getXHydrated(),
    o = e.getYHydrated(),
    a = t.getColumnForX(r),
    n = Math.floor(t.normalizeCol(a));
  return `${s}/${Math.floor(t.getRowForY(o))}/${n}`;
}
function h(e, t) {
  if (null == e) return null;
  const s = t.transform,
    r = e.getQuantizationTransform();
  if (null == r) {
    const [t, r] = s.scale,
      [o, a] = s.translate,
      n = -o / t,
      i = 1 / t,
      d = a / r,
      u = 1 / -r;
    return e.transform(n, d, i, u);
  }
  const [o, a] = r.scale,
    [n, i] = r.translate,
    [d, u] = s.scale,
    [l, h] = s.translate,
    c = o / d,
    g = (n - l) / d,
    p = a / u,
    _ = (-i + h) / u;
  return e.transform(g, _, c, p);
}
let c = class extends _BaseFeatureSource_js__WEBPACK_IMPORTED_MODULE_8__.BaseFeatureSource {
  constructor(e) {
    super(e), this.mode = "snapshot", this._loading = !0, this._controller = new AbortController(), this._downloadPromise = null, this._didSendEnd = !1, this._queries = new Array(), this._invalidated = !1, this._hasAggregates = !1, this._random = new _core_RandomLCG_js__WEBPACK_IMPORTED_MODULE_6__["default"](1e3), this._store = e.store, this._markedIdsBufId = this._store.storage.createBitset();
  }
  destroy() {
    super.destroy(), this._controller.abort();
  }
  get loading() {
    return this._loading;
  }
  get _signal() {
    return this._controller.signal;
  }
  update(e, t) {
    super.update(e, t), this._featureCount ??= t.initialFeatureCount, null != t.changedFeatureCount && (this._featureCount = t.changedFeatureCount), this._hasAggregates = !!e.targets?.aggregate;
  }
  resend(e = !1) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (yield _this._downloadPromise, _this._invalidated || e) {
        const e = _this._featureCount;
        return (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_4__.assertIsSome)(e, "Expected featureCount to be defined"), _this._invalidated = !1, _this._subscriptions.forEach(e => e.clear()), _this._downloadPromise = _this._download(e), void (yield _this._downloadPromise);
      }
      const t = _this._queries.map(({
        query: e,
        reader: t
      }) => _this._sendPatchQuery(e, t));
      yield Promise.all(t), _this._subscriptions.forEach(e => {
        e.requests.done.forEach(e => _this._onMessage(e.message));
      });
    })();
  }
  refresh(e, t) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      t && (_this2._featureCount = t.featureCount), yield _this2.resend(!0);
    })();
  }
  _sendPatchQuery(e, t) {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const s = null != e.outFields ? e.outFields : [],
        o = _this3._queryInfo.outFields,
        a = o.filter(e => !s.includes(e));
      if (!a.length) return;
      const n = e.clone(),
        i = _this3._signal;
      n.returnGeometry = !1, n.returnCentroid = !1, n.outFields = a, e.outFields = o;
      const d = yield _this3.enqueueQuery({
        query: n,
        depth: 0,
        signal: i
      });
      (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfAborted)({
        signal: i
      }), t.joinAttributes(d);
    })();
  }
  _fetchDataTile(e) {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this4._downloadPromise ??= _this4._download(_this4._featureCount);
      const t = _this4._store.search(e),
        s = _this4._subscriptions.get(e.key.id),
        r = t.length - 1;
      for (let d = 0; d < r; d++) {
        const r = h(t[d], e),
          a = {
            type: "append",
            id: e.id,
            addOrUpdate: r,
            end: !1,
            status: _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_10__.UpdateToken.empty()
          };
        s.add({
          query: null,
          message: a
        }), _this4._hasAggregates || (yield (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.after)(1)), _this4._onMessage(a);
      }
      const a = h(r >= 0 ? t[r] : null, e),
        n = _this4._didSendEnd,
        i = {
          type: "append",
          id: e.id,
          addOrUpdate: a,
          end: n,
          status: _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_10__.UpdateToken.empty()
        };
      s.add({
        query: null,
        message: i
      }), _this4._onMessage(i);
    })();
  }
  _download(e) {
    var _this5 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      try {
        yield _this5.whenInitialized();
        const t = _this5._store.storage.getBitset(_this5._markedIdsBufId),
          s = new Set();
        t.clear();
        const r = Math.ceil(e / _this5.pageSize),
          o = Array.from({
            length: r
          }, (e, t) => t).sort((e, t) => _this5._random.getInt() - _this5._random.getInt()).map(e => _this5._downloadPage(e, t, s));
        yield Promise.all(o), _this5._store.sweepFeatures(t, _this5._store.storage), _this5._store.sweepFeatureSets(s);
      } catch (s) {
        _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__["default"].getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource").error("mapview-snapshot-source", "Encountered and error when downloading feature snapshot", s);
      }
      _this5._sendEnd(), _this5._loading = !1;
    })();
  }
  _downloadPage(e, t, s) {
    var _this6 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const o = _this6.pageSize,
        a = {
          start: e * o,
          num: o,
          cacheHint: !0
        };
      null != _this6.maxRecordCountFactor && (a.maxRecordCountFactor = _this6.maxRecordCountFactor);
      const n = _this6.createQuery(a),
        i = _this6._signal,
        d = yield _this6.enqueueQuery({
          query: n,
          depth: e,
          signal: i
        });
      (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.throwIfAborted)({
        signal: i
      }), _this6._queries.push({
        query: n,
        reader: d
      }), _this6._store.insert(d), s.add(d.instance);
      const u = d.getCursor();
      for (; u.next();) t.set(u.getDisplayId());
      _this6._send(d);
    })();
  }
  _send(e) {
    if (!this._subscriptions.size) return;
    let t = null;
    const s = new Map(),
      r = new Set(),
      o = new Map();
    this._subscriptions.forEach(e => {
      const a = e.tile;
      s.set(a.key.id, null), t = a.tileInfoView, r.add(a.level);
      const {
          row: n,
          col: i
        } = a.key,
        d = `${a.level}/${n}/${i}`,
        u = o.get(d) ?? [];
      u.push(e), o.set(d, u);
    });
    for (const a of r) {
      const r = t.getLODInfoAt(a),
        n = e.getCursor();
      for (; n.next();) {
        const e = l(n, r, a),
          t = n.getIndex();
        if (o.has(e)) for (const r of o.get(e)) {
          const e = r.tile.id;
          let o = s.get(e);
          null == o && (o = [], s.set(e, o)), o.push(t);
        }
      }
    }
    s.forEach((t, s) => {
      if (null != t) {
        const r = this._subscriptions.get(s),
          o = {
            type: "append",
            id: s,
            addOrUpdate: h(_support_FeatureSetReaderPBFIndirect_js__WEBPACK_IMPORTED_MODULE_9__.FeatureSetReaderIndirect.from(e, t), r.tile),
            end: !1,
            status: _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_10__.UpdateToken.empty()
          };
        r.add({
          query: null,
          message: o
        }), this._onMessage(o);
      }
    });
  }
  _sendEnd() {
    this._subscriptions.forEach(e => {
      const t = {
        type: "append",
        id: e.tile.id,
        addOrUpdate: null,
        end: !0,
        status: _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_10__.UpdateToken.empty()
      };
      e.add({
        query: null,
        message: t
      }), this._onMessage(t);
    }), this._didSendEnd = !0;
  }
};
c = (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_1__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__.subclass)("esri.view.2d.layers.features.sources.SnapshotFeatureSource")], c);


/***/ }),

/***/ 13185:
/*!*********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/sources/StreamConnectionState.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StreamConnectionState": () => (/* binding */ s)
/* harmony export */ });
/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../chunks/tslib.es6.js */ 18100);
/* harmony import */ var _core_Accessor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/Accessor.js */ 2299);
/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/accessorSupport/decorators/property.js */ 9497);
/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/accessorSupport/decorators/subclass.js */ 20891);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/




let s = class extends _core_Accessor_js__WEBPACK_IMPORTED_MODULE_1__["default"] {
  constructor(r) {
    super(r);
  }
  get connectionStatus() {
    return this.connection?.connectionStatus;
  }
  get errorString() {
    return this.connection?.errorString;
  }
};
(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.property)()], s.prototype, "connection", void 0), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.property)()], s.prototype, "connectionStatus", null), (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.property)()], s.prototype, "errorString", null), s = (0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_3__.subclass)("esri.views.2d.layers.features.sources.StreamConnectionState")], s);


/***/ }),

/***/ 73474:
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/sources/StreamSource.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StreamSource": () => (/* binding */ I)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_handleUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/handleUtils.js */ 70120);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/has.js */ 67087);
/* harmony import */ var _chunks_rbush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../chunks/rbush.js */ 34662);
/* harmony import */ var _layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../layers/graphics/featureConversionUtils.js */ 50805);
/* harmony import */ var _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../layers/graphics/OptimizedGeometry.js */ 93846);
/* harmony import */ var _layers_graphics_data_StreamFeatureManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../layers/graphics/data/StreamFeatureManager.js */ 23917);
/* harmony import */ var _layers_graphics_sources_connections_createConnection_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../layers/graphics/sources/connections/createConnection.js */ 70890);
/* harmony import */ var _DataTileSource_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./DataTileSource.js */ 92457);
/* harmony import */ var _StreamConnectionState_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./StreamConnectionState.js */ 13185);
/* harmony import */ var _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../support/FeatureSetReaderJSON.js */ 80416);
/* harmony import */ var _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../support/UpdateToken.js */ 7408);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/











const p = 2500;
function _(e, t) {
  const s = e.weakClone();
  if (null != e.geometry) {
    const i = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__.quantizeX)(t, e.geometry.coords[0]),
      o = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__.quantizeY)(t, e.geometry.coords[1]);
    s.geometry = new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_5__["default"]([], [i, o]);
  }
  return s;
}
function m(e) {
  return "esriGeometryPoint" === e ? _ : (t, s) => {
    const n = t.weakClone(),
      r = new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_5__["default"](),
      o = !1,
      d = !1,
      c = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__.quantizeOptimizedGeometry)(r, t.geometry, o, d, e, s, !1, !1);
    return n.geometry = c, n;
  };
}
function y(e) {
  return "esriGeometryPoint" === e ? e => null != e.geometry ? {
    minX: e.geometry.coords[0],
    minY: e.geometry.coords[1],
    maxX: e.geometry.coords[0],
    maxY: e.geometry.coords[1]
  } : {
    minX: 1 / 0,
    minY: 1 / 0,
    maxX: -1 / 0,
    maxY: -1 / 0
  } : e => {
    let t = 1 / 0,
      s = 1 / 0,
      i = -1 / 0,
      n = -1 / 0;
    return null != e.geometry && e.geometry.forEachVertex((e, r) => {
      t = Math.min(t, e), s = Math.min(s, r), i = Math.max(i, e), n = Math.max(n, r);
    }), {
      minX: t,
      minY: s,
      maxX: i,
      maxY: n
    };
  };
}
function g(e, s) {
  const i = (0,_chunks_rbush_js__WEBPACK_IMPORTED_MODULE_3__.r)(9, y(s));
  return i.load(e), i;
}
function f(e, t) {
  return e.search({
    minX: t.bounds[0],
    minY: t.bounds[1],
    maxX: t.bounds[2],
    maxY: t.bounds[3]
  });
}
class v {
  constructor(e, t) {
    this.onUpdate = e, this._geometryType = t, this._objectIdToFeature = new Map(), this._index = null;
  }
  get _features() {
    const e = [];
    return this._objectIdToFeature.forEach(t => e.push(t)), e;
  }
  add(e) {
    this._objectIdToFeature.set(e.objectId, e), this._index = null;
  }
  get(e) {
    return this._objectIdToFeature.has(e) ? this._objectIdToFeature.get(e) : null;
  }
  forEach(e) {
    this._objectIdToFeature.forEach(e);
  }
  search(e) {
    return this._index || (this._index = g(this._features, this._geometryType)), f(this._index, e);
  }
  clear() {
    this._index = null, this._objectIdToFeature.clear();
  }
  removeById(e) {
    const t = this._objectIdToFeature.get(e);
    return t ? (this._objectIdToFeature.delete(e), this._index = null, t) : null;
  }
  update(e, t) {
    this.onUpdate(e, t);
  }
  get size() {
    return this._objectIdToFeature.size;
  }
}
class I extends _DataTileSource_js__WEBPACK_IMPORTED_MODULE_8__.DataTileSource {
  constructor(t) {
    super(t), this.type = "stream", this._updateIntervalId = 0, this._level = 0, this._isPaused = !1, this._updateInfo = {
      websocket: 0,
      client: 0
    }, this._inUpdate = !1;
    const {
        outSR: s
      } = t,
      {
        geometryType: i,
        objectIdField: n,
        timeInfo: r,
        purgeOptions: a,
        source: c,
        spatialReference: u,
        serviceFilter: l,
        maxReconnectionAttempts: _,
        maxReconnectionInterval: y,
        updateInterval: g,
        customParameters: f,
        enabledEventTypes: I
      } = t.serviceInfo,
      b = new v(this._onUpdate.bind(this), i),
      T = new _layers_graphics_data_StreamFeatureManager_js__WEBPACK_IMPORTED_MODULE_6__.StreamFeatureManager(b, n, r, a),
      S = (0,_layers_graphics_sources_connections_createConnection_js__WEBPACK_IMPORTED_MODULE_7__.createConnection)(c, u, s, i, l, _, y, f ?? {});
    this._connectionState = new _StreamConnectionState_js__WEBPACK_IMPORTED_MODULE_9__.StreamConnectionState({
      connection: S
    }), this._store = b, this._manager = T, this._connection = S, this._quantize = m(i), this._enabledEventTypes = new Set(I), this._handlesGroup = (0,_core_handleUtils_js__WEBPACK_IMPORTED_MODULE_1__.handlesGroup)([this._connection.on("data-received", e => this._onFeature(e)), this._connection.on("message-received", e => this._onWebSocketMessage(e))]), this._initUpdateInterval = () => {
      let e = performance.now();
      this._updateIntervalId = setInterval(() => {
        const s = performance.now(),
          i = s - e;
        if (i > p) {
          e = s;
          const t = Math.round(this._updateInfo.client / (i / 1e3)),
            n = Math.round(this._updateInfo.websocket / (i / 1e3));
          this._updateInfo.client = 0, this._updateInfo.websocket = 0, this.events.emit("updateRate", {
            client: t,
            websocket: n
          });
        }
        t.canAcceptRequest() && !this._inUpdate && this._manager.checkForUpdates();
      }, g);
    }, this._isPaused = t.serviceInfo.isPaused, this._isPaused || this._initUpdateInterval();
  }
  destroy() {
    super.destroy(), this._clearUpdateInterval(), this._connection.destroy(), this._handlesGroup?.remove();
  }
  _fetchDataTile() {}
  get connectionStatus() {
    return this._connectionState.connectionStatus;
  }
  get errorString() {
    return this._connectionState.errorString;
  }
  updateCustomParameters(e) {
    this._connection.updateCustomParameters(e);
  }
  pauseStream() {
    this._isPaused || (this._isPaused = !0, this._clearUpdateInterval());
  }
  resumeStream() {
    this._isPaused && (this._isPaused = !1, this._initUpdateInterval());
  }
  sendMessageToSocket(e) {
    this._connection.sendMessageToSocket(e);
  }
  sendMessageToClient(e) {
    this._isPaused && "type" in e && "clear" === e.type ? (this._store.clear(), this._subscriptions.forEach((e, t) => {
      e.didSend && e.tile.level === this._level && this._onMessage({
        type: "append",
        id: t,
        addOrUpdate: null,
        clear: !0,
        end: !0
      });
    })) : this._connection.sendMessageToClient(e);
  }
  enableEvent(e, t) {
    t ? this._enabledEventTypes.add(e) : this._enabledEventTypes.delete(e);
  }
  subscribe(e, t) {
    const s = super.subscribe(e, t);
    this._level = e.level;
    const i = this._getTileFeatures(e);
    return this._onMessage({
      type: "append",
      id: e.key.id,
      addOrUpdate: i,
      end: !0
    }), s.didSend = !0, s;
  }
  unsubscribe(e) {
    super.unsubscribe(e);
  }
  *readers(e) {
    const t = this._subscriptions.get(e),
      {
        tile: s
      } = t;
    yield this._getTileFeatures(s);
  }
  createTileQuery(e) {
    throw new Error("Service does not support tile  queries");
  }
  resend() {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this._subscriptions.forEach(e => {
        const {
            tile: t
          } = e,
          s = {
            type: "append",
            id: t.id,
            addOrUpdate: _this._getTileFeatures(t),
            end: !0
          };
        _this._onMessage(s);
      });
    })();
  }
  _getTileFeatures(e) {
    const t = this._store.search(e).map(t => this._quantize(t, e.transform));
    return _support_FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_10__.FeatureSetReaderJSON.fromOptimizedFeatures(t, this._arcadeLayerSchema, e.transform);
  }
  _onWebSocketMessage(e) {
    if (this._enabledEventTypes.has("message-received") && this.events.emit("message-received", e), "type" in e) switch (e.type) {
      case "delete":
        if (e.objectIds) for (const t of e.objectIds) this._manager.removeById(t);
        if (e.trackIds) for (const t of e.trackIds) this._manager.removeByTrackId(t);
        break;
      case "clear":
        this._store.forEach(e => this._manager.removeById(e.objectId));
    }
  }
  _onFeature(e) {
    this._updateInfo.websocket++;
    try {
      this._enabledEventTypes.has("data-received") && this.events.emit("data-received", e);
      const t = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__.convertFromFeature)(e, this._serviceInfo.geometryType, !1, !1, this._serviceInfo.objectIdField);
      this._manager.add(t);
    } catch (t) {}
  }
  _clearUpdateInterval() {
    clearInterval(this._updateIntervalId), this._updateIntervalId = 0;
  }
  _onUpdate(e, t) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this2._inUpdate = !0;
      try {
        null != e && (_this2._updateInfo.client += e.length), _this2._subscriptions.forEach((e, t) => {
          e.didSend && e.tile.level === _this2._level && _this2._onMessage({
            type: "append",
            id: t,
            addOrUpdate: null,
            clear: !0,
            end: !1
          });
        });
        const t = [];
        _this2._subscriptions.forEach((e, s) => {
          if (!e.didSend || e.tile.level !== _this2._level) return;
          const i = e.tile,
            n = {
              type: "append",
              id: s,
              addOrUpdate: _this2._getTileFeatures(i),
              remove: [],
              end: !1,
              status: _support_UpdateToken_js__WEBPACK_IMPORTED_MODULE_11__.UpdateToken.empty()
            };
          e.requests.stream.enqueue(n), t.push(_this2._onMessage(n));
        }), yield Promise.all(t), _this2._subscriptions.forEach((e, t) => {
          e.didSend && e.tile.level === _this2._level && _this2._onMessage({
            type: "append",
            id: t,
            addOrUpdate: null,
            end: !0
          });
        });
      } catch {}
      _this2._inUpdate = !1;
    })();
  }
}


/***/ }),

/***/ 92768:
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/sources/createSource.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSource": () => (/* binding */ s)
/* harmony export */ });
/* harmony import */ var _layers_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../layers/support/arcgisLayerUrl.js */ 4583);
/* harmony import */ var _DrillDownFeatureSource_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DrillDownFeatureSource.js */ 10452);
/* harmony import */ var _PagedFeatureSource_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PagedFeatureSource.js */ 75742);
/* harmony import */ var _SnapshotFeatureSource_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SnapshotFeatureSource.js */ 88774);
/* harmony import */ var _StreamSource_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StreamSource.js */ 73474);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/





function s(e, s, c, u, i, p, m) {
  const f = n(e, s, c, u, i, p, m);
  switch (f.type) {
    case "feature":
      switch (f.origin) {
        case "hosted":
        case "local":
          return new _PagedFeatureSource_js__WEBPACK_IMPORTED_MODULE_2__.PagedFeatureSource(f);
        case "snapshot":
          return new _SnapshotFeatureSource_js__WEBPACK_IMPORTED_MODULE_3__.SnapshotFeatureSource(f);
        default:
          return new _DrillDownFeatureSource_js__WEBPACK_IMPORTED_MODULE_1__.DrillDownFeatureSource(f);
      }
    case "stream":
      return new _StreamSource_js__WEBPACK_IMPORTED_MODULE_4__.StreamSource(f);
  }
}
function n(r, t, a, o, s, n, c) {
  switch (r.type) {
    case "snapshot":
      return {
        type: "feature",
        origin: "snapshot",
        featureCount: r.featureCount ?? 0,
        serviceInfo: r,
        onMessage: s,
        outSR: a,
        tileInfoView: o,
        canAcceptRequest: n,
        store: c,
        arcadeLayerSchema: t
      };
    case "stream":
      return {
        type: "stream",
        serviceInfo: r,
        onMessage: s,
        outSR: a,
        canAcceptRequest: n,
        arcadeLayerSchema: t
      };
    case "memory":
    case "on-demand":
      return {
        type: "feature",
        serviceInfo: r,
        onMessage: s,
        outSR: a,
        origin: u(r.source),
        tileInfoView: o,
        canAcceptRequest: n,
        arcadeLayerSchema: t
      };
  }
  function u(r) {
    return Array.isArray(r) ? "local" : "path" in r && (0,_layers_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_0__.isHostedAgolService)(r.path) ? "hosted" : "unknown";
  }
}


/***/ }),

/***/ 30441:
/*!********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/BinStore.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BinStore": () => (/* binding */ A)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../geometry.js */ 6010);
/* harmony import */ var _core_Evented_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/Evented.js */ 95442);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/has.js */ 67087);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../core/Logger.js */ 28191);
/* harmony import */ var _core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../core/accessorSupport/diffUtils.js */ 51118);
/* harmony import */ var _geohash_GeohashTree_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../geohash/GeohashTree.js */ 19602);
/* harmony import */ var _geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../geohash/geohashUtils.js */ 86074);
/* harmony import */ var _geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../geometry/support/aaBoundingBox.js */ 73327);
/* harmony import */ var _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../geometry/support/Ellipsoid.js */ 86355);
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../geometry/support/spatialReferenceUtils.js */ 53492);
/* harmony import */ var _layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../layers/graphics/featureConversionUtils.js */ 50805);
/* harmony import */ var _layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../layers/graphics/OptimizedFeature.js */ 33510);
/* harmony import */ var _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../layers/graphics/OptimizedGeometry.js */ 93846);
/* harmony import */ var _layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../layers/graphics/data/projectionSupport.js */ 19482);
/* harmony import */ var _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../../layers/support/FieldsIndex.js */ 19346);
/* harmony import */ var _engine_webgl_DisplayId_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../engine/webgl/DisplayId.js */ 21288);
/* harmony import */ var _FeatureStore2D_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../FeatureStore2D.js */ 59690);
/* harmony import */ var _Store2D_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../Store2D.js */ 98052);
/* harmony import */ var _FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./FeatureSetReaderJSON.js */ 80416);
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../../geometry/SpatialReference.js */ 68230);
/* harmony import */ var _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../../geometry/Polygon.js */ 55733);
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../../geometry/Extent.js */ 10465);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/






















const F = _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__["default"].getLogger("esri.view.2d.layers.features.support.BinStore"),
  S = 12,
  G = 64,
  R = (0,_geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_8__.create)(),
  L = 5;
function T(e) {
  return 57.29577951308232 * e;
}
class A extends _Store2D_js__WEBPACK_IMPORTED_MODULE_18__.Store2D {
  constructor(t, s, r, i) {
    super(t, r), this.type = "bin", this.events = new _core_Evented_js__WEBPACK_IMPORTED_MODULE_2__["default"](), this.objectIdField = "aggregateId", this.featureAdapter = _FeatureStore2D_js__WEBPACK_IMPORTED_MODULE_17__.featureAdapter, this._geohashLevel = L, this._geohashBuf = [], this._serviceInfo = i, this.geometryInfo = t.geometryInfo, this._spatialReference = s, this._projectionSupportCheck = (0,_layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_14__.checkProjectionSupport)(s, _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__["default"].WGS84), this._bitsets.geohash = r.getBitset(r.createBitset()), this._bitsets.inserted = r.getBitset(r.createBitset());
  }
  destroy() {
    this._tree && this._tree.destroy();
  }
  get featureSpatialReference() {
    return this._spatialReference;
  }
  get fields() {
    return this._fields;
  }
  updateSchema(e, t) {
    var _superprop_getUpdateSchema = () => super.updateSchema,
      _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const o = _this._schema;
      try {
        yield _superprop_getUpdateSchema().call(_this, e, t), yield _this._projectionSupportCheck;
      } catch (h) {}
      _this._fields = _this._schema.params.fields, _this._fieldsIndex = new _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_15__["default"](_this._fields);
      const a = (0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_5__.diff)(o, t);
      t && (null != a || e.source || e.storage.filters) ? (((0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_5__.hasDiff)(a, "params.fields") || (0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_5__.hasDiff)(a, "params") || !_this._tree || e.source) && (_this._tree && _this._tree.destroy(), _this._tree = new _geohash_GeohashTree_js__WEBPACK_IMPORTED_MODULE_6__.GeohashTree(_this._statisticFields, _this._serviceInfo), _this._tree.onRelease = e => e.displayId && _this._storage.releaseDisplayId(e.displayId), _this._geohashLevel = _this._schema.params.fixedBinLevel, _this._rebuildTree(), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("esri-2d-update-debug") && F.info("Aggregate mesh needs update due to tree changing")), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("esri-2d-update-debug") && F.info("Aggregate mesh needs update due to tree changing"), e.targets[t.name] = !0, e.mesh = !1) : o && (e.mesh = !0);
    })();
  }
  clear() {
    this._rebuildTree();
  }
  sweepFeatures(e, t) {
    this._bitsets.inserted.forEachSet(s => {
      if (!e.has(s)) {
        const e = t.lookupByDisplayIdUnsafe(s);
        this._remove(e);
      }
    });
  }
  sweepAggregates(e, t, s) {}
  onTileData(e, t, s, r, i, o = !0) {
    if (!this._schema || null == t.addOrUpdate) return t;
    this.events.emit("changed");
    const a = this._getTransforms(e, this._spatialReference);
    {
      const e = t.addOrUpdate.getCursor();
      for (; e.next();) this._update(e, r);
    }
    if (t.status.mesh || !o) return t;
    const h = new Array();
    this._getBinsForTile(h, e, a, s), t.addOrUpdate = _FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_19__.FeatureSetReaderJSON.fromOptimizedFeatures(h, {
      fields: this.fields,
      fieldsIndex: this._fieldsIndex,
      geometryType: "esriGeometryPolygon",
      objectIdField: this.objectIdField
    }), t.addOrUpdate.attachStorage(s), t.end = !0, t.isRepush || (t.clear = !0);
    {
      const r = t.addOrUpdate.getCursor();
      for (; r.next();) {
        const t = r.getDisplayId();
        this._bitsets.computed.unset(t), this.setComputedAttributes(s, r, t, e.scale, i);
      }
    }
    return t;
  }
  forEachBin(e) {
    this._tree.forEach(e);
  }
  forEach(e) {
    this._tree.forEach(t => {
      if (t.depth !== this._geohashLevel) return;
      const s = this._toFeatureJSON(t),
        r = _FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_19__.FeatureSetReaderJSON.fromFeatures([s], {
          objectIdField: this.objectIdField,
          globalIdField: null,
          geometryType: this.geometryInfo.geometryType,
          fields: this.fields,
          fieldsIndex: this._fieldsIndex
        }).getCursor();
      r.next(), e(r);
    });
  }
  forEachInBounds(e, t) {}
  forEachBounds(e, t) {
    const {
      hasM: s,
      hasZ: r
    } = this.geometryInfo;
    for (const i of e) {
      const e = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_11__.getBoundsOptimizedGeometry)(R, i.readGeometry(), r, s);
      null != e && t(e);
    }
  }
  onTileUpdate(e) {}
  getAggregate(e) {
    const t = (0,_engine_webgl_DisplayId_js__WEBPACK_IMPORTED_MODULE_16__.createDisplayId)(e, !0),
      s = this._tree.findIf(e => e.displayId === t);
    return s ? this._toFeatureJSON(s) : null;
  }
  getAggregates() {
    return this._tree.findAllIf(e => e.depth === this._geohashLevel).map(this._toFeatureJSON.bind(this));
  }
  getDisplayId(e) {
    return this._tree.findIf(t => t.id === e)?.displayId;
  }
  getFeatureDisplayIdsForAggregate(e) {
    const t = this._tree.findIf(t => t.id === e);
    return null != t ? Array.from(t.displayIds) : [];
  }
  getDisplayIdForReferenceId(e) {
    return this._tree.findIf(t => 1 === t.displayIds.size && t.displayIds.has(e))?.displayId;
  }
  _toFeatureJSON(e) {
    const t = this._spatialReference;
    return {
      displayId: e.displayId,
      attributes: e.getAttributes(),
      geometry: (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_11__.convertToGeometry)(e.getGeometry(t), "esriGeometryPolygon", !1, !1),
      centroid: null
    };
  }
  _rebuildTree() {
    this._bitsets.computed.clear(), this._bitsets.inserted.clear(), this._tree && this._tree.clear();
  }
  _remove(e) {
    const t = e.getDisplayId(),
      s = e.getXHydrated(),
      r = e.getYHydrated(),
      i = this._geohashBuf[2 * t],
      o = this._geohashBuf[2 * t + 1];
    this._bitsets.inserted.has(t) && (this._bitsets.inserted.unset(t), this._tree.removeCursor(e, s, r, i, o, this._geohashLevel));
  }
  _update(e, t) {
    const s = e.getDisplayId(),
      r = this._bitsets.inserted,
      i = t.isVisible(s);
    if (i === r.has(s)) return;
    if (!i) return void this._remove(e);
    const o = e.getXHydrated(),
      a = e.getYHydrated();
    if (!this._setGeohash(s, o, a)) return;
    const h = this._geohashBuf[2 * s],
      n = this._geohashBuf[2 * s + 1];
    this._tree.insertCursor(e, s, o, a, h, n, this._geohashLevel), r.set(s);
  }
  _setGeohash(e, t, s) {
    if (this._bitsets.geohash.has(e)) return !0;
    const r = this._geohashBuf;
    if (this._spatialReference.isWebMercator) {
      const i = T(t / _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__.earth.radius),
        a = i - 360 * Math.floor((i + 180) / 360),
        h = T(Math.PI / 2 - 2 * Math.atan(Math.exp(-s / _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__.earth.radius)));
      (0,_geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_7__.setGeohashBuf)(r, e, h, a, S);
    } else {
      const i = (0,_layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_14__.project)({
        x: t,
        y: s
      }, this._spatialReference, _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__["default"].WGS84);
      if (!i) return !1;
      (0,_geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_7__.setGeohashBuf)(r, e, i.y, i.x, S);
    }
    return this._bitsets.geohash.set(e), !0;
  }
  _getBinsForTile(e, t, s, r) {
    try {
      const i = this._getGeohashBounds(t),
        o = this._tree.getBins(i);
      for (const t of o) {
        t.displayId || (t.displayId = r.createDisplayId(!0));
        let i = null;
        const o = t.getGeometry(this._spatialReference, s.tile);
        o || (i = t.getGeometryCentroid(this._spatialReference, s.tile));
        const a = new _layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_12__.OptimizedFeature(o, t.getAttributes(), i);
        a.objectId = t.id, a.displayId = t.displayId, e.push(a);
      }
    } catch (i) {
      return void F.error("Unable to get bins for tile", t.key.id);
    }
  }
  _getGeohash(e, t, s) {
    const r = {
      geohashX: 0,
      geohashY: 0
    };
    return (0,_geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_7__.setGeohashXY)(r, t, e, s), r;
  }
  _getGeohashBounds(e) {
    const t = this._getGeohashLevel(e.key.level),
      s = [e.extent.xmin, e.extent.ymin, e.extent.xmax, e.extent.ymax],
      r = _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_21__["default"].fromExtent(_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_22__["default"].fromBounds(s, this._spatialReference)),
      i = (0,_layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_14__.project)(r, this._spatialReference, _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__["default"].WGS84, {
        densificationStep: e.resolution * G
      }),
      o = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_11__.convertFromPolygon)(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_13__["default"](), i, !1, !1),
      a = o.coords.filter((e, t) => !(t % 2)),
      h = o.coords.filter((e, t) => t % 2),
      n = Math.min(...a),
      d = Math.min(...h),
      l = Math.max(...a),
      p = Math.max(...h),
      f = this._getGeohash(n, d, t),
      c = this._getGeohash(l, p, t);
    return {
      bounds: s,
      geohashBounds: {
        xLL: f.geohashX,
        yLL: f.geohashY,
        xTR: c.geohashX,
        yTR: c.geohashY
      },
      level: t
    };
  }
  _getGeohashLevel(e) {
    return this._schema.params.fixedBinLevel;
  }
  _getTransforms(e, t) {
    const s = {
        originPosition: "upperLeft",
        scale: [e.resolution, e.resolution],
        translate: [e.bounds[0], e.bounds[3]]
      },
      r = (0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_10__.getInfo)(t);
    if (!r) return {
      tile: s,
      left: null,
      right: null
    };
    const [i, o] = r.valid;
    return {
      tile: s,
      left: {
        ...s,
        translate: [o, e.bounds[3]]
      },
      right: {
        ...s,
        translate: [i - o + e.bounds[0], e.bounds[3]]
      }
    };
  }
}


/***/ }),

/***/ 96674:
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/ClusterStore.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClusterInfo": () => (/* binding */ S),
/* harmony export */   "ClusterStore": () => (/* binding */ V)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../geometry.js */ 6010);
/* harmony import */ var _core_Evented_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/Evented.js */ 95442);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/has.js */ 67087);
/* harmony import */ var _core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../core/accessorSupport/diffUtils.js */ 51118);
/* harmony import */ var _geohash_GeohashTree_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../geohash/GeohashTree.js */ 19602);
/* harmony import */ var _geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../geohash/geohashUtils.js */ 86074);
/* harmony import */ var _geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../geometry/support/aaBoundingBox.js */ 73327);
/* harmony import */ var _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../geometry/support/Ellipsoid.js */ 86355);
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../geometry/support/spatialReferenceUtils.js */ 53492);
/* harmony import */ var _layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../layers/graphics/featureConversionUtils.js */ 50805);
/* harmony import */ var _layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../layers/graphics/OptimizedFeature.js */ 33510);
/* harmony import */ var _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../layers/graphics/OptimizedGeometry.js */ 93846);
/* harmony import */ var _layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../../layers/graphics/data/projectionSupport.js */ 19482);
/* harmony import */ var _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../layers/support/FieldsIndex.js */ 19346);
/* harmony import */ var _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../engine/webgl/definitions.js */ 80696);
/* harmony import */ var _engine_webgl_DisplayId_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../engine/webgl/DisplayId.js */ 21288);
/* harmony import */ var _FeatureStore2D_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../FeatureStore2D.js */ 59690);
/* harmony import */ var _Store2D_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../Store2D.js */ 98052);
/* harmony import */ var _FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./FeatureSetReaderJSON.js */ 80416);
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../../geometry/SpatialReference.js */ 68230);
/* harmony import */ var _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../../geometry/Polygon.js */ 55733);
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../../geometry/Extent.js */ 10465);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/






















const C = 12,
  L = 64,
  w = 1,
  B = (0,_geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_7__.create)();
class S extends _layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_11__.OptimizedFeatureWithGeometry {
  constructor(e, t, s, r, i) {
    super(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_12__["default"]([], [t, s]), r, null, e), this.geohashBoundsInfo = i;
  }
  get count() {
    return this.attributes.cluster_count;
  }
  static create(e, t, s, r, i, o, a, h) {
    const l = new S(t, s, r, o, a);
    return l.displayId = e.createDisplayId(!0), l.referenceId = h, l.tileLevel = i, l;
  }
  update(e, t, s, r, i, o) {
    return this.geometry.coords[0] = e, this.geometry.coords[1] = t, this.tileLevel = s, this.attributes = r, this.geohashBoundsInfo = i, this.referenceId = null, this.referenceId = o, this;
  }
  toJSON() {
    return {
      attributes: {
        ...this.attributes,
        aggregateId: this.objectId,
        referenceId: 1 === this.attributes.cluster_count ? this.referenceId : null
      },
      geometry: {
        x: this.geometry.coords[0],
        y: this.geometry.coords[1]
      }
    };
  }
}
function T(e) {
  return 57.29577951308232 * e;
}
class V extends _Store2D_js__WEBPACK_IMPORTED_MODULE_18__.Store2D {
  constructor(t, s, r, i) {
    super(t, r), this.type = "cluster", this.events = new _core_Evented_js__WEBPACK_IMPORTED_MODULE_2__["default"](), this.objectIdField = "aggregateId", this.featureAdapter = _FeatureStore2D_js__WEBPACK_IMPORTED_MODULE_17__.featureAdapter, this._geohashLevel = 0, this._tileLevel = 0, this._aggregateValueRanges = {}, this._aggregateValueRangesChanged = !1, this._geohashBuf = [], this._clusters = new Map(), this._tiles = new Map(), this._serviceInfo = i, this.geometryInfo = t.geometryInfo, this._spatialReference = s, this._projectionSupportCheck = (0,_layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_13__.checkProjectionSupport)(s, _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__["default"].WGS84), this._bitsets.geohash = r.getBitset(r.createBitset()), this._bitsets.inserted = r.getBitset(r.createBitset());
  }
  destroy() {
    this._tree.destroy();
  }
  get featureSpatialReference() {
    return this._spatialReference;
  }
  get fields() {
    return this._fields;
  }
  updateSchema(e, i) {
    var _superprop_getUpdateSchema = () => super.updateSchema,
      _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const o = _this._schema;
      try {
        yield _superprop_getUpdateSchema().call(_this, e, i), yield _this._projectionSupportCheck;
      } catch (h) {}
      _this._fields = [..._this._schema.params.fields, {
        name: "referenceId",
        alias: "referenceId",
        type: "esriFieldTypeInteger"
      }];
      !!_this._fields.some(e => "cluster_count" === e.name) || _this._fields.push({
        name: "cluster_count",
        alias: "cluster_count",
        type: "esriFieldTypeInteger"
      }), _this._fieldsIndex = new _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__["default"](_this._fields);
      const a = (0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_4__.diff)(o, i);
      i && (null != a || e.source || e.storage.filters) ? (((0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_4__.hasDiff)(a, "params.fields") || !_this._tree || e.source) && (_this._tree && _this._tree.destroy(), _this._tree = new _geohash_GeohashTree_js__WEBPACK_IMPORTED_MODULE_5__.GeohashTree(_this._statisticFields, _this._serviceInfo), _this._rebuildTree(), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("esri-2d-update-debug") && console.debug("Aggregate mesh needs update due to tree changing")), (0,_core_has_js__WEBPACK_IMPORTED_MODULE_3__["default"])("esri-2d-update-debug") && console.debug("Applying Update - ClusterStore:", a), e.targets[i.name] = !0, e.mesh = !1, _this._aggregateValueRanges = {}) : o && (e.mesh = !0);
    })();
  }
  clear() {
    this._rebuildTree();
  }
  sweepFeatures(e, t) {
    this._bitsets.inserted.forEachSet(s => {
      if (!e.has(s)) {
        const e = t.lookupByDisplayIdUnsafe(s);
        this._remove(e);
      }
    });
  }
  sweepAggregates(e, t, s) {
    this._clusters.forEach((r, i) => {
      r && r.tileLevel !== s && (e.releaseDisplayId(r.displayId), t.unsetAttributeData(r.displayId), this._clusters.delete(i));
    });
  }
  onTileData(e, t, s, r, i, o = !0) {
    if (!this._schema || null == t.addOrUpdate) return t;
    this.events.emit("changed");
    const a = this._getTransforms(e, this._spatialReference);
    {
      const e = t.addOrUpdate.getCursor();
      for (; e.next();) this._update(e, r);
    }
    if (t.status.mesh || !o) return t;
    const h = new Array(),
      l = this._schema.params.clusterRadius;
    this._getClustersForTile(h, e, l, s, a), t.addOrUpdate = _FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_19__.FeatureSetReaderJSON.fromOptimizedFeatures(h, {
      fields: this.fields,
      fieldsIndex: this._fieldsIndex,
      geometryType: "esriGeometryPoint",
      objectIdField: this.objectIdField
    }), t.addOrUpdate.attachStorage(s), t.clear = !0, t.end = !0;
    {
      const r = t.addOrUpdate.getCursor();
      for (; r.next();) {
        const t = r.getDisplayId();
        this._bitsets.computed.unset(t), this.setComputedAttributes(s, r, t, e.scale, i);
      }
    }
    return this._aggregateValueRangesChanged && t.end && (this.events.emit("valueRangesChanged", {
      valueRanges: this._aggregateValueRanges
    }), this._aggregateValueRangesChanged = !1), t;
  }
  onTileUpdate({
    added: e,
    removed: t
  }) {
    if (e.length) {
      const t = e[0].level;
      this._tileLevel = t, this._setGeohashLevel(t);
    }
    if (!this._schema) return;
    const s = this._schema.params.clusterRadius;
    t.forEach(e => {
      this._tiles.delete(e.key.id), this._markTileClustersForDeletion(e, s);
    });
  }
  getAggregate(e) {
    for (const t of this._clusters.values()) if ((t?.displayId & _engine_webgl_DisplayId_js__WEBPACK_IMPORTED_MODULE_16__.displayIdTexelMask) == (e & _engine_webgl_DisplayId_js__WEBPACK_IMPORTED_MODULE_16__.displayIdTexelMask)) return t.toJSON();
    return null;
  }
  getAggregates() {
    const e = [];
    for (const t of this._clusters.values()) t?.tileLevel === this._tileLevel && e.push(t.toJSON());
    return e;
  }
  getDisplayId(e) {
    const t = this._clusters.get(e);
    return t ? t.displayId : null;
  }
  getFeatureDisplayIdsForAggregate(e) {
    const t = this._clusters.get(e);
    return t ? this._tree.getRegionDisplayIds(t.geohashBoundsInfo) : [];
  }
  getDisplayIdForReferenceId(e) {
    for (const t of this._clusters.values()) if (t?.referenceId === e) return t.displayId;
    return null;
  }
  getAggregateValueRanges() {
    return this._aggregateValueRanges;
  }
  forEach(e) {
    this._clusters.forEach(t => {
      if (!t) return;
      const s = t.toJSON(),
        r = _FeatureSetReaderJSON_js__WEBPACK_IMPORTED_MODULE_19__.FeatureSetReaderJSON.fromFeatures([s], {
          objectIdField: this.objectIdField,
          globalIdField: null,
          geometryType: this.geometryInfo.geometryType,
          fields: this.fields,
          fieldsIndex: this._fieldsIndex
        }).getCursor();
      r.next(), e(r);
    });
  }
  forEachInBounds(e, t) {}
  forEachBounds(e, t) {
    const {
      hasM: s,
      hasZ: r
    } = this.geometryInfo;
    for (const i of e) {
      const e = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_10__.getBoundsOptimizedGeometry)(B, i.readGeometry(), r, s);
      null != e && t(e);
    }
  }
  size() {
    let e = 0;
    return this.forEach(t => e++), e;
  }
  _rebuildTree() {
    this._bitsets.computed.clear(), this._bitsets.inserted.clear(), this._tree && this._tree.clear();
  }
  _remove(e) {
    const t = e.getDisplayId(),
      s = e.getXHydrated(),
      r = e.getYHydrated(),
      i = this._geohashBuf[2 * t],
      o = this._geohashBuf[2 * t + 1];
    this._bitsets.inserted.has(t) && (this._bitsets.inserted.unset(t), this._tree.removeCursor(e, s, r, i, o, this._geohashLevel));
  }
  _update(e, t) {
    const s = e.getDisplayId(),
      r = this._bitsets.inserted,
      i = t.isVisible(s);
    if (i === r.has(s)) return;
    if (!i) return void this._remove(e);
    const o = e.getXHydrated(),
      a = e.getYHydrated();
    if (!this._setGeohash(s, o, a)) return;
    const h = this._geohashBuf[2 * s],
      l = this._geohashBuf[2 * s + 1];
    this._tree.insertCursor(e, s, o, a, h, l, this._geohashLevel), r.set(s);
  }
  _setGeohash(e, t, s) {
    if (this._bitsets.geohash.has(e)) return !0;
    const r = this._geohashBuf;
    if (this._spatialReference.isWebMercator) {
      const o = T(t / _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__.earth.radius),
        a = o - 360 * Math.floor((o + 180) / 360),
        l = T(Math.PI / 2 - 2 * Math.atan(Math.exp(-s / _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__.earth.radius)));
      (0,_geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_6__.setGeohashBuf)(r, e, l, a, C);
    } else {
      const o = (0,_layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_13__.project)({
        x: t,
        y: s
      }, this._spatialReference, _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__["default"].WGS84);
      if (!o) return !1;
      (0,_geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_6__.setGeohashBuf)(r, e, o.y, o.x, C);
    }
    return this._bitsets.geohash.set(e), !0;
  }
  _getClustersForTile(e, t, s, r, i, o = !0) {
    const a = this._schema.params.clusterPixelBuffer,
      h = 2 * s,
      l = Math.ceil(2 ** t.key.level * _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize / h) + 1,
      n = Math.ceil(a / h) + 0,
      g = Math.ceil(_engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize / h),
      {
        row: c,
        col: p
      } = t.key,
      _ = p * _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize,
      m = c * _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize,
      y = Math.floor(_ / h) - n,
      b = Math.floor(m / h) - n,
      v = y + g + 2 * n,
      R = b + g + 2 * n,
      x = t.tileInfoView.getLODInfoAt(t.key.level);
    for (let I = y; I <= v; I++) for (let s = b; s <= R; s++) {
      let a = I;
      x.wrap && (a = I < 0 ? I + l : I % l);
      const h = x.wrap && I < 0,
        n = x.wrap && I % l !== I,
        g = this._lookupCluster(r, x, t.key.level, a, s, t);
      if (null != g) {
        let t = null;
        if (i && (t = h ? i.left : n ? i.right : i.tile), o && null == t) continue;
        if (!g.count) continue;
        if (null != t && o) {
          const s = g.geometry.clone();
          let r = g.attributes;
          s.coords[0] = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_10__.quantizeX)(t, s.coords[0]), s.coords[1] = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_10__.quantizeY)(t, s.coords[1]), 1 === g.count && null != g.referenceId && (r = {
            ...g.attributes,
            referenceId: g.referenceId
          });
          const i = new _layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_11__.OptimizedFeature(s, r);
          i.displayId = g.displayId, e.push(i);
        }
      }
    }
  }
  _getGeohashLevel(e) {
    return Math.min(Math.ceil(e / 2 + 2), C);
  }
  _setGeohashLevel(e) {
    const t = this._getGeohashLevel(e),
      s = (Math.floor(t / w) + 1) * w - 1;
    if (this._geohashLevel !== s) return this._geohashLevel = s, this._rebuildTree(), void this._bitsets.geohash.clear();
  }
  _getTransforms(e, t) {
    const s = {
        originPosition: "upperLeft",
        scale: [e.resolution, e.resolution],
        translate: [e.bounds[0], e.bounds[3]]
      },
      r = (0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__.getInfo)(t);
    if (!r) return {
      tile: s,
      left: null,
      right: null
    };
    const [i, o] = r.valid;
    return {
      tile: s,
      left: {
        ...s,
        translate: [o, e.bounds[3]]
      },
      right: {
        ...s,
        translate: [i - o + e.bounds[0], e.bounds[3]]
      }
    };
  }
  _getClusterId(e, t, s) {
    return (15 & e) << 28 | (16383 & t) << 14 | 16383 & s;
  }
  _markForDeletion(e, t, s) {
    const r = this._getClusterId(e, t, s);
    this._clusters.delete(r);
  }
  _getClusterBounds(e, t, s) {
    const r = this._schema.params.clusterRadius,
      i = 2 * r;
    let o = s % 2 ? t * i : t * i - r;
    const a = s * i;
    let h = o + i;
    const l = a - i,
      n = 2 ** e.level * _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize;
    e.wrap && o < 0 && (o = 0), e.wrap && h > n && (h = n);
    const u = o / _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize,
      d = a / _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize,
      g = h / _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize,
      c = l / _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize;
    return [e.getXForColumn(u), e.getYForRow(d), e.getXForColumn(g), e.getYForRow(c)];
  }
  _getGeohash(e, t, s) {
    const r = {
      geohashX: 0,
      geohashY: 0
    };
    return (0,_geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_6__.setGeohashXY)(r, t, e, s), r;
  }
  _getGeohashBounds(e, t) {
    const s = this._getGeohashLevel(e.key.level);
    if (this._spatialReference.isWebMercator) {
      const [e, r, i, a] = t,
        l = {
          x: e,
          y: r
        },
        n = {
          x: i,
          y: a
        };
      let u = 0,
        d = 0,
        g = 0,
        c = 0;
      {
        const e = T(l.x / _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__.earth.radius);
        u = e - 360 * Math.floor((e + 180) / 360), d = T(Math.PI / 2 - 2 * Math.atan(Math.exp(-l.y / _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__.earth.radius)));
      }
      {
        const e = T(n.x / _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__.earth.radius);
        g = e - 360 * Math.floor((e + 180) / 360), c = T(Math.PI / 2 - 2 * Math.atan(Math.exp(-n.y / _geometry_support_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__.earth.radius)));
      }
      const f = {
          geohashX: 0,
          geohashY: 0
        },
        p = {
          geohashX: 0,
          geohashY: 0
        };
      (0,_geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_6__.setGeohashXY)(f, d, u, s), (0,_geohash_geohashUtils_js__WEBPACK_IMPORTED_MODULE_6__.setGeohashXY)(p, c, g, s);
      return {
        bounds: [e, r, i, a],
        geohashBounds: {
          xLL: f.geohashX,
          yLL: f.geohashY,
          xTR: p.geohashX,
          yTR: p.geohashY
        },
        level: s
      };
    }
    const r = _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_21__["default"].fromExtent(_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_22__["default"].fromBounds(t, this._spatialReference)),
      i = (0,_layers_graphics_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_13__.project)(r, this._spatialReference, _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__["default"].WGS84, {
        densificationStep: e.resolution * L
      });
    if (!i) return null;
    const a = (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_10__.convertFromPolygon)(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_12__["default"](), i, !1, !1),
      l = a.coords.filter((e, t) => !(t % 2)),
      n = a.coords.filter((e, t) => t % 2),
      u = Math.min(...l),
      d = Math.min(...n),
      c = Math.max(...l),
      f = Math.max(...n),
      _ = this._getGeohash(u, d, s),
      y = this._getGeohash(c, f, s);
    return {
      bounds: t,
      geohashBounds: {
        xLL: _.geohashX,
        yLL: _.geohashY,
        xTR: y.geohashX,
        yTR: y.geohashY
      },
      level: s
    };
  }
  _lookupCluster(e, t, s, r, i, o) {
    const a = this._getClusterId(s, r, i),
      h = this._clusters.get(a),
      l = this._getClusterBounds(t, r, i),
      n = this._getGeohashBounds(o, l);
    if (null == n) return null;
    const u = this._tree.getRegionStatistics(n),
      {
        count: d,
        xTotal: g,
        yTotal: c,
        referenceId: f
      } = u,
      p = d ? g / d : 0,
      _ = d ? c / d : 0;
    if (0 === d) return this._clusters.set(a, null), null;
    const m = {
        cluster_count: d,
        ...u.attributes
      },
      y = null != h ? h.update(p, _, s, m, n, f) : S.create(e, a, p, _, s, m, n, f);
    if (0 === d) {
      const [e, t, s, r] = l;
      y.geometry.coords[0] = (e + s) / 2, y.geometry.coords[1] = (t + r) / 2;
    }
    return this._clusters.set(a, y), this._updateAggregateValueRangeForCluster(y, y.tileLevel), y;
  }
  _updateAggregateValueRangeForCluster(e, t) {
    const s = this._aggregateValueRanges[t] || {
        minValue: 1 / 0,
        maxValue: 0
      },
      r = s.minValue,
      i = s.maxValue;
    s.minValue = Math.min(r, e.count), s.maxValue = Math.max(i, e.count), this._aggregateValueRanges[t] = s, r === s.minValue && i === s.maxValue || (this._aggregateValueRangesChanged = !0);
  }
  _markTileClustersForDeletion(e, t) {
    const s = 2 * t,
      r = Math.ceil(_engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize / s),
      {
        row: i,
        col: o
      } = e.key,
      a = o * _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize,
      h = i * _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_15__.tileSize,
      l = Math.floor(a / s),
      n = Math.floor(h / s);
    for (let u = l; u < l + r; u++) for (let t = n; t < n + r; t++) this._markForDeletion(e.key.level, u, t);
  }
}


/***/ }),

/***/ 38749:
/*!*******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/FeatureSetReaderPBF.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FeatureSetReaderPBF": () => (/* binding */ S)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/Error.js */ 32995);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/Logger.js */ 28191);
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/maybe.js */ 53661);
/* harmony import */ var _core_pbf_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/pbf.js */ 74617);
/* harmony import */ var _layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../layers/graphics/featureConversionUtils.js */ 50805);
/* harmony import */ var _layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../layers/graphics/OptimizedFeature.js */ 33510);
/* harmony import */ var _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../layers/graphics/OptimizedGeometry.js */ 93846);
/* harmony import */ var _FeatureSetReader_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./FeatureSetReader.js */ 80074);
/* harmony import */ var _FeatureSetReaderPBFHeader_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./FeatureSetReaderPBFHeader.js */ 68346);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/









const u = !0,
  c = 268435455,
  g = 128,
  l = 128e3,
  _ = {
    small: {
      delta: new Int32Array(g),
      decoded: new Int32Array(g)
    },
    large: {
      delta: new Int32Array(l),
      decoded: new Int32Array(l)
    }
  };
function f(e) {
  return e <= _.small.delta.length ? _.small : (e <= _.large.delta.length || (_.large.delta = new Int32Array(Math.round(1.25 * e)), _.large.decoded = new Int32Array(Math.round(1.25 * e))), _.large);
}
function y(r) {
  try {
    const e = 2,
      t = new _core_pbf_js__WEBPACK_IMPORTED_MODULE_3__["default"](new Uint8Array(r), new DataView(r));
    for (; t.next();) {
      if (t.tag() === e) return I(t.getMessage());
      t.skip();
    }
  } catch (i) {
    const r = new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("query:parsing-pbf", "Error while parsing FeatureSet PBF payload", {
      error: i
    });
    _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(r);
  }
  return null;
}
function I(e) {
  const t = 1;
  for (; e.next();) {
    if (e.tag() === t) return e.getMessage();
    e.skip();
  }
  return null;
}
function p(e) {
  const t = 1,
    r = 2,
    s = 3,
    i = 4,
    n = 5,
    a = 6,
    h = 7,
    o = 8,
    d = 9,
    u = e.getLength(),
    c = e.pos() + u;
  for (; e.pos() < c && e.next();) switch (e.tag()) {
    case t:
      return e.getString();
    case r:
      return e.getFloat();
    case s:
      return e.getDouble();
    case i:
      return e.getSInt32();
    case n:
      return e.getUInt32();
    case a:
      return e.getInt64();
    case h:
      return e.getUInt64();
    case o:
      return e.getSInt64();
    case d:
      return e.getBool();
    default:
      return e.skip(), null;
  }
  return null;
}
function m(e, t, r, s, i, n) {
  return .5 * Math.abs(e * s + r * n + i * t - e * n - r * t - i * s);
}
function x(e, t, r, s) {
  return 0 === e * s - r * t && e * r + t * s > 0;
}
class S extends _FeatureSetReader_js__WEBPACK_IMPORTED_MODULE_7__.FeatureSetReader {
  static fromBuffer(e, t, r = !1) {
    const s = t.geometryType,
      i = y(e),
      n = (0,_FeatureSetReaderPBFHeader_js__WEBPACK_IMPORTED_MODULE_8__.parseHeader)(i, "esriGeometryPoint" === s, r),
      a = _FeatureSetReader_js__WEBPACK_IMPORTED_MODULE_7__.FeatureSetReader.createInstance();
    return new S(a, i, n, t);
  }
  constructor(e, t, r, s) {
    super(e, s), this._hasNext = !1, this._isPoints = !1, this._featureIndex = -1, this._featureOffset = 0, this._cache = {
      area: 0,
      unquantGeometry: void 0,
      geometry: void 0,
      centroid: void 0,
      legacyFeature: void 0,
      optFeature: void 0
    }, this._geometryType = s.geometryType, this._reader = t, this._header = r, this._hasNext = r.hasFeatures, this._isPoints = "esriGeometryPoint" === s.geometryType;
  }
  get fields() {
    return this._header.fields;
  }
  get geometryType() {
    return this._geometryType;
  }
  get _size() {
    return this._header.featureCount;
  }
  get hasZ() {
    return !1;
  }
  get hasM() {
    return !1;
  }
  get stride() {
    return 2 + (this.hasZ ? 1 : 0) + (this.hasM ? 1 : 0);
  }
  get hasFeatures() {
    return this._header.hasFeatures;
  }
  get hasNext() {
    return this._hasNext;
  }
  get exceededTransferLimit() {
    return this._header.exceededTransferLimit;
  }
  getSize() {
    return this._size;
  }
  getQuantizationTransform() {
    return this._header.transform;
  }
  getCursor() {
    return this.copy();
  }
  getIndex() {
    return this._featureIndex;
  }
  setIndex(e) {
    this._cache.area = 0, this._cache.unquantGeometry = void 0, this._cache.geometry = void 0, this._cache.centroid = void 0, this._cache.legacyFeature = void 0, this._cache.optFeature = void 0, this._featureIndex = e;
  }
  getAttributeHash() {
    let e = "";
    for (const t of this._header.fields.fields) e += this._readAttributeAtIndex(t.index) + ".";
    return e;
  }
  getObjectId() {
    return this._readAttributeAtIndex(this._header.objectIdFieldIndex);
  }
  getDisplayId() {
    return this._header.displayIds[this._featureIndex];
  }
  setDisplayId(e) {
    this._header.displayIds[this._featureIndex] = e;
  }
  getGroupId() {
    return this._header.groupIds[this._featureIndex];
  }
  setGroupId(e) {
    this._header.groupIds[this._featureIndex] = e;
  }
  readLegacyFeature() {
    if (void 0 === this._cache.legacyFeature) {
      const e = this.readCentroid(),
        t = {
          attributes: this.readAttributes(),
          geometry: this._isPoints ? this.readLegacyPointGeometry() : this.readLegacyGeometry(),
          centroid: (e && {
            x: e.coords[0],
            y: e.coords[1]
          }) ?? null
        };
      return this._cache.legacyFeature = t, t;
    }
    return this._cache.legacyFeature;
  }
  readOptimizedFeature() {
    if (void 0 === this._cache.optFeature) {
      const e = new _layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_5__.OptimizedFeature(this.readGeometry(), this.readAttributes(), this.readCentroid());
      return e.objectId = this.getObjectId(), e.displayId = this.getDisplayId(), this._cache.optFeature = e, e;
    }
    return this._cache.optFeature;
  }
  getXHydrated() {
    const e = this._header.centroid[2 * this._featureIndex],
      t = this.getQuantizationTransform();
    return null == t ? e : e * t.scale[0] + t.translate[0];
  }
  getYHydrated() {
    const e = this._header.centroid[2 * this._featureIndex + 1],
      t = this.getQuantizationTransform();
    return null == t ? e : t.translate[1] - e * t.scale[1];
  }
  getX() {
    return this._header.centroid[2 * this._featureIndex] * this._sx + this._tx;
  }
  getY() {
    return this._header.centroid[2 * this._featureIndex + 1] * this._sy + this._ty;
  }
  readLegacyPointGeometry() {
    return {
      x: this.getX(),
      y: this.getY()
    };
  }
  readLegacyGeometry(e) {
    const t = this.readUnquantizedGeometry(e);
    return (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__.convertToGeometry)(t, this.geometryType, !1, !1);
  }
  readLegacyCentroid() {
    const e = this.readCentroid();
    if (!e) return null;
    const [t, r] = e.coords;
    return {
      x: t,
      y: r
    };
  }
  readGeometryArea() {
    return this._cache.area || this.readGeometry(!0), this._cache.area;
  }
  readUnquantizedGeometry(e = !1) {
    if (void 0 === this._cache.unquantGeometry) {
      const t = this.readGeometry(e);
      if (!t) return this._cache.unquantGeometry = void 0, null;
      const r = f(t.coords.length).decoded,
        s = t.clone(r),
        i = s.coords;
      let n = 0;
      for (const e of s.lengths) {
        for (let t = 1; t < e; t++) {
          const e = 2 * (n + t),
            r = 2 * (n + t - 1);
          i[e] += i[r], i[e + 1] += i[r + 1];
        }
        n += e;
      }
      return this._cache.unquantGeometry = s, s;
    }
    return this._cache.unquantGeometry;
  }
  readHydratedGeometry() {
    if (this._isPoints) {
      if (this._header.centroid[2 * this._featureIndex] === c) return null;
      const e = this.getXHydrated(),
        t = this.getYHydrated();
      return new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_6__["default"]([], [e, t]);
    }
    const e = this.readGeometry();
    if (!e) return null;
    const t = e.clone(),
      r = this.getQuantizationTransform();
    return null != r && (0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_4__.unquantizeOptimizedGeometry)(t, t, this.hasZ, this.hasM, r), t;
  }
  readGeometry(e = !1) {
    if (void 0 === this._cache.geometry) {
      let r = null;
      if (this._isPoints) {
        if (this._header.centroid[2 * this._featureIndex] === c) return null;
        const e = this.getX(),
          t = this.getY();
        r = new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_6__["default"]([], [e, t]);
      } else {
        const s = this._header.offsets.geometry[this._featureIndex],
          i = this._reader;
        if (0 === s) {
          const e = this._readServerCentroid();
          if (!e) return null;
          const [t, r] = e.coords;
          return this.createQuantizedExtrudedGeometry(t, r);
        }
        i.move(s);
        try {
          if (r = e ? this._parseGeometryForDisplay(i) : this._parseGeometry(i), !r) {
            const e = this._readServerCentroid();
            if (!e) return null;
            const [t, r] = e.coords;
            return this.createQuantizedExtrudedGeometry(t, r);
          }
        } catch (t) {
          return console.error("Failed to parse geometry!", t), null;
        }
      }
      return this._cache.geometry = r, r;
    }
    return this._cache.geometry;
  }
  readCentroid() {
    if (void 0 === this._cache.centroid) {
      let e;
      return e = this._computeCentroid(), e || (e = this._readServerCentroid()), this._cache.centroid = e ?? void 0, e ?? null;
    }
    return this._cache.centroid;
  }
  copy() {
    const e = this._reader.clone(),
      t = new S(this.instance, e, this._header, this.fullSchema());
    return this.copyInto(t), t;
  }
  next() {
    for (this._cache.area = 0, this._cache.unquantGeometry = void 0, this._cache.geometry = void 0, this._cache.centroid = void 0, this._cache.legacyFeature = void 0, this._cache.optFeature = void 0; ++this._featureIndex < this._size && !this._getExists(););
    return this._featureIndex < this._size;
  }
  _readAttribute(e, t) {
    const r = this._header.fields.get(e);
    if (null == r) return;
    let s = this._readAttributeAtIndex(r.index);
    "esriFieldTypeTimestampOffset" === this.fields.get(e)?.type && (s = this.parseTimestampOffset(s));
    const i = this._header.fields.isDateField(r.name);
    return t ? null == s ? s : i ? new Date(s) : s : s;
  }
  _readAttributes() {
    const e = {};
    for (const t of this._header.fields.fields) e[t.name] = this._readAttributeAtIndex(t.index);
    return e;
  }
  copyInto(e) {
    super.copyInto(e), e._featureIndex = this._featureIndex, e._featureOffset = this._featureOffset, e._hasNext = this._hasNext;
  }
  _readAttributeAtIndex(e) {
    const t = this._header.offsets.attributes[this._featureIndex * this._header.fieldCount + e],
      r = this._reader;
    return r.move(t), p(r);
  }
  _readServerCentroid() {
    const e = this._header.centroid[2 * this._featureIndex] + this._tx,
      t = this._header.centroid[2 * this._featureIndex + 1] + this._ty;
    return e === c ? null : new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_6__["default"]([], [e, t]);
  }
  _parseGeometry(e) {
    const t = 2,
      r = 3,
      s = e.asUnsafe(),
      i = s.getLength(),
      n = s.pos() + i,
      a = [],
      o = [];
    for (; s.pos() < n && s.next();) switch (s.tag()) {
      case t:
        {
          const e = s.getUInt32(),
            t = s.pos() + e;
          for (; s.pos() < t;) o.push(s.getUInt32());
          break;
        }
      case r:
        {
          const e = s.getUInt32(),
            t = s.pos() + e;
          for (a.push(s.getSInt32() + this._tx), a.push(s.getSInt32() + this._ty), this.hasZ && s.getSInt32(), this.hasM && s.getSInt32(); s.pos() < t;) a.push(s.getSInt32()), a.push(s.getSInt32()), this.hasZ && s.getSInt32(), this.hasM && s.getSInt32();
          break;
        }
      default:
        s.skip();
    }
    return a.length ? new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_6__["default"](o, a) : null;
  }
  _parseGeometryForDisplay(e) {
    const t = 2,
      s = 3,
      i = e.asUnsafe(),
      n = i.getLength(),
      a = i.pos() + n,
      o = [],
      d = [];
    let c = 0,
      g = 0,
      l = null,
      _ = 0;
    const y = "esriGeometryPolygon" === this.geometryType;
    for (; i.pos() < a && i.next();) switch (i.tag()) {
      case t:
        {
          const e = i.getUInt32(),
            t = i.pos() + e;
          for (; i.pos() < t;) {
            const e = i.getUInt32();
            o.push(e), c += e;
          }
          l = f(2 * c).delta;
          break;
        }
      case s:
        {
          i.getUInt32();
          const e = 2 + (this.hasZ ? 1 : 0) + (this.hasM ? 1 : 0);
          (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.assertIsSome)(l);
          for (const t of o) if (g + e * t > l.length) for (let e = 0; e < t; e++) i.getSInt32(), i.getSInt32(), this.hasZ && i.getSInt32(), this.hasM && i.getSInt32();else if (y && u) {
            const e = this.getAreaSimplificationThreshold(t, this._header.vertexCount);
            let r = 2,
              s = 1;
            const n = !1;
            let a = i.getSInt32(),
              h = i.getSInt32();
            l[g++] = a, l[g++] = h, this.hasZ && i.getSInt32(), this.hasM && i.getSInt32();
            let o = i.getSInt32(),
              u = i.getSInt32();
            for (this.hasZ && i.getSInt32(), this.hasM && i.getSInt32(); r < t;) {
              let t = i.getSInt32(),
                n = i.getSInt32();
              this.hasZ && i.getSInt32(), this.hasM && i.getSInt32();
              const d = a + o,
                c = h + u;
              m(a, h, d, c, d + t, c + n) >= e ? (_ += -.5 * (d - a) * (c + h), s > 1 && x(l[g - 2], l[g - 1], o, u) ? (l[g - 2] += o, l[g - 1] += u) : (l[g++] = o, l[g++] = u, s++), a = d, h = c) : (t += o, n += u), o = t, u = n, r++;
            }
            s < 3 || n ? g -= 2 * s : (_ += -.5 * (a + o - a) * (h + u + h), x(l[g - 2], l[g - 1], o, u) ? (l[g - 2] += o, l[g - 1] += u, d.push(s)) : (l[g++] = o, l[g++] = u, d.push(++s)));
          } else {
            let e = 0,
              r = i.getSInt32(),
              s = i.getSInt32();
            this.hasZ && i.getSInt32(), this.hasM && i.getSInt32(), l[g++] = r, l[g++] = s, e += 1;
            for (let n = 1; n < t; n++) {
              const t = i.getSInt32(),
                a = i.getSInt32(),
                h = r + t,
                o = s + a;
              _ += -.5 * (h - r) * (o + s), this.hasZ && i.getSInt32(), this.hasM && i.getSInt32(), n > 2 && x(l[g - 2], l[g - 1], t, a) ? (l[g - 2] += t, l[g - 1] += a) : (l[g++] = t, l[g++] = a, e += 1), r = h, s = o;
            }
            d.push(e);
          }
          break;
        }
      default:
        i.skip();
    }
    if (this._cache.area = _, !d.length) return null;
    if (this._tx || this._ty) {
      let e = 0;
      (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_2__.assertIsSome)(l);
      for (const t of d) l[2 * e] += this._tx, l[2 * e + 1] += this._ty, e += t;
    }
    return new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_6__["default"](d, l);
  }
}


/***/ }),

/***/ 68346:
/*!*************************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/FeatureSetReaderPBFHeader.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FeatureSetHeader": () => (/* binding */ o),
/* harmony export */   "parseHeader": () => (/* binding */ a)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/Error.js */ 32995);
/* harmony import */ var _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../layers/support/FieldsIndex.js */ 19346);
/* harmony import */ var _rest_query_operations_pbfFeatureServiceParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../rest/query/operations/pbfFeatureServiceParser.js */ 58583);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/



const n = 268435455;
class o {
  constructor() {
    this.hasFeatures = !1, this.exceededTransferLimit = !1, this.fieldCount = 0, this.featureCount = 0, this.objectIdFieldIndex = 0, this.vertexCount = 0, this.offsets = {
      attributes: new Array(),
      geometry: new Array()
    }, this.centroid = new Array();
  }
}
function a(a, i, c = !1) {
  const f = 1,
    d = 3,
    u = 9,
    g = 12,
    l = 13,
    p = 15,
    h = a.asUnsafe(),
    b = h.pos(),
    w = new o();
  let m = 0,
    y = 0;
  const k = 1,
    x = 2,
    I = 4,
    L = 3;
  let A = null,
    F = null,
    C = null,
    S = !1;
  const j = [];
  for (; h.next();) switch (h.tag()) {
    case f:
      A = h.getString();
      break;
    case d:
      F = h.getString();
      break;
    case g:
      C = h.processMessage(_rest_query_operations_pbfFeatureServiceParser_js__WEBPACK_IMPORTED_MODULE_2__.parseTransform);
      break;
    case u:
      if (w.exceededTransferLimit = h.getBool(), w.exceededTransferLimit) {
        w.offsets.geometry = c ? new Float64Array(8e3) : new Int32Array(8e3), w.centroid = c ? new Float64Array(16e3) : new Int32Array(16e3);
        for (let e = 0; e < w.centroid.length; e++) w.centroid[e] = n;
      }
      break;
    case l:
      {
        const e = h.processMessage(_rest_query_operations_pbfFeatureServiceParser_js__WEBPACK_IMPORTED_MODULE_2__.parseField);
        e.index = m++, j.push(e);
        break;
      }
    case p:
      {
        const e = h.getLength(),
          t = h.pos() + e;
        if (!w.exceededTransferLimit) {
          const e = w.offsets.geometry,
            t = w.centroid;
          e.push(0), t.push(n), t.push(n);
        }
        !S && w.exceededTransferLimit && (S = !0, w.offsets.attributes = c ? new Float64Array(8e3 * m) : new Uint32Array(8e3 * m));
        let s = y * m;
        for (; h.pos() < t && h.next();) switch (h.tag()) {
          case k:
            {
              if (S) w.offsets.attributes[s++] = h.pos();else {
                w.offsets.attributes.push(h.pos());
              }
              const e = h.getLength();
              h.skipLen(e);
              break;
            }
          case x:
            if (i) {
              const e = h.getLength(),
                t = h.pos() + e;
              for (; h.pos() < t && h.next();) switch (h.tag()) {
                case L:
                  {
                    h.getUInt32();
                    const e = h.getSInt64(),
                      t = h.getSInt64();
                    w.centroid[2 * y] = e, w.centroid[2 * y + 1] = t;
                    break;
                  }
                default:
                  h.skip();
              }
            } else {
              w.offsets.geometry[y] = h.pos();
              const e = h.getLength();
              w.vertexCount += e, h.skipLen(e);
            }
            break;
          case I:
            {
              const e = h.getLength(),
                t = h.pos() + e;
              for (; h.pos() < t && h.next();) switch (h.tag()) {
                case L:
                  {
                    h.getUInt32();
                    const e = h.getSInt64(),
                      t = h.getSInt64();
                    w.centroid[2 * y] = e, w.centroid[2 * y + 1] = t;
                    break;
                  }
                default:
                  h.skip();
              }
              break;
            }
          default:
            h.skip();
        }
        y++, w.hasFeatures = !0;
        break;
      }
    default:
      h.skip();
  }
  const U = A || F;
  if (!U) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("FeatureSet has no objectId or globalId field name");
  return w.fields = new _layers_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_1__["default"](j), w.featureCount = y, w.fieldCount = m, w.objectIdFieldIndex = w.fields.get(U)?.index, w.transform = C, w.displayIds = new Uint32Array(w.featureCount), w.groupIds = new Uint16Array(w.featureCount), h.move(b), w;
}


/***/ }),

/***/ 7408:
/*!***********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/UpdateToken.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UpdateToken": () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class t {
  constructor() {
    this.version = 0, this.source = !1, this.targets = {
      feature: !1,
      aggregate: !1
    }, this.storage = {
      filters: !1,
      data: !1
    }, this.mesh = !1, this.queryFilter = !1, this.why = {
      mesh: [],
      source: []
    };
  }
  static create(e) {
    const s = new t();
    let r;
    for (r in e) {
      const t = e[r];
      if ("object" == typeof t) for (const e in t) {
        const a = e,
          i = t[a];
        s[r][a] = i;
      }
      s[r] = t;
    }
    return s;
  }
  static empty() {
    return t.create({});
  }
  static all() {
    return t.create({
      source: !0,
      targets: {
        feature: !0,
        aggregate: !0
      },
      storage: {
        filters: !0,
        data: !0
      },
      mesh: !0
    });
  }
  unset(t) {
    this.version = t.version, t.source && (this.source = !1), t.targets.feature && (this.targets.feature = !1), t.targets.aggregate && (this.targets.aggregate = !1), t.storage.filters && (this.storage.filters = !1), t.storage.data && (this.storage.data = !1), t.mesh && (this.mesh = !1), t.queryFilter && (this.queryFilter = !1);
  }
  any() {
    return this.source || this.mesh || this.storage.filters || this.storage.data || this.targets.feature || this.targets.aggregate || this.queryFilter;
  }
  describe() {
    let t = 0,
      e = "";
    if (this.mesh) {
      t += 20, e += "-> (20) Mesh needs update\n";
      for (const t of this.why.mesh) e += `    + ${t}\n`;
    }
    if (this.source) {
      t += 10, e += "-> (10) The source needs update\n";
      for (const t of this.why.source) e += `    + ${t}\n`;
    }
    this.targets.feature && (t += 5, e += "-> (5) Feature target parameters changed\n"), this.storage.filters && (t += 5, e += "-> (5) Feature filter parameters changed\n"), this.targets.aggregate && (t += 4, e += "-> (4) Aggregate target parameters changed\n"), this.storage.data && (t += 1, e += "-> (1) Texture storage parameters changed");
    const s = t < 5 ? "Fastest" : t < 10 ? "Fast" : t < 15 ? "Moderate" : t < 20 ? "Slow" : "Very Slow";
    console.debug(`Applying ${s} update of cost ${t}/45 `), console.debug(e);
  }
  toJSON() {
    return {
      queryFilter: this.queryFilter,
      source: this.source,
      targets: this.targets,
      storage: this.storage,
      mesh: this.mesh
    };
  }
}


/***/ }),

/***/ 99890:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/tileRenderers/support/visualVariablesUtils.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "convertColorVariable": () => (/* binding */ m),
/* harmony export */   "convertVisualVariables": () => (/* binding */ c),
/* harmony export */   "getVisualVariableSizeValueRepresentationRatio": () => (/* binding */ l),
/* harmony export */   "normalizeSizeElement": () => (/* binding */ u),
/* harmony export */   "normalizeSizeStops": () => (/* binding */ a),
/* harmony export */   "stopToSizeStop": () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/screenUtils.js */ 55798);
/* harmony import */ var _engine_webgl_color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../engine/webgl/color.js */ 9203);
/* harmony import */ var _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../engine/webgl/definitions.js */ 80696);
/* harmony import */ var _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../engine/webgl/enums.js */ 20753);
/* harmony import */ var _engine_webgl_visualVariablesUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../engine/webgl/visualVariablesUtils.js */ 75683);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/





function l(e, t) {
  if (!e || !t) return e;
  switch (t) {
    case "radius":
    case "distance":
      return 2 * e;
    case "diameter":
    case "width":
      return e;
    case "area":
      return Math.sqrt(e);
  }
  return e;
}
function r(t) {
  return {
    value: t.value,
    size: (0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.toPt)(t.size)
  };
}
function a(e) {
  return (e ?? []).map(e => r(e));
}
function u(t) {
  if ("string" == typeof t || "number" == typeof t) return (0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.toPt)(t);
  const s = t;
  return {
    type: "size",
    expression: s.expression,
    stops: a(s.stops)
  };
}
const p = e => {
  const s = [],
    o = [],
    i = a(e),
    l = i.length;
  for (let r = 0; r < 6; r++) {
    const e = i[Math.min(r, l - 1)];
    s.push(e.value), o.push(null == e.size ? _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_2__.nanMagicNumber : (0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.pt2px)(e.size));
  }
  return {
    values: new Float32Array(s),
    sizes: new Float32Array(o)
  };
};
function c(e) {
  const t = e && e.length > 0 ? {} : null,
    s = t ? {} : null;
  if (!t || !s) return {
    vvFields: t,
    vvRanges: s
  };
  for (const n of e) if (n.field && (t[n.type] = n.field), "size" === n.type) {
    s.size || (s.size = {});
    const e = n;
    switch ((0,_engine_webgl_visualVariablesUtils_js__WEBPACK_IMPORTED_MODULE_4__.getTypeOfSizeVisualVariable)(e)) {
      case _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLVVFlag.SIZE_MINMAX_VALUE:
        s.size.minMaxValue = {
          minDataValue: e.minDataValue,
          maxDataValue: e.maxDataValue,
          minSize: u(e.minSize),
          maxSize: u(e.maxSize)
        };
        break;
      case _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLVVFlag.SIZE_SCALE_STOPS:
        s.size.scaleStops = {
          stops: a(e.stops)
        };
        break;
      case _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLVVFlag.SIZE_FIELD_STOPS:
        if (e.levels) {
          const t = {};
          for (const s in e.levels) t[s] = p(e.levels[s]);
          s.size.fieldStops = {
            type: "level-dependent",
            levels: t
          };
        } else s.size.fieldStops = {
          type: "static",
          ...p(e.stops)
        };
        break;
      case _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLVVFlag.SIZE_UNIT_VALUE:
        s.size.unitValue = {
          unit: e.valueUnit,
          valueRepresentation: e.valueRepresentation ?? void 0
        };
    }
  } else if ("color" === n.type) s.color = m(n);else if ("opacity" === n.type) s.opacity = f(n);else if ("rotation" === n.type) {
    const e = n;
    s.rotation = {
      type: e.rotationType
    };
  }
  return {
    vvFields: t,
    vvRanges: s
  };
}
function f(e) {
  const t = {
    values: [0, 0, 0, 0, 0, 0, 0, 0],
    opacities: [0, 0, 0, 0, 0, 0, 0, 0]
  };
  if ("string" == typeof e.field) {
    if (!e.stops) return null;
    {
      if (e.stops.length > 8) return null;
      const s = e.stops;
      for (let e = 0; e < 8; ++e) {
        const n = s[Math.min(e, s.length - 1)];
        t.values[e] = n.value, t.opacities[e] = n.opacity;
      }
    }
  } else {
    if (!(e.stops && e.stops.length >= 0)) return null;
    {
      const s = e.stops && e.stops.length >= 0 ? e.stops[0].opacity : 0;
      for (let e = 0; e < 8; e++) t.values[e] = 1 / 0, t.opacities[e] = s;
    }
  }
  return t;
}
function v(e, t, s) {
  e[4 * t] = s.r / 255, e[4 * t + 1] = s.g / 255, e[4 * t + 2] = s.b / 255, e[4 * t + 3] = s.a;
}
function m(e) {
  if (null == e) return null;
  if (e.normalizationField) return null;
  const t = {
    field: null,
    values: [0, 0, 0, 0, 0, 0, 0, 0],
    colors: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  };
  if ("string" == typeof e.field) {
    if (!e.stops) return null;
    {
      if (e.stops.length > 8) return null;
      t.field = e.field;
      const s = e.stops;
      for (let e = 0; e < 8; ++e) {
        const n = s[Math.min(e, s.length - 1)];
        t.values[e] = n.value, v(t.colors, e, n.color);
      }
    }
  } else {
    if (!(e.stops && e.stops.length >= 0)) return null;
    {
      const s = e.stops && e.stops.length >= 0 && e.stops[0].color;
      for (let e = 0; e < 8; e++) t.values[e] = 1 / 0, v(t.colors, e, s);
    }
  }
  for (let n = 0; n < 32; n += 4) (0,_engine_webgl_color_js__WEBPACK_IMPORTED_MODULE_1__.premultiplyAlpha)(t.colors, n, !0);
  return t;
}


/***/ }),

/***/ 33269:
/*!**************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/VertexElementDescriptor.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VertexElementDescriptor": () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class t {
  constructor(t, s, i, h, o, e = !1, r = 0) {
    this.name = t, this.count = s, this.type = i, this.offset = h, this.stride = o, this.normalized = e, this.divisor = r;
  }
}


/***/ })

}]);
//# sourceMappingURL=node_modules_arcgis_core_views_2d_engine_webgl_util_debug_js-node_modules_arcgis_core_views_2-1381f8.js.map