"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["default-node_modules_arcgis_core_views_2d_engine_webgl_GeometryUtils_js-node_modules_arcgis_c-0fbeb5"],{

/***/ 10625:
/*!**************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "between": () => (/* binding */ i),
/* harmony export */   "degToByte": () => (/* binding */ c),
/* harmony export */   "interpolate": () => (/* binding */ f),
/* harmony export */   "log2": () => (/* binding */ e),
/* harmony export */   "positiveMod": () => (/* binding */ u),
/* harmony export */   "radToByte": () => (/* binding */ o)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const n = 128 / Math.PI,
  t = 256 / 360,
  r = 1 / Math.LN2;
function u(n, t) {
  return (n %= t) >= 0 ? n : n + t;
}
function o(t) {
  return u(t * n, 256);
}
function c(n) {
  return u(n * t, 256);
}
function e(n) {
  return Math.log(n) * r;
}
function f(n, t, r) {
  return n * (1 - r) + t * r;
}
function i(n, t, r) {
  return n >= t && n <= r || n >= r && n <= t;
}


/***/ }),

/***/ 81925:
/*!***************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/alignmentUtils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HAlign": () => (/* binding */ e),
/* harmony export */   "VAlign": () => (/* binding */ t),
/* harmony export */   "getAlignmentFromPlacement": () => (/* binding */ a),
/* harmony export */   "getJustification": () => (/* binding */ s),
/* harmony export */   "getXAnchorDirection": () => (/* binding */ r),
/* harmony export */   "getXDirection": () => (/* binding */ c),
/* harmony export */   "getYAnchorDirection": () => (/* binding */ n),
/* harmony export */   "getYDirection": () => (/* binding */ o),
/* harmony export */   "isMapAligned": () => (/* binding */ i)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
var e, t;
function r(t) {
  switch (t) {
    case "left":
      return e.Left;
    case "right":
      return e.Right;
    case "center":
      return e.Center;
  }
}
function n(e) {
  switch (e) {
    case "top":
      return t.Top;
    case "middle":
      return t.Center;
    case "baseline":
      return t.Baseline;
    case "bottom":
      return t.Bottom;
  }
}
function a(r) {
  switch (r) {
    case "above-left":
    case "esriServerPointLabelPlacementAboveLeft":
      return [e.Right, t.Bottom];
    case "above-center":
    case "above-along":
    case "esriServerPointLabelPlacementAboveCenter":
    case "esriServerLinePlacementAboveAlong":
      return [e.Center, t.Bottom];
    case "above-right":
    case "esriServerPointLabelPlacementAboveRight":
      return [e.Left, t.Bottom];
    case "center-left":
    case "esriServerPointLabelPlacementCenterLeft":
      return [e.Right, t.Center];
    case "center-center":
    case "center-along":
    case "esriServerPointLabelPlacementCenterCenter":
    case "esriServerLinePlacementCenterAlong":
    case "always-horizontal":
    case "esriServerPolygonPlacementAlwaysHorizontal":
      return [e.Center, t.Center];
    case "center-right":
    case "esriServerPointLabelPlacementCenterRight":
      return [e.Left, t.Center];
    case "below-left":
    case "esriServerPointLabelPlacementBelowLeft":
      return [e.Right, t.Top];
    case "below-center":
    case "below-along":
    case "esriServerPointLabelPlacementBelowCenter":
    case "esriServerLinePlacementBelowAlong":
      return [e.Center, t.Top];
    case "below-right":
    case "esriServerPointLabelPlacementBelowRight":
      return [e.Left, t.Top];
    default:
      return console.debug(`Found invalid placement type ${r}`), [e.Center, t.Center];
  }
}
function c(t) {
  switch (t) {
    case e.Right:
      return -1;
    case e.Center:
      return 0;
    case e.Left:
      return 1;
    default:
      return console.debug(`Found invalid horizontal alignment ${t}`), 0;
  }
}
function o(e) {
  switch (e) {
    case t.Top:
      return 1;
    case t.Center:
      return 0;
    case t.Bottom:
    case t.Baseline:
      return -1;
    default:
      return console.debug(`Found invalid vertical alignment ${e}`), 0;
  }
}
function s(t) {
  switch (t) {
    case "left":
      return e.Left;
    case "right":
      return e.Right;
    case "center":
      return e.Center;
  }
}
function i(e) {
  switch (e) {
    case "above-along":
    case "below-along":
    case "center-along":
    case "esriServerLinePlacementAboveAlong":
    case "esriServerLinePlacementBelowAlong":
    case "esriServerLinePlacementCenterAlong":
      return !0;
    default:
      return !1;
  }
}
!function (e) {
  e[e.Left = -1] = "Left", e[e.Center = 0] = "Center", e[e.Right = 1] = "Right";
}(e || (e = {})), function (e) {
  e[e.Top = 1] = "Top", e[e.Center = 0] = "Center", e[e.Bottom = -1] = "Bottom", e[e.Baseline = 2] = "Baseline";
}(t || (t = {}));


/***/ }),

/***/ 21605:
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FillMaterialKey": () => (/* binding */ w),
/* harmony export */   "LabelMaterialKey": () => (/* binding */ Z),
/* harmony export */   "LineMaterialKey": () => (/* binding */ C),
/* harmony export */   "MarkerMaterialKey": () => (/* binding */ N),
/* harmony export */   "MaterialKeyBase": () => (/* binding */ U),
/* harmony export */   "TextMaterialKey": () => (/* binding */ P),
/* harmony export */   "createMaterialKey": () => (/* binding */ f),
/* harmony export */   "hasOutlineFillSymbology": () => (/* binding */ O),
/* harmony export */   "hasSimpleSymbology": () => (/* binding */ b),
/* harmony export */   "hydrateMaterialKey": () => (/* binding */ A),
/* harmony export */   "isOutlineFillSymbology": () => (/* binding */ _),
/* harmony export */   "isSimpleSymbology": () => (/* binding */ I)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/Error.js */ 32995);
/* harmony import */ var _alignmentUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../alignmentUtils.js */ 81925);
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ 20753);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/



function n(t, e, s) {
  const n = _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_FIELD_STOPS | _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_MINMAX_VALUE | _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_SCALE_STOPS | _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_UNIT_VALUE,
    o = (e & (_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVTarget.FIELD_TARGETS_OUTLINE | _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVTarget.MINMAX_TARGETS_OUTLINE | _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVTarget.SCALE_TARGETS_OUTLINE | _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVTarget.UNIT_TARGETS_OUTLINE)) >>> 4;
  return t === _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.LINE && s.isOutline || t === _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.FILL && _(s.symbologyType) ? n & o : n & ~o;
}
const o = 0,
  v = 8,
  l = 7,
  h = 8,
  S = 11,
  u = 11,
  p = 12,
  c = 13,
  y = 14,
  V = 15,
  d = 16,
  g = 17,
  T = 18,
  m = 19,
  z = 20,
  E = 21,
  L = 26,
  M = Object.keys(_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType).filter(t => "number" == typeof _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType[t]).reduce((t, e) => ({
    ...t,
    [e]: _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType[e]
  }), {});
function I(t) {
  return t === _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType.SIMPLE || t === _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType.OUTLINE_FILL_SIMPLE;
}
function _(t) {
  return t === _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType.OUTLINE_FILL || t === _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType.OUTLINE_FILL_SIMPLE;
}
function b(t) {
  return I(t.symbologyType);
}
function O(t) {
  return _(t.symbologyType);
}
function f(t, e) {
  switch (t) {
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.FILL:
      return w.from(e);
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.LINE:
      return C.from(e);
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.MARKER:
      return N.from(e);
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.TEXT:
      return P.from(e);
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.LABEL:
      return Z.from(e);
    default:
      throw new Error(`Unable to createMaterialKey for unknown geometryType ${t}`);
  }
}
function A(t) {
  switch (U.load(t).geometryType) {
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.MARKER:
      return new N(t);
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.FILL:
      return new w(t);
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.LINE:
      return new C(t);
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.TEXT:
      return new P(t);
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.LABEL:
      return new Z(t);
  }
}
class U {
  static load(t) {
    const e = this.shared;
    return e.data = t, e;
  }
  constructor(t) {
    this._data = 0, this._data = t;
  }
  set data(t) {
    this._data = t ?? 0;
  }
  get data() {
    return this._data;
  }
  get geometryType() {
    return this.bits(h, S);
  }
  set geometryType(t) {
    this.setBits(t, h, S);
  }
  get mapAligned() {
    return !!this.bit(z);
  }
  set mapAligned(t) {
    this.setBit(z, t);
  }
  get sdf() {
    return !!this.bit(u);
  }
  set sdf(t) {
    this.setBit(u, t ?? !1);
  }
  get pattern() {
    return !!this.bit(p);
  }
  set pattern(t) {
    this.setBit(p, t);
  }
  get textureBinding() {
    return this.bits(o, v);
  }
  set textureBinding(t) {
    this.setBits(t, o, v);
  }
  get symbologyType() {
    return this.bits(E, L);
  }
  set symbologyType(t) {
    this.setBits(t, E, L);
  }
  get geometryTypeString() {
    switch (this.geometryType) {
      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.FILL:
        return "fill";
      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.MARKER:
        return "marker";
      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.LINE:
        return "line";
      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.TEXT:
        return "text";
      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.LABEL:
        return "label";
      default:
        throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](`Unable to handle unknown geometryType: ${this.geometryType}`);
    }
  }
  setBit(t, e) {
    const s = 1 << t;
    e ? this._data |= s : this._data &= ~s;
  }
  bit(t) {
    return (this._data & 1 << t) >> t;
  }
  setBits(t, e, s) {
    for (let i = e, a = 0; i < s; i++, a++) this.setBit(i, 0 != (t & 1 << a));
  }
  bits(t, e) {
    let s = 0;
    for (let i = t, a = 0; i < e; i++, a++) s |= this.bit(i) << a;
    return s;
  }
  hasVV() {
    return !1;
  }
  setVV(t, e) {}
  getVariation() {
    return {
      mapAligned: this.mapAligned,
      pattern: this.pattern,
      sdf: this.sdf,
      symbologyType: {
        value: _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType[this.symbologyType],
        options: M,
        namespace: "SYMBOLOGY_TYPE"
      }
    };
  }
  getVariationHash() {
    return this._data & ~(l & this.textureBinding);
  }
}
U.shared = new U(0);
const F = t => class extends t {
    get vvSizeMinMaxValue() {
      return 0 !== this.bit(d);
    }
    set vvSizeMinMaxValue(t) {
      this.setBit(d, t);
    }
    get vvSizeScaleStops() {
      return 0 !== this.bit(g);
    }
    set vvSizeScaleStops(t) {
      this.setBit(g, t);
    }
    get vvSizeFieldStops() {
      return 0 !== this.bit(T);
    }
    set vvSizeFieldStops(t) {
      this.setBit(T, t);
    }
    get vvSizeUnitValue() {
      return 0 !== this.bit(m);
    }
    set vvSizeUnitValue(t) {
      this.setBit(m, t);
    }
    hasSizeVV() {
      return this.vvSizeMinMaxValue || this.vvSizeScaleStops || this.vvSizeFieldStops || this.vvSizeUnitValue;
    }
    hasVV() {
      return super.hasVV() || this.hasSizeVV();
    }
    setVV(t, e) {
      super.setVV(t, e);
      const s = n(this.geometryType, t, e) & t;
      this.vvSizeMinMaxValue = !!(s & _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_MINMAX_VALUE), this.vvSizeFieldStops = !!(s & _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_FIELD_STOPS), this.vvSizeUnitValue = !!(s & _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_UNIT_VALUE), this.vvSizeScaleStops = !!(s & _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_SCALE_STOPS);
    }
  },
  x = t => class extends t {
    get vvRotation() {
      return 0 !== this.bit(V);
    }
    set vvRotation(t) {
      this.setBit(V, t);
    }
    hasVV() {
      return super.hasVV() || this.vvRotation;
    }
    setVV(t, e) {
      super.setVV(t, e), this.vvRotation = !e.isOutline && !!(t & _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.ROTATION);
    }
  },
  B = t => class extends t {
    get vvColor() {
      return 0 !== this.bit(c);
    }
    set vvColor(t) {
      this.setBit(c, t);
    }
    hasVV() {
      return super.hasVV() || this.vvColor;
    }
    setVV(t, e) {
      super.setVV(t, e), this.vvColor = !e.isOutline && !!(t & _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.COLOR);
    }
  },
  R = t => class extends t {
    get vvOpacity() {
      return 0 !== this.bit(y);
    }
    set vvOpacity(t) {
      this.setBit(y, t);
    }
    hasVV() {
      return super.hasVV() || this.vvOpacity;
    }
    setVV(t, e) {
      super.setVV(t, e), this.vvOpacity = !e.isOutline && !!(t & _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.OPACITY);
    }
  };
class w extends B(R(F(U))) {
  static load(t) {
    const e = this.shared;
    return e.data = t, e;
  }
  static from(t) {
    const {
        symbologyType: e,
        vvFlags: a
      } = t,
      r = this.load(0);
    return r.geometryType = _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.FILL, r.symbologyType = e, e !== _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType.DOT_DENSITY && r.setVV(a, t), r.data;
  }
  getVariation() {
    return {
      ...super.getVariation(),
      vvColor: this.vvColor,
      vvOpacity: this.vvOpacity,
      vvSizeFieldStops: this.vvSizeFieldStops,
      vvSizeMinMaxValue: this.vvSizeMinMaxValue,
      vvSizeScaleStops: this.vvSizeScaleStops,
      vvSizeUnitValue: this.vvSizeUnitValue
    };
  }
}
w.shared = new w(0);
class N extends B(R(x(F(U)))) {
  static load(t) {
    const e = this.shared;
    return e.data = t, e;
  }
  static from(t) {
    const {
        symbologyType: e,
        vvFlags: a
      } = t,
      r = this.load(0);
    return r.geometryType = _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.MARKER, r.symbologyType = e, e !== _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType.HEATMAP && r.setVV(a, t), r.data;
  }
  getVariation() {
    return {
      ...super.getVariation(),
      vvColor: this.vvColor,
      vvRotation: this.vvRotation,
      vvOpacity: this.vvOpacity,
      vvSizeFieldStops: this.vvSizeFieldStops,
      vvSizeMinMaxValue: this.vvSizeMinMaxValue,
      vvSizeScaleStops: this.vvSizeScaleStops,
      vvSizeUnitValue: this.vvSizeUnitValue
    };
  }
}
N.shared = new N(0);
class C extends B(R(F(U))) {
  static load(t) {
    const e = this.shared;
    return e.data = t, e;
  }
  static from(t) {
    const e = this.load(0);
    return e.geometryType = _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.LINE, e.symbologyType = t.symbologyType, e.setVV(t.vvFlags, t), e.data;
  }
  getVariation() {
    return {
      ...super.getVariation(),
      vvColor: this.vvColor,
      vvOpacity: this.vvOpacity,
      vvSizeFieldStops: this.vvSizeFieldStops,
      vvSizeMinMaxValue: this.vvSizeMinMaxValue,
      vvSizeScaleStops: this.vvSizeScaleStops,
      vvSizeUnitValue: this.vvSizeUnitValue
    };
  }
}
C.shared = new C(0);
class P extends B(R(x(F(U)))) {
  static load(t) {
    const e = this.shared;
    return e.data = t, e;
  }
  static from(t) {
    const e = this.load(0);
    return e.geometryType = _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.TEXT, e.symbologyType = t.symbologyType, e.setVV(t.vvFlags, t), e.data;
  }
  getVariation() {
    return {
      ...super.getVariation(),
      vvColor: this.vvColor,
      vvOpacity: this.vvOpacity,
      vvRotation: this.vvRotation,
      vvSizeFieldStops: this.vvSizeFieldStops,
      vvSizeMinMaxValue: this.vvSizeMinMaxValue,
      vvSizeScaleStops: this.vvSizeScaleStops,
      vvSizeUnitValue: this.vvSizeUnitValue
    };
  }
}
P.shared = new P(0);
class Z extends F(U) {
  static load(t) {
    const e = this.shared;
    return e.data = t, e;
  }
  static from(t) {
    const s = this.load(0);
    return s.geometryType = _enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLGeometryType.LABEL, s.symbologyType = t.symbologyType, s.setVV(t.vvFlags, t), s.mapAligned = (0,_alignmentUtils_js__WEBPACK_IMPORTED_MODULE_1__.isMapAligned)(t.placement), s.data;
  }
  getVariation() {
    return {
      ...super.getVariation(),
      vvSizeFieldStops: this.vvSizeFieldStops,
      vvSizeMinMaxValue: this.vvSizeMinMaxValue,
      vvSizeScaleStops: this.vvSizeScaleStops,
      vvSizeUnitValue: this.vvSizeUnitValue
    };
  }
}
Z.shared = new Z(0);


/***/ })

}]);
//# sourceMappingURL=default-node_modules_arcgis_core_views_2d_engine_webgl_GeometryUtils_js-node_modules_arcgis_c-0fbeb5.js.map