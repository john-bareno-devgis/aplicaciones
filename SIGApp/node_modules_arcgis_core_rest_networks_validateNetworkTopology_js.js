"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["node_modules_arcgis_core_rest_networks_validateNetworkTopology_js"],{

/***/ 31501:
/*!****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/networks/validateNetworkTopology.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "submitValidateNetworkTopologyJob": () => (/* binding */ n),
/* harmony export */   "validateNetworkTopology": () => (/* binding */ a)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../request.js */ 1897);
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Error.js */ 32995);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ 25820);
/* harmony import */ var _support_ValidateNetworkTopologyResult_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./support/ValidateNetworkTopologyResult.js */ 17934);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/




function a(_x, _x2, _x3) {
  return _a.apply(this, arguments);
}
function _a() {
  _a = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (o, a, n) {
    const d = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseUrl)(o),
      l = a.toJSON();
    a.validationSet && (l.validationSet = JSON.stringify(a.validationSet));
    const u = {
        ...l,
        returnEdits: !0,
        f: "json"
      },
      p = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.encode)({
        ...d.query,
        ...u
      }),
      m = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.asValidOptions)(p, {
        ...n,
        method: "post"
      }),
      v = `${d.path}/validateNetworkTopology`,
      {
        data: y
      } = yield (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(v, m),
      c = _support_ValidateNetworkTopologyResult_js__WEBPACK_IMPORTED_MODULE_4__["default"].fromJSON(y);
    return c.serviceEdits = c.serviceEdits?.map(t => ({
      layerId: t.id,
      editedFeatures: t.editedFeatures
    })) ?? [], c;
  });
  return _a.apply(this, arguments);
}
function n(_x4, _x5, _x6) {
  return _n.apply(this, arguments);
}
function _n() {
  _n = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (s, a, n) {
    if (!a.gdbVersion) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("submit-validate-network-topology-job:missing-gdb-version", "version is missing");
    const d = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseUrl)(s),
      l = a.toJSON();
    a.validationSet && (l.validationSet = JSON.stringify(a.validationSet));
    const u = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.asValidOptions)(d.query, {
        query: (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.encode)({
          ...l,
          returnEdits: !0,
          async: !0,
          f: "json"
        }),
        ...n,
        method: "post"
      }),
      p = `${d.path}/validateNetworkTopology`,
      {
        data: m
      } = yield (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(p, u);
    return m ? m.statusUrl : null;
  });
  return _n.apply(this, arguments);
}


/***/ })

}]);
//# sourceMappingURL=node_modules_arcgis_core_rest_networks_validateNetworkTopology_js.js.map