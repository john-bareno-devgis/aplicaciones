{"version":3,"file":"node_modules_esri_calcite-components_dist_components_index4_js.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,CAAC;EACnBC,WAAW,GAAG;IACV,IAAI,CAACC,eAAe,GAAG,IAAIC,GAAG,EAAE;IAChC,IAAI,CAACC,+BAA+B,GAAG;MACnCC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,SAAS;MACdC,YAAY,EAAE;IAClB,CAAC;EACL;EACA,IAAIC,IAAI,GAAG;IACP,OAAO,QAAQ;EACnB;EACAC,MAAM,CAACC,IAAI,EAAE;IACT,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC;EACzB;EACAE,QAAQ,CAACF,IAAI,EAAE;IACX,MAAMG,UAAU,GAAG,QAAQ;IAC3B,OAAO,IAAIF,IAAI,CAACD,IAAI,CAACI,OAAO,EAAE,GAAGD,UAAU,CAAC;EAChD;EACAE,qBAAqB,CAACL,IAAI,EAAE;IACxB,MAAMN,IAAI,GAAGM,IAAI,CAACM,WAAW,EAAE;IAC/B,MAAMX,KAAK,GAAGK,IAAI,CAACO,QAAQ,EAAE,GAAG,CAAC;IACjC,MAAMX,GAAG,GAAGI,IAAI,CAACQ,OAAO,EAAE;IAC1B,OAAQ,GAAEd,IAAK,IAAGC,KAAK,CAACc,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGd,GAAG,CACrDa,QAAQ,EAAE,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;EAC3B;EACAC,aAAa,CAACC,OAAO,EAAEC,EAAE,EAAE;IACvB,MAAMb,IAAI,GAAG,IAAI,CAACc,OAAO,CAACF,OAAO,CAAC;IAClC,MAAMG,SAAS,GAAG,IAAI,CAACC,aAAa,CAACH,EAAE,CAAC;IACxC,MAAMI,KAAK,GAAGF,SAAS,CAACG,aAAa,CAAClB,IAAI,CAAC;IAC3C,MAAM,CAACmB,MAAM,CAAC,GAAGF,KAAK,CACjBG,MAAM,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAKA,IAAI,KAAK,cAAc,CAAC,CAC7CC,GAAG,CAAC,CAAC;MAAEC;IAAM,CAAC,KAAKA,KAAK,CAAC;IAC9B,MAAMC,QAAQ,GAAG,IAAI,CAACC,wBAAwB,CAACN,MAAM,CAAC;IACtD,MAAMO,eAAe,GAAG1B,IAAI,CAAC2B,UAAU,EAAE,IAAI3B,IAAI,CAAC4B,iBAAiB,EAAE,GAAGJ,QAAQ,CAAC;IACjFxB,IAAI,CAAC6B,UAAU,CAACH,eAAe,CAAC;IAChC,OAAO1B,IAAI;EACf;EACA8B,IAAI,CAACC,KAAK,EAAEC,KAAK,EAAE;IACf,OAAOD,KAAK,CAAC3B,OAAO,EAAE,KAAK4B,KAAK,CAAC5B,OAAO,EAAE;EAC9C;EACAU,OAAO,CAACF,OAAO,EAAE;IACb,OAAO,IAAIX,IAAI,CAACW,OAAO,CAAC;EAC5B;EACAI,aAAa,CAACH,EAAE,EAAE;IACd,IAAIE,SAAS,GAAG,IAAI,CAACxB,eAAe,CAAC0C,GAAG,CAACpB,EAAE,CAAC;IAC5C,IAAI,CAACE,SAAS,EAAE;MACZA,SAAS,GAAG,IAAImB,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QACzCC,QAAQ,EAAEvB,EAAE;QACZ,GAAG,IAAI,CAACpB;MACZ,CAAC,CAAC;MACF,IAAI,CAACF,eAAe,CAAC8C,GAAG,CAACxB,EAAE,EAAEE,SAAS,CAAC;IAC3C;IACA,OAAOA,SAAS;EACpB;EACAU,wBAAwB,CAACa,WAAW,EAAE;IAClC,MAAM,CAACC,IAAI,EAAE,GAAGC,YAAY,CAAC,GAAGF,WAAW,CAACG,KAAK,CAAC,CAAC,CAAC;IACpD,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGH,YAAY,CAACI,IAAI,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACzD,MAAMC,cAAc,GAAGP,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5C,OAAOO,cAAc,IAAIC,MAAM,CAACL,KAAK,CAAC,GAAG,EAAE,GAAGK,MAAM,CAACJ,OAAO,IAAI,CAAC,CAAC,CAAC;EACvE;AACJ","sources":["./node_modules/@esri/calcite-components/dist/components/index4.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v1.11.0\n */\nclass NativeDateEngine {\n    constructor() {\n        this._formatterCache = new Map();\n        this._commonDateTimeFormatterOptions = {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            timeZoneName: 'shortOffset',\n        };\n    }\n    get name() {\n        return 'native';\n    }\n    create(date) {\n        return new Date(date);\n    }\n    increase(date) {\n        const oneDayInMs = 86400000;\n        return new Date(date.getTime() + oneDayInMs);\n    }\n    formatToIsoDateString(date) {\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return `${year}-${month.toString().padStart(2, '0')}-${day\n            .toString()\n            .padStart(2, '0')}`;\n    }\n    isoToTimeZone(isoDate, tz) {\n        const date = this._toDate(isoDate);\n        const formatter = this._getFormatter(tz);\n        const parts = formatter.formatToParts(date);\n        const [offset] = parts\n            .filter(({ type }) => type === 'timeZoneName')\n            .map(({ value }) => value);\n        const tzOffset = this._getTimeZoneOffsetInMins(offset);\n        const tzOffsetMinutes = date.getMinutes() - (date.getTimezoneOffset() - tzOffset);\n        date.setMinutes(tzOffsetMinutes);\n        return date;\n    }\n    same(date1, date2) {\n        return date1.getTime() === date2.getTime();\n    }\n    _toDate(isoDate) {\n        return new Date(isoDate);\n    }\n    _getFormatter(tz) {\n        let formatter = this._formatterCache.get(tz);\n        if (!formatter) {\n            formatter = new Intl.DateTimeFormat('en-US', {\n                timeZone: tz,\n                ...this._commonDateTimeFormatterOptions,\n            });\n            this._formatterCache.set(tz, formatter);\n        }\n        return formatter;\n    }\n    _getTimeZoneOffsetInMins(gmtTimeZone) {\n        const [sign, ...hoursMinutes] = gmtTimeZone.slice(3);\n        const [hours, minutes] = hoursMinutes.join('').split(':');\n        const signMultiplier = sign === '+' ? 1 : -1;\n        return signMultiplier * (Number(hours) * 60 + Number(minutes || 0));\n    }\n}\n\nexport { NativeDateEngine as DateEngine };\n"],"names":["NativeDateEngine","constructor","_formatterCache","Map","_commonDateTimeFormatterOptions","year","month","day","timeZoneName","name","create","date","Date","increase","oneDayInMs","getTime","formatToIsoDateString","getFullYear","getMonth","getDate","toString","padStart","isoToTimeZone","isoDate","tz","_toDate","formatter","_getFormatter","parts","formatToParts","offset","filter","type","map","value","tzOffset","_getTimeZoneOffsetInMins","tzOffsetMinutes","getMinutes","getTimezoneOffset","setMinutes","same","date1","date2","get","Intl","DateTimeFormat","timeZone","set","gmtTimeZone","sign","hoursMinutes","slice","hours","minutes","join","split","signMultiplier","Number","DateEngine"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}