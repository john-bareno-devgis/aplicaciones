{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/components/confirm-dialog/confirm-dialog.component.ts","./src/app/home/components/confirm-dialog/confirm-dialog.component.html","./src/app/home/components/filter/filter.component.ts","./src/app/home/components/filter/filter.component.html","./src/app/home/components/footer/footer.component.ts","./src/app/home/components/footer/footer.component.html","./src/app/home/components/header/header.component.ts","./src/app/home/components/header/header.component.html","./src/app/home/components/home/home.component.ts","./src/app/home/components/home/home.component.html","./src/app/home/components/login/login.component.ts","./src/app/home/components/login/login.component.html","./src/app/home/components/modal-addfield/modal-addfield.component.ts","./src/app/home/components/modal-addfield/modal-addfield.component.html","./src/app/home/components/modal-category/modal-category.component.ts","./src/app/home/components/modal-category/modal-category.component.html","./src/app/home/components/modal-form-user/modal-form-user.component.ts","./src/app/home/components/modal-form-user/modal-form-user.component.html","./src/app/home/components/modal-forms/modal-forms.component.ts","./src/app/home/components/modal-forms/modal-forms.component.html","./src/app/home/components/modal-layer/modal-layer.component.ts","./src/app/home/components/modal-layer/modal-layer.component.html","./src/app/home/components/modal-new-user/modal-new-user.component.ts","./src/app/home/components/modal-new-user/modal-new-user.component.html","./src/app/home/components/modal-remove-active/modal-remove.component.ts","./src/app/home/components/modal-remove-active/modal-remove.component.html","./src/app/home/components/modal-window/modal-window.component.ts","./src/app/home/components/modal-window/modal-window.component.html","./src/app/home/components/modal-workspace/modal-workspace.component.ts","./src/app/home/components/modal-workspace/modal-workspace.component.html","./src/app/home/components/modal/modal.component.ts","./src/app/home/components/modal/modal.component.html","./src/app/home/components/modal_admon_active/admon-active/admon-active.component.ts","./src/app/home/components/modal_admon_active/admon-active/admon-active.component.html","./src/app/home/components/sidebar/sidebar.component.ts","./src/app/home/components/sidebar/sidebar.component.html","./src/app/home/home.module.ts","./src/app/home/services/category_layers/category.service.ts","./src/app/home/services/filter/filter.service.ts","./src/app/home/services/forms/field-form.service.ts","./src/app/home/services/forms/form.service.ts","./src/app/home/services/forms/object-types.service.ts","./src/app/home/services/layers/layer.service.ts","./src/app/home/services/login/login.service.ts","./src/app/home/services/users/users.service.ts","./src/app/material/material.module.ts","./src/app/view/components/map-view/map-view.component.ts","./src/app/view/components/map-view/map-view.component.html","./src/app/view/components/panoramic-view/panoramic-view.component.ts","./src/app/view/components/panoramic-view/panoramic-view.component.html","./src/app/view/services/active.service.ts","./src/app/view/services/map.service.ts","./src/app/view/services/panoramic.service.ts","./src/app/view/view.module.ts","./src/app/widgets/add-layer/add-layer.component.ts","./src/app/widgets/add-layer/add-layer.component.html","./src/app/widgets/basemap-gallery/basemap-gallery.component.ts","./src/app/widgets/basemap-gallery/basemap-gallery.component.html","./src/app/widgets/directiva/directive-widget.directive.ts","./src/app/widgets/home-bar/home-bar.component.ts","./src/app/widgets/home-bar/home-bar.component.html","./src/app/widgets/layers-list/layers-list.component.ts","./src/app/widgets/layers-list/layers-list.component.html","./src/app/widgets/measurement/measurement.component.ts","./src/app/widgets/measurement/measurement.component.html","./src/app/widgets/overview-map/overview-map.component.ts","./src/app/widgets/overview-map/overview-map.component.html","./src/app/widgets/print/print.component.ts","./src/app/widgets/print/print.component.html","./src/app/widgets/search/search.component.ts","./src/app/widgets/search/search.component.html","./src/app/widgets/select/select.component.ts","./src/app/widgets/select/select.component.html","./src/app/widgets/title-bar/title-bar.component.ts","./src/app/widgets/title-bar/title-bar.component.html","./src/app/widgets/widgets.module.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@stencil/core/internal/client/ lazy ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object"],"sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  title = \"gis\";\n}\n","<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeModule } from './home/home.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/components/home/home.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        HomeModule,\n        RouterModule.forRoot(routes),\n        ReactiveFormsModule,\n        BrowserAnimationsModule,\n    ],\n    exports: [\n        MatSnackBarModule\n    ],\n    providers: [MatSnackBarModule],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  \n\n  constructor(\n    private dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { \n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<h1 mat-dialog-title align=\"center\">Confirmación</h1>\n<mat-dialog-content class=\"content\">\n  <mat-icon align=\"center\" class=\"iconHelp\">help_outline</mat-icon>\n  <p>{{data.message}}</p>\n  <p>{{data.message2}}</p>\n</mat-dialog-content>\n<mat-dialog-actions class=\"actions\">\n  <button mat-raised-button [mat-dialog-close]=\"true\">{{data.confirmAction}}</button>\n  <button mat-raised-button mat-dialog-close>Cancelar</button>\n</mat-dialog-actions>","import {\n  Component,\n  OnInit,\n  Inject,\n  ViewChild,\n} from \"@angular/core\";\nimport { FieldFormService } from \"../../services/forms/field-form.service\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { MapService } from \"../../../view/services/map.service\";\nimport { PanoramicService } from \"../../../view/services/panoramic.service\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatTableDataSource, MatTable } from \"@angular/material/table\";\nimport { FilterService } from \"../../services/filter/filter.service\";\n\n@Component({\n  selector: \"app-filter\",\n  templateUrl: \"./filter.component.html\",\n  styleUrls: [\"./filter.component.css\"],\n})\nexport class FilterComponent implements OnInit {\n  fields: any;\n  formId: any;\n  campoId: any;\n  tipoBuscar: any;\n  valorBuscar: any;\n  valorBuscar2: any;\n  campos: any = [];\n  activos: any = [];\n  camposigual: any = [];\n  resultados: string[] = [];\n  resultadosCampos: any = [];\n  resultadosActivos: any = [];\n  displayedColumns: string[] = [];\n  DATOS_RESULTADOS: VistaResultados[] = [];\n  defCampo1: String;\n  defCampo2: String;\n  loading = false;\n  pagination = true;\n  pagslength = 0;\n  dataSource = new MatTableDataSource<VistaResultados>([]);\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild('table', { static: true }) table: MatTable<Element>;\n\n  constructor(\n    protected mapService: MapService,\n    protected filterService: FilterService,\n    protected fieldFormService: FieldFormService,\n    protected panoramicService: PanoramicService,\n    private dialogRef: MatDialogRef<FilterComponent>,\n\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.formId = mapService.getCurrentFormId();\n\n    //RE PLANTEAR (Por Coordenadas)\n    /*      if (this.formId === \"\") {\n            this.dialogRef.close();\n            alert(\n              \"No se ha seleccionado ningún formulario para realizar la busqueda\"\n            );\n          }  */\n\n    this.fieldFormService\n      .getFieldForm({ formulario_id: this.formId })\n      .subscribe((data: {}) => {\n        this.fields = data[\"SDTFormularioid\"];\n      });\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  cargarEscena(name, x, y) {\n    var xmlscene = name.substring(6, 16);\n    this.panoramicService.loadScene(xmlscene, name);\n    this.panoramicService.getPanoramic().call(\"lookat(\" + x + \",\" + y + \")\");\n    this.dialogRef.close();\n  }\n\n  limpiar() {\n    if (this.resultados.length != 0) {\n      this.resultados = [];\n      this.campos = [];\n      this.resultadosCampos = [];\n      this.resultadosActivos = [];\n      this.DATOS_RESULTADOS.length = 0;\n      this.table.renderRows();\n      this.displayedColumns = [];\n    }\n\n  }\n\n  search() {\n    this.loading = true;\n    this.limpiar();\n    this.obtenerCampos();\n  }\n\n  obtenerCampos() {\n    if (this.tipoBuscar == \"Coordenadas\") {\n      this.filterService.getActivos().subscribe((data1) => {\n        this.activos = data1;\n        this.buscarCampos(\n          this.campoId,\n          this.tipoBuscar,\n          this.valorBuscar,\n          this.valorBuscar2\n        );\n      });\n    } else {\n      this.filterService.getCampos().subscribe((data) => {\n        this.campos = data;\n        this.buscarCampos(\n          this.campoId,\n          this.tipoBuscar,\n          this.valorBuscar,\n          this.valorBuscar2\n        );\n      });\n    }\n\n\n\n  }\n\n  buscarCampos(id: any, tipo: any, valor1: any, valor2: number) {\n    switch (tipo) {\n      case \"Igual\":\n        this.campos.forEach((element: string) => {\n          if (element[\"formulario_campo_id\"] == id) {\n            if (element[\"formulario_captura_campo_valor\"] == valor1) {\n              this.resultados.push(element);\n            }\n          }\n        });\n        break;\n\n      case \"Contiene\":\n        this.campos.forEach((element: string) => {\n          if (element[\"formulario_campo_id\"] == id) {\n            if (element[\"formulario_captura_campo_valor\"].toUpperCase().includes(valor1.toUpperCase())) {\n              this.resultados.push(element);\n            }\n          }\n        });\n        break;\n\n      case \"Mayor\":\n        this.campos.forEach((element: string) => {\n          if (element[\"formulario_campo_id\"] == id) {\n            if (Number(element[\"formulario_captura_campo_valor\"]) > Number(valor1)) {\n              this.resultados.push(element);\n            }\n          }\n        });\n        break;\n\n      case \"Menor\":\n        this.campos.forEach((element: string) => {\n          if (element[\"formulario_campo_id\"] == id) {\n            if (element[\"formulario_captura_campo_valor\"] < valor1) {\n              this.resultados.push(element);\n            }\n          }\n        });\n        break;\n\n      case \"Intervalo\":\n        this.campos.forEach((element: string) => {\n          if (element[\"formulario_campo_id\"] == id) {\n            if (\n              element[\"formulario_captura_campo_valor\"] > valor1 &&\n              element[\"formulario_captura_campo_valor\"] < valor2\n            ) {\n              this.resultados.push(element);\n            }\n          }\n        });\n        break;\n\n      case \"Coordenadas\":\n        this.activos.forEach((element: string) => {\n          if (\n            Number(element[\"formulario_captura_latitud\"]) == Number(valor1) &&\n            Number(element[\"formulario_captura_longitud\"]) == Number(valor2)\n          ) {\n            this.resultados.push(element);\n          }\n\n        });\n        break;\n\n      default:\n        alert(\"No selecciono el tipo de Busqueda\");\n        this.loading = false;\n        break;\n    }\n    if (this.resultados.length == 0) {\n      alert(\"No se encontraron coincidencias con los parametros buscados\");\n      this.loading = false;\n      this.limpiar();\n    } else {\n      this.getCamposresultados();\n    }\n\n  }\n\n  getCamposresultados() {\n    this.resultados.forEach((element) => {\n      this.filterService\n        .getCamposResultado(element[\"formulario_captura_id\"])\n        .subscribe((data2) => {\n          this.resultadosCampos.push(data2);\n          this.getActivosresultados(element[\"formulario_captura_id\"]);\n        });\n    });\n  }\n\n  getActivosresultados(id) {\n    this.filterService\n      .getActivosResultados(id)\n      .subscribe((data3) => {\n        this.resultadosActivos.push(data3);\n        if (this.resultadosActivos.length == this.resultadosCampos.length && this.resultadosCampos.length == this.resultados.length) {\n          this.generarTabla();\n        }\n      });\n  }\n\n  generarTabla() {\n    var campo1: any, campo2: any, latitud: any, longitud: any, scene: any, sceneX: any, sceneY: any;\n    var ids: any = [];\n    for (let i = 0; i < this.resultados.length; i++) {\n      campo2 = this.resultados[i][\"formulario_captura_campo_valor\"];\n      longitud = Number(this.resultadosActivos[i][\"formulario_captura_longitud\"]).toFixed(4);\n      latitud = Number(this.resultadosActivos[i][\"formulario_captura_latitud\"]).toFixed(4);\n      sceneX = Number(this.resultadosActivos[i][\"formulario_captura_x\"]);\n      sceneY = Number(this.resultadosActivos[i][\"formulario_captura_y\"]);\n      scene = this.resultadosActivos[i][\"formulario_captura_scene\"];\n      this.resultadosCampos[i].forEach(element => {\n        ids.push(element[\"formulario_campo_id\"]);\n        if (element[\"formulario_campo_id\"] == Math.min.apply(null, ids)) {\n          campo1 = element[\"formulario_captura_campo_valor\"];\n          this.defCampo1 = element[\"formulario_campo_nombre\"];\n        }\n        if (element[\"formulario_campo_id\"] == this.campoId) {\n          this.defCampo2 = element[\"formulario_campo_nombre\"];\n        }\n      });\n      const infoResultado = {\n        campo1: campo1,\n        campo2: campo2,\n        latitud: latitud,\n        longitud: longitud,\n        scene: scene,\n        x: sceneX,\n        y: sceneY\n      };\n      this.DATOS_RESULTADOS.push(infoResultado);\n      if (this.DATOS_RESULTADOS.length == this.resultados.length) {\n        this.displayedColumns = [\"campo1\", \"campo2\", \"ubicacion\", \"boton\"];\n        this.loading = false;\n        this.dataSource.data = this.DATOS_RESULTADOS;\n\n      }\n    }\n  }\n\n}\nexport interface VistaResultados {\n  campo1: string;\n  campo2: string;\n  latitud: number;\n  longitud: number;\n  scene: string;\n  x: number;\n  y: number;\n}\n\n\n\n","<button mat-icon-button class=\"close-button\" mat-dialog-close>\n  <mat-icon class=\"close-icon\">close</mat-icon>\n</button>\n<h3 mat-dialog-title align=\"center\">Filtrar Activos</h3>\n\n<mat-dialog-content class=\"filter-container\">\n\n    \n    <mat-form-field appearance=\"fill\" class=\"tipo-busqueda\">\n      <mat-label>Tipo de Busqueda</mat-label>\n      <mat-select required [(ngModel)]=\"tipoBuscar\" class=\"tipoBuscar\">\n        <mat-option value=\"Igual\">Igual a</mat-option>\n        <mat-option value=\"Contiene\">Contiene</mat-option>\n        <mat-option value=\"Mayor\">Mayor que</mat-option>\n        <mat-option value=\"Menor\">Menor que</mat-option>\n        <mat-option value=\"Intervalo\">En un Intervalo</mat-option>\n        <mat-option value=\"Coordenadas\">Por Coordenadas</mat-option>\n      </mat-select>\n      <mat-hint *ngIf=\"formId==''&& (tipoBuscar=='Igual'|| tipoBuscar=='Contiene'||tipoBuscar=='Mayor'||tipoBuscar=='Menor'||tipoBuscar=='Intervalo')\">Seleccione espacio de trabajo</mat-hint>\n    <br>\n  </mat-form-field>\n    <br>\n    <mat-form-field *ngIf=\"tipoBuscar!='Coordenadas'\" appearance=\"fill\" class=\"campo-id\">\n      <mat-label>Campo</mat-label>\n      <mat-select required [(ngModel)]=\"campoId\">\n        <mat-option *ngFor=\"let field of fields; let i=index\" value=\"{{field.formulario_campo_id}}\">{{field.formulario_campo_nombre}}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"fill\" class=\"valor-busqueda\">\n        <mat-label *ngIf=\"tipoBuscar=='Intervalo'\">Valor Menor</mat-label>\n        <mat-label *ngIf=\"tipoBuscar!='Intervalo'&&tipoBuscar!='Coordenadas'\">Valor</mat-label>\n        <mat-label *ngIf=\"tipoBuscar=='Coordenadas'\">Latitud</mat-label>\n        <input matInput type=\"search\" required [(ngModel)]=\"valorBuscar\">\n        <button *ngIf=\"tipoBuscar!='Intervalo'&&tipoBuscar!='Coordenadas'\" mat-button matSuffix mat-icon-button (click)=search()>\n          <mat-icon>search</mat-icon>\n        </button>\n      </mat-form-field>\n    <br>\n      <mat-form-field appearance=\"fill\" class=\"valor-busqueda2\" *ngIf=\"tipoBuscar=='Intervalo'||tipoBuscar=='Coordenadas'\">\n        <mat-label *ngIf=\"tipoBuscar=='Intervalo'\">Valor Mayor</mat-label>\n        <mat-label *ngIf=\"tipoBuscar=='Coordenadas'\">Longitud</mat-label>\n        <input matInput type=\"search\" required [(ngModel)]=\"valorBuscar2\">\n        <button mat-button matSuffix mat-icon-button (click)=search()>\n          <mat-icon>search</mat-icon>\n        </button>\n      </mat-form-field>\n\n      \n<!-- TABLA RESULTADOS -->\n<div class=\"resultados\">\n<mat-spinner *ngIf=\"loading\" mode=\"indeterminate\" class=\"spinner\"></mat-spinner>\n    <table mat-table #table [dataSource]=\"dataSource\">\n  \n      <!-- Field1 Column -->\n      <ng-container matColumnDef=\"campo1\">\n        <th mat-header-cell *matHeaderCellDef> {{defCampo1}} </th>\n        <td type=\"text\" mat-cell *matCellDef=\"let element\"> {{element.campo1}} </td>\n      </ng-container>\n  \n      <!-- Field_Filter Column -->\n      <ng-container matColumnDef=\"campo2\">\n        <th mat-header-cell *matHeaderCellDef> {{defCampo2}} </th>\n        <td type=\"text\" mat-cell *matCellDef=\"let element\"> {{element.campo2}} </td>\n      </ng-container>\n  \n      <!-- Ubication Column -->\n      <ng-container matColumnDef=\"ubicacion\">\n        <th mat-header-cell *matHeaderCellDef> Ubicación </th>\n        <td type=\"text\" mat-cell *matCellDef=\"let element\"> {{element.latitud}}, {{element.longitud}} </td>\n      </ng-container>\n    \n      <!-- Boton para ver el activo -->\n      <ng-container matColumnDef=\"boton\">\n    <th mat-header-cell *matHeaderCellDef> Ver </th>\n    <td type=\"text\" mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button (click)=\"cargarEscena(element.scene, element.x, element.y)\">\n        <mat-icon>pin_drop</mat-icon>\n      </button>  \n    </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSize]=\"5\" showFirstLastButtons hidePageSize></mat-paginator>\n  </div>\n      \n</mat-dialog-content>","import { Component, OnInit } from '@angular/core';\nimport { HomeComponent } from '../home/home.component';\n\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor(\n    public homeComponent: HomeComponent,\n  ) { }\n\n  ngOnInit() {\n  }\n}\n","<div class=\"map-footer\" [style.margin-right]=\"homeComponent.sidenavView?'57px':'0' \"\n    [style.width]=\"homeComponent.activatedViewPanoramic? homeComponent.splitAreaSizeMap+'%':'100%'\">\n    <div id=\"coordenadas\" class=\"coordenadas\"></div>\n    <div id=\"scaleBar\" class=\"scaleBar\"></div>\n</div>\n\n<!-- <div class=\"details\">\n    <span style=\"font-size: smaller;color: white;\">RealView© - Powered by Realidad 5.0</span>\n</div> -->\n<!-- <div class=\"info\">\n    <div class=\"details\">\n        <span style=\"font-size: smaller;\" *ngIf=\"mapService.actuallyForm == ''\">Espacio de Trabajo no seleccionado</span>\n    <mat-icon *ngIf=\"mapService.actuallyForm != ''\" inline=\"true\" matTooltip=\"Categoria\">category</mat-icon>\n    <mat-label>{{mapService.actuallyCategory}}</mat-label>\n    </div>\n    <div class=\"details\">\n        <mat-icon *ngIf=\"mapService.actuallyForm != ''\" inline=\"true\" matTooltip=\"Capa\">layers</mat-icon>\n        <mat-label>{{mapService.actuallyLayer}}</mat-label>\n        </div>\n        <div class=\"details\">\n            <mat-icon *ngIf=\"mapService.actuallyForm != ''\" inline=\"true\" matTooltip=\"Formulario\">assignment</mat-icon>\n            <mat-label>{{mapService.actuallyForm}}</mat-label>\n            </div>\n  </div> -->","import { Component, ViewContainerRef, EventEmitter, Output } from '@angular/core';\nimport { MapService } from '../../../view/services/map.service';\nimport { environment } from \"../../../../environments/environment\";\nimport { LoginService } from \"../../services/login/login.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PanoramicService } from \"../../../view/services/panoramic.service\";\nimport { HomeComponent } from \"../home/home.component\";\nimport { BasemapGalleryComponent } from \"../../../widgets/basemap-gallery/basemap-gallery.component\";\nimport { LayersListComponent } from \"../../../widgets/layers-list/layers-list.component\";\nimport { SearchComponent } from \"../../../widgets/search/search.component\";\nimport { SelectComponent } from \"../../../widgets/select/select.component\";\nimport { MeasurementComponent } from \"../../../widgets/measurement/measurement.component\";\nimport { AddLayerComponent } from \"../../../widgets/add-layer/add-layer.component\";\nimport { OverviewMapComponent } from 'src/app/widgets/overview-map/overview-map.component';\nimport { PrintComponent } from 'src/app/widgets/print/print.component';\nimport { ComponentType } from '@angular/cdk/portal';\nimport Legend from \"@arcgis/core/widgets/Legend\";\nimport Editor from \"@arcgis/core/widgets/Editor.js\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent {\n  @Output() sidenavOpen = new EventEmitter();;\n\n  legendView: boolean = false;\n  editorView: boolean =  false;\n  projectEnvironment = environment;\n  currentCategory: any;\n  currentLayer: any;\n  currentForm: any;\n  divMap: ViewContainerRef;\n  tooltipDashboard = \"Tablero de control\";\n  baseMapGallery: ComponentType<any> = BasemapGalleryComponent;\n  layerList: ComponentType<any> = LayersListComponent;\n  search: ComponentType<any> = SearchComponent;\n  select: ComponentType<any> = SelectComponent;\n  measurement: ComponentType<any> = MeasurementComponent;\n  addLayer: ComponentType<any> = AddLayerComponent;\n  overView: ComponentType<any> = OverviewMapComponent;\n  print: ComponentType<any> = PrintComponent;\n  //Posiciones predefinidas para la apertura de los widgets\n  position = {\n    topRight: { top: '75px', right: '60px' },\n    bottomRight: { bottom: '60px', right: '110px' },\n    topLeft: { top: '75px', left: '20px' },\n    bottomLeft: { bottom: '60px', left: '20px' },\n    middleLeft: { left: '20px' },\n    top: { top: '75px' }\n  };\n\n  constructor(\n    public mapService: MapService,\n    public loginService: LoginService,\n    protected dialog: MatDialog,\n    protected panoramicService: PanoramicService,\n    public homeComponent: HomeComponent,\n\n  ) { }\n  toggleSidenav() {\n    this.sidenavOpen.emit();\n  }\n\n  changeCreateActive() {\n    //verificar formulario activo\n    if (this.panoramicService.getCreateActive())\n      this.panoramicService.setCreateActive(false);\n    else this.panoramicService.setCreateActive(true);\n  }\n\n  openDialog(id: string, component: ComponentType<unknown>, position?: {}) {\n    if (!document.getElementById(id)) {\n      this.dialog.open(component, { id: id, autoFocus: false, hasBackdrop: false, position: position });\n    } else {\n      this.dialog.getDialogById(id).close()\n    }\n  }\n\n  toggleLegend() {\n    const view = this.mapService.getViewMap()\n\n    let legend = new Legend({\n      container: document.createElement(\"div\"),\n      view: view,\n      id: 'leyenda'\n    });\n    if (this.legendView) {\n      view.ui.remove('leyenda');\n      this.legendView = false;\n    } else {\n      view.ui.add(legend, 'top-right');\n      this.legendView = true;\n    }\n  }\n\nopenEditor(){\n  const view = this.mapService.getViewMap()\n  const editor = new Editor({\n    view: view,\n    id :'editor'\n  });\n  \n  if (this.editorView) {\n    view.ui.remove('editor');\n    this.editorView = false;\n  } else {\n    view.ui.add(editor, 'top-right');\n    this.editorView = true;\n  }\n}\n\n}\n","<mat-toolbar class=\"toolbar\">\n  <div id=\"logoApp\">\n    <!-- <img class=\"logo\" src=\"assets/img/Logo_RealGIS.svg\" alt=\"logo\"> -->\n    SIGApp\n    <sub>demo</sub>\n  </div>\n\n  <span class=\"first_spacer\"></span>\n\n  <!-- <cdk-virtual-scroll-viewport itemSize=\"38\" class=\"scroll-widgets\"> -->\n  <div class=\"widgetsButtons\">\n    <!-- <button mat-icon-button matTooltip=\"Crear un Activo\" (click)=\"changeCreateActive()\"\n        *ngIf=\"(loginService.createActive && (homeComponent.activatedViewPanoramic && homeComponent.activatedViewMap) ||  homeComponent.activatedViewPanoramic) \">\n        <mat-icon>add_location</mat-icon>\n      </button>  -->\n\n    <button mat-icon-button matTooltip=\"Galeria de Mapas Base\"\n      (click)=\"openDialog('DialogBasemapGallery',baseMapGallery)\"\n      *ngIf=\"projectEnvironment.modules.baseMapGallery && !homeComponent.activatedViewDashboard\">\n      <!-- <img class=\"icon\" src=\"assets/img/SVG/basemapIcon.svg\" /> -->\n      <mat-icon>dataset</mat-icon>\n    </button>\n    <button mat-icon-button matTooltip=\"Lista de Capas\"\n      (click)=\"openDialog('DialogLayersList',layerList, position['topRight'])\"\n      *ngIf=\"projectEnvironment.modules.layerList && !homeComponent.activatedViewDashboard\">\n      <!-- <img class=\"icon\" src=\"assets/img/SVG/layersIcon.svg\" /> -->\n      <mat-icon>layers</mat-icon>\n\n    </button>\n    <!-- <button mat-icon-button matTooltip=\"Busqueda\" (click)=\"openDialog('DialogSearch',search, position['bottomRight'])\"\n        *ngIf=\"projectEnvironment.modules.search && !homeComponent.activatedViewDashboard\">\n        <mat-icon>search</mat-icon>\n\n        <img class=\"icon\" src=\"assets/img/SVG/searchIcon.svg\" />\n      </button> -->\n    <!-- <button mat-icon-button matTooltip=\"Seleccionar\"\n        (click)=\"openDialog('DialogSelect',select, position['middleLeft'])\"\n        *ngIf=\"projectEnvironment.modules.select && !homeComponent.activatedViewDashboard\">\n        <mat-icon>select_all</mat-icon>\n\n        <img class=\"icon\" src=\"assets/img/SVG/selectIcon.svg\" />\n      </button> -->\n    <button mat-icon-button matTooltip=\"Medir\"\n      (click)=\"openDialog('DialogMeasurement',measurement, position['topLeft'])\"\n      *ngIf=\"projectEnvironment.modules.measurement && !homeComponent.activatedViewDashboard\">\n      <mat-icon>straighten</mat-icon>\n      <!-- <img class=\"icon\" src=\"assets/img/SVG/medirIcon.svg\" /> -->\n    </button>\n    <!-- <button mat-icon-button matTooltip=\"Ver Tabla de Atributos\"\n        *ngIf=\"projectEnvironment.modules.tableAttribute && !homeComponent.activatedViewDashboard\">\n        <mat-icon>table</mat-icon>\n        <img class=\"icon\" src=\"assets/img/SVG/tableIcon.svg\" />\n      </button> -->\n    <button mat-icon-button matTooltip=\"Añadir Capa\"\n      (click)=\"openDialog('DialogAddLayer',addLayer, position['topLeft'])\"\n      *ngIf=\"projectEnvironment.modules.addLayer && !homeComponent.activatedViewDashboard\">\n      <mat-icon>library_add</mat-icon>\n      <!-- <img class=\"icon\" src=\"assets/img/SVG/add_layerIcon.svg\" /> -->\n    </button>\n    <button mat-icon-button matTooltip=\"Vista General\"\n      (click)=\"openDialog('DialogOverview',overView, position['bottomLeft'])\"\n      *ngIf=\"projectEnvironment.modules.overviewMap && !homeComponent.activatedViewDashboard\">\n      <mat-icon>zoom_in_map</mat-icon>\n      <!-- <img class=\"icon\" src=\"assets/img/SVG/expandIcon.svg\" /> -->\n    </button>\n    <button mat-icon-button matTooltip=\"Imprimir\" (click)=\"openDialog('DialogPrint',print)\"\n      *ngIf=\"projectEnvironment.modules.print && !homeComponent.activatedViewDashboard\">\n      <mat-icon>print</mat-icon>\n      <!-- <img class=\"icon\" src=\"assets/img/SVG/printIcon.svg\" /> -->\n    </button>\n    <!-- <button mat-icon-button matTooltip=\"Editor\" \n      (click)=\"openEditor()\"  *ngIf=\"projectEnvironment.modules.editor\">\n        <img class='icon' src=\"assets/img/SVG/editorIcon.svg\" />\n      </button> -->\n    <button mat-icon-button matTooltip=\"Leyenda\" (click)=\"toggleLegend()\" *ngIf=\"!homeComponent.activatedViewDashboard\">\n      <mat-icon>legend_toggle</mat-icon>\n      <!-- <img [class]=\"legendView?'icon-activated':'icon'\" src=\"assets/img/SVG/legendIcon.svg\" /> -->\n    </button>\n    <!-- <mat-divider [vertical]=\"true\"></mat-divider> -->\n\n    <!-- boton en construccion -->\n    <!-- <button mat-icon-button  (click)=\"toggleSidenav()\">\n        <img class=\"icon\" src=\"assets/img/SVG/menuIcon.svg\" />\n      </button> -->\n    <!-- boton en construccion -->\n  </div>\n  <!-- </cdk-virtual-scroll-viewport> -->\n\n</mat-toolbar>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { PanoramicService } from \"../../../view/services/panoramic.service\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { ModalWindowComponent } from \"../modal-window/modal-window.component\";\nimport { LoginComponent } from \"../login/login.component\";\nimport { environment } from \"../../../../environments/environment\";\nimport { LoginService } from \"../../services/login/login.service\";\nimport { MapService } from \"../../../view/services/map.service\";\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { SecurityContext } from \"@angular/core\";\nimport { SidebarComponent } from \"../sidebar/sidebar.component\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent implements OnInit {\n  @ViewChild('sidenav') sidenav: SidebarComponent;\n\n  activatedViewMap: Boolean = true;\n  activatedViewPanoramic: Boolean = false;\n  activatedViewDashboard: Boolean = false;\n  login: Boolean = environment.login;\n  ver = environment.version;\n  proyect = environment.project;\n  safeUrl: SafeResourceUrl;\n  splitAreaSizeMap = 50;\n  splitAreaSizePanoramic = 50;\n  sidenavView:boolean =  false;\n\n  constructor(\n    protected panoramicService: PanoramicService,\n    protected dialog: MatDialog,\n    protected loginService: LoginService,\n    public mapService: MapService,\n    public domSanitizer: DomSanitizer,\n  ) { }\n\n\n\n  ngOnInit() {\n    //open Login in start app\n    if (this.login) {\n      this.openLogin();\n    }\n    //sanitize dashboard url\n    this.safeUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.domSanitizer.sanitize(SecurityContext.URL, environment.dashboardUrl));\n  }\n\n  openSidenav() {\n    this.sidenav.toggle();\n  }\n\n  openLogin() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.backdropClass = \"backdropLogin\";\n    this.dialog.open(LoginComponent, dialogConfig);\n  }\n\n  openSettingsLayer() {\n    const dialogConfig2 = new MatDialogConfig();\n    dialogConfig2.autoFocus = false;\n    this.dialog.open(ModalWindowComponent, dialogConfig2);\n  }\n\n  changeViewMap() {\n    this.activatedViewMap = true;\n    this.activatedViewPanoramic = false;\n    this.mapService.removeMarkers();\n  }\n\n  changeViewMixed() {\n    this.activatedViewMap = true;\n    this.activatedViewPanoramic = true;\n  }\n\n  changeCreateActive() {\n    //verificar formulario activo\n    if (this.panoramicService.getCreateActive())\n      this.panoramicService.setCreateActive(false);\n    else this.panoramicService.setCreateActive(true);\n  }\n\n  onDragEnd(event: any) {\n    this.splitAreaSizeMap = event.sizes[0];\n    this.splitAreaSizePanoramic = event.sizes[1];\n  }\n}\n","<app-header></app-header>\n<app-view-map></app-view-map>\n\n<!-- <main>\n    <as-split direction=\"horizontal\" *ngIf=\"!activatedViewDashboard\" gutterSize=\"3\" (dragEnd)=\"onDragEnd($event)\">\n        <as-split-area [size]=\"splitAreaSizeMap\" *ngIf=\"activatedViewMap\">\n            <app-view-map></app-view-map>\n        </as-split-area>\n        <as-split-area [size]=\"splitAreaSizePanoramic\" *ngIf=\"activatedViewPanoramic\"\n            [ngClass]=\"mapService.showPano? 'show' : 'hide'\">\n            <app-view-panoramic></app-view-panoramic>\n        </as-split-area>\n    </as-split>\n    <iframe class=\"dashboard\" *ngIf=\"activatedViewDashboard\" [src]=\"safeUrl\"></iframe>\n    <app-sidebar #sidenav></app-sidebar>\n</main> -->\n<!-- <app-footer id=\"footer\"></app-footer> -->","import { Component, OnInit } from \"@angular/core\";\nimport { LoginService } from \"../../services/login/login.service\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  user: string;\n  pass: string;\n  usuarioId: number;\n  name: string;\n  lastname: string;\n  status: string;\n  functions: string[];\n  rol: string;\n\n  constructor(\n    public loginservice: LoginService,\n    private dialogRef: MatDialogRef<LoginComponent>,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    this.dialogRef.addPanelClass(\"loginDialog\");\n  }\n\n  limpiarLogin(): void {\n    this.user = \"\";\n    this.pass = \"\";\n  }\n\n  openSnackBar(message) {\n    this._snackBar.open(message, \"\", {\n      duration: 2000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"top\",\n    });\n  }\n\n  validacion(): void {\n    const user = {\n      usuario_realgisUsuario: this.user,\n      usuario_realgisClave: this.pass,\n    };\n    this.loginservice.login(user).subscribe((data) => {\n      if (data[\"SDTUsuaroRolFuncion\"].length > 0) {\n        this.status = data[\"SDTUsuaroRolFuncion\"][0].Estado;\n        if (this.status == \"Activo\") {\n        this.name = data[\"SDTUsuaroRolFuncion\"][0].usuario_realgisNombre1;\n        this.lastname = data[\"SDTUsuaroRolFuncion\"][0].usuario_realgisApellido1;\n        this.usuarioId = data[\"SDTUsuaroRolFuncion\"][0].usuario_realgisId;\n        this.loginservice.userId = this.usuarioId;\n        this.rol = data[\"SDTUsuaroRolFuncion\"][0].Rol_Nombre;\n        var funciones = \"\";\n        funciones = data[\"SDTUsuaroRolFuncion\"][0].Funciones;\n        this.functions = funciones.split(\"*\");\n        this.loginservice.userName = this.name;\n        this.loginservice.userLastname = this.lastname;\n        this.loginservice.userRol = this.rol;\n        this.loginservice.settings = this.functions.includes(\"Settings\");\n        this.loginservice.layers = this.functions.includes(\"Layers\");\n        this.loginservice.search = this.functions.includes(\"Search\");\n        this.loginservice.createActive = this.functions.includes(\"Create Active\");        \n        this.loginservice.views = this.functions.includes(\"Views\");\n        this.loginservice.zoom = this.functions.includes(\"Zoom\");\n        this.loginservice.mLine = this.functions.includes(\"Measure Line\");\n        this.loginservice.mPol = this.functions.includes(\"Measure Polygon\");\n          this.openSnackBar(\n            \"Ingreso Correcto: \" + this.name + \" \" + this.lastname\n          );\n          this.dialogRef.close();\n        }else{\n          this.openSnackBar(\n            \"Usuario \" + this.status\n          );\n        }\n      } else {\n        this.openSnackBar(\"Datos de ingreso incorrectos\");\n        this.limpiarLogin();\n      }\n    });\n  }\n}\n","<div (keydown.enter)=\"validacion()\">\n    <!-- <h5 mat-dialog-title align=\"center\">Iniciar Sesión</h5>  -->\n    <span mat-dialog-title  class=\"title\"><img src=\"assets/img/realgis_icono.ico\" alt=\"logo\"\n            class=\"icon\">Iniciar Sesión</span>\n    <mat-dialog-content class=\"login\">\n        <mat-form-field>\n            <input matInput [disabled]=\"false\" placeholder=\"Usuario\" [(ngModel)]=\"user\">\n            <mat-icon matPrefix style=\"margin-right: 5px;\">person</mat-icon>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-icon matPrefix style=\"margin-right: 5px;\">lock</mat-icon>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Contraseña\" [(ngModel)]=\"pass\">\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n        </mat-form-field>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n        <button mat-flat-button type=\"submit\" (click)=\"validacion()\" style=\"margin: auto;\"><mat-icon matPrefix\n                style=\"margin-right: 5px;\">login</mat-icon>Ingresar</button>\n    </mat-dialog-actions>\n</div>","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\n\nimport { ObjectTypesService } from \"../../services/forms/object-types.service\";\nimport { FieldFormService } from \"../../services/forms/field-form.service\";\n\n@Component({\n  selector: \"app-modal-addfield\",\n  templateUrl: \"./modal-addfield.component.html\",\n  styleUrls: [\"./modal-addfield.component.css\"]\n})\nexport class ModalAddfieldComponent implements OnInit {\n  fieldTypes: any;\n  fieldType: any;\n  fieldName: any;\n  fieldRequired: any;\n  formId: any;\n  fieldOptions: string;\n  fieldSelected: boolean = true;\n\n  constructor(\n    protected objectTypesService: ObjectTypesService,\n    protected fieldFormService: FieldFormService,\n    private dialogRef: MatDialogRef<ModalAddfieldComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.formId = data.formId;\n\n    this.objectTypesService.getObjectTypes().subscribe((data: {}) => {\n      this.fieldTypes = data;\n    });\n  }\n\n  public createFieldForm() {\n    const fieldFormDetails = {\n      formulario_id: this.formId,\n      tipo_objeto_id: this.fieldType,\n      formulario_campo_nombre: this.fieldName,\n      formulario_campo_requerido: this.fieldRequired\n      \n    };\n\n    this.fieldFormService\n      .createFieldForm(fieldFormDetails)\n      .subscribe((data: {}) => {\n        if (data[\"tipo_objeto_id\"] == 2) {\n          this.createOptionsField(data[\"formulario_campo_id\"]);\n        }\n        this.dialogRef.close({ data });\n      });   \n  }\n\n  fieldSelect(){\nconsole.log(\"selected\");\n  }\n\ncreateOptionsField(campo_id){\nvar options = this.fieldOptions.split(\",\");\noptions.forEach((element, index)=> {\n  const option = {\n        formulario_campo_id: campo_id,\n  \t  \tformulario_campo_opcion_valor: element,\n  \t  \tformulario_campo_opcion_orden: index\n  }\n  this.fieldFormService.createOption(option).subscribe((data: []) => {\n  });\n});\n}\n\n  public closeMe() {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {}\n}\n","<h1 mat-dialog-title>Agregar nuevo campo</h1>\n<mat-dialog-content>\n  <mat-form-field>\n    <input matInput [disabled]=\"false\" placeholder=\"Nombre del Campo\" [(ngModel)]=\"fieldName\" name=\"fieldName\" />\n  </mat-form-field>\n  <br>\n  <mat-form-field>\n    <mat-label>Tipo de Campo</mat-label>\n    <mat-select required [(ngModel)]=\"fieldType\" #selectType>\n      <mat-option *ngFor=\"let fieldType of fieldTypes\" [value]=\"fieldType.tipo_objeto_id\">\n        <mat-icon\n          *ngIf=\"selectType.panelOpen\">{{fieldType.tipo_objeto_icono}}</mat-icon>{{fieldType.tipo_objeto_nombre}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <br>\n  <mat-slide-toggle color=\"primary\" labelPosition=\"before\" [(ngModel)]=\"fieldRequired\">Requerido?</mat-slide-toggle>\n  <br>\n  <mat-form-field *ngIf=\"fieldType==2\">\n    <mat-label>Opciones</mat-label>\n    <input required matInput placeholder=\"Opcion 1,Opcion 2\" [(ngModel)]=\"fieldOptions\" />\n    <mat-hint align=\"left\">Ingrese las opciones del campo separadas por comas</mat-hint>\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button mat-raised-button (click)='createFieldForm()'>Aceptar</button>\n  <button mat-raised-button (click)='closeMe()'>Cancelar</button>\n</mat-dialog-actions>","import { Component, OnInit, Inject, Injectable } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\nimport { CategoryService } from \"../../services/category_layers/category.service\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-modal-category\",\n  templateUrl: \"./modal-category.component.html\",\n  styleUrls: [\"./modal-category.component.css\"]\n})\nexport class ModalCategoryComponent implements OnInit {\n  name: string;\n  id: any;\n  date: any;\n  user: any;\n  hash: any;\n  action_type: any;\n\n  public categoryForm: FormGroup;\n\n  constructor(\n    protected categoryService: CategoryService,\n    private dialogRef: MatDialogRef<ModalCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.action_type = \"create\";\n    if (typeof data.data !== \"undefined\") {\n      this.id = data.data.categoria_capa_id;\n      this.name = data.data.categoria_capa_nombre;\n      this.hash = data.data.gx_md5_hash;\n      this.action_type = \"edit\";\n    }\n  }\n\n  ngOnInit() {\n  \n  }\n\n  public closeMe() {\n    this.dialogRef.close();\n  }\n\n  public createCategory() {\n    var categoryDetails = {\n      categoria_capa_nombre: this.name,\n      categoria_capa_fecha_creacion: this.date\n    };\n\n    this.categoryService\n      .createCategory(categoryDetails)\n      .subscribe((data: {}) => {\n        this.dialogRef.close({ data: data });\n      });\n  }\n\n  public editCategory() {\n    var categoryDetails = {\n      categoria_capa_id: this.id,\n      categoria_capa_nombre: this.name,\n      categoria_capa_fecha_creacion: this.date,\n      gx_md5_hash: this.hash\n    };\n\n    this.categoryService\n      .updateCategory(this.id, categoryDetails)\n      .subscribe((data: {}) => {\n        this.dialogRef.close({ data: data });\n      });\n  }\n\n  deleteCategory(id) {\n    this.categoryService.deleteCategory(this.id).subscribe((data: {}) => {\n      this.dialogRef.close({ data: data, type: this.action_type });\n    });\n  }\n\n  public close() {\n    this.dialogRef.close();\n  }\n}\n","<h1  mat-dialog-title *ngIf=\"action_type==='create'\">Crear Categoría</h1>\n<h1  mat-dialog-title *ngIf=\"action_type==='edit'\">Editar Categoría</h1>\n<mat-dialog-content  class=\"create-category\">\n    <mat-form-field>\n        <input matInput  [disabled]=\"false\" placeholder=\"Nombre de la categoría\" required [(ngModel)]=\"name\">\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button  mat-raised-button *ngIf=\"action_type==='create'\" (click)=\"createCategory()\">Crear</button>\n    <button  mat-raised-button *ngIf=\"action_type==='edit'\" (click)=\"editCategory()\">Editar</button>\n    <!-- <button  mat-raised-button *ngIf=\"action_type==='edit'\" (click)=\"deleteCategory()\">Eliminar</button> -->\n    <button  mat-raised-button (click)=\"closeMe()\">Cancelar</button>\n</mat-dialog-actions>\n\n\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { LayerService } from \"../../../home/services/layers/layer.service\";\nimport { CategoryService } from \"../../../home/services/category_layers/category.service\";\nimport { FormService } from \"../../../home/services/forms/form.service\";\nimport { UsersService } from \"../../services/users/users.service\";\n\n@Component({\n  selector: \"app-modal-form-user\",\n  templateUrl: \"./modal-form-user.component.html\",\n  styleUrls: [\"./modal-form-user.component.css\"],\n})\nexport class ModalFormUserComponent implements OnInit {\n  formsUser: any[] = [];\n  formsAdd: any[] = [];\n  userId: any;\n\n  constructor(\n    public layerService: LayerService,\n    public categoryService: CategoryService,\n    public formService: FormService,\n    public userService: UsersService,\n    private dialogRef: MatDialogRef<ModalFormUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.getFormsUser(data.data);\n    this.getForms();\n    this.userId = data.idUser;\n  }\n\n  getFormsUser(data) {\n    this.formsUser = [];\n    for (const key in data) {\n      if (Object.prototype.hasOwnProperty.call(data, key)) {\n        const element = data[key];\n        this.formsUser.push(element);\n      }\n    }\n  }\n\n  ngOnInit(): void {}\n\n  getForms() {\n    this.formsAdd = [];\n    this.formService.getForms().subscribe((data: {}) => {\n      for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element2 = data[key];\n          if (\n            !this.formsUser.find(\n              (element) => element.formulario_id == element2.formulario_Id\n            )\n          ) {\n            this.formsAdd.push(element2);\n          }\n        }\n      }\n    });\n  }\n\n  selectForm(formId) {\n    const form_user = {\n      usuario_realgisId: this.userId,\n      formulario_id: formId,\n      formulario_usuario_estado: 1,\n    };\n    this.userService.assignFormUser(form_user).subscribe((data1: {}) => {\n      this.formService.getFormsUser(this.userId).subscribe((data2: {}) => {\n        this.getFormsUser(data2);\n        this.getForms();\n      });\n    });\n  }\n}\n","<button mat-icon-button class=\"close-button\" [mat-dialog-close]=\"true\">\n  <mat-icon class=\"close-icon\">close</mat-icon>\n</button>\n<h1 mat-dialog-title align=\"center\">Formularios asignados</h1>\n<mat-progress-bar *ngIf=\"formsUser == null\" mode=\"indeterminate\">\n</mat-progress-bar>\n<mat-dialog-content class=\"create-category\">\n  <mat-list>\n    <mat-list-item *ngFor=\"let form of formsUser\">\n      <mat-icon mat-list-icon>assignment</mat-icon>\n      <div mat-line>{{form.formulario_nombre}}</div>\n    </mat-list-item>\n  </mat-list>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-raised-button matTooltip=\"Asignar un nuevo formulario a este usuario\" [matMenuTriggerFor]=\"menuForms\"\n    cdkFocusInitial>\n    <mat-icon>assignment_ind</mat-icon>\n    <sup>\n      <mat-icon>add</mat-icon>\n    </sup>\n  </button>\n  <mat-menu #menuForms=\"matMenu\">\n    <button mat-menu-item *ngFor=\"let form of formsAdd\"\n      (click)=\"selectForm(form.formulario_Id)\">{{form.formulario_nombre}}</button>\n  </mat-menu>\n\n</mat-dialog-actions>","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { FormService } from \"../../services/forms/form.service\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\nimport { FieldFormService } from \"../../services/forms/field-form.service\";\n\nimport { LayerService } from \"../../../home/services/layers/layer.service\";\n\n@Component({\n  selector: \"app-modal-forms\",\n  templateUrl: \"./modal-forms.component.html\",\n  styleUrls: [\"./modal-forms.component.css\"]\n})\nexport class ModalFormsComponent implements OnInit {\n  selectedValue: string;\n  fields: any;\n  layers: any;\n\n  constructor(\n    protected formService: FormService,\n    protected fieldFormService: FieldFormService,\n    protected layerService: LayerService,\n    private dialogRef: MatDialogRef<ModalFormsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.layerService.getLayers().subscribe((data: {}) => {\n      this.layers = data;\n    });\n  }\n\n  name: any;\n  description: any;\n  layer: any;\n\n  ngOnInit() {}\n\n  public closeMe() {\n    this.dialogRef.close();\n  }\n\n  public createForm() {\n    const formDetails = {\n      formulario_nombre: this.name,\n      formulario_descripcion: this.description,\n      capa_id: this.layer,\n      formulario_estado: 1\n    };\n\n    this.formService.createForm(formDetails).subscribe((data: {}) => {\n      this.dialogRef.close({ data });\n      let fieldFormDetails;\n    });\n  }\n}\n","<button mat-icon-button class=\"close-button\" [mat-dialog-close]=\"true\">\n  <mat-icon class=\"close-icon\">close</mat-icon>\n</button>\n<h1 mat-dialog-title>Nuevo Formulario</h1>\n\n<mat-dialog-content class=\"form-active\">\n  <mat-form-field>\n    <input matInput required [disabled]=\"false\" placeholder=\"Nombre\" [(ngModel)]=\"name\">\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput required [disabled]=\"false\" placeholder=\"Descripción\" [(ngModel)]=\"description\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Capa</mat-label>\n    <mat-select [(ngModel)]=\"layer\" name='layer'>\n      <mat-option *ngFor=\"let layer of layers\" [value]=\"layer.capa_id\">\n        {{layer.capa_nombre}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button mat-raised-button (click)='createForm()'>Crear</button>\n  <button mat-raised-button (click)='closeMe()' cdkFocusInitial>Cancelar</button>\n</mat-dialog-actions>","import { Component, OnInit, Inject, Injectable } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\nimport { LayerService } from \"../../services/layers/layer.service\";\nimport { CategoryService } from \"../../services/category_layers/category.service\";\nimport { FormService } from \"../../services/forms/form.service\";\nimport { FieldFormService } from \"../../services/forms/field-form.service\";\n\n@Component({\n  selector: \"app-modal-layer\",\n  templateUrl: \"./modal-layer.component.html\",\n  styleUrls: [\"./modal-layer.component.css\"]\n})\nexport class ModalLayerComponent implements OnInit {\n  id: any;\n  name: any;\n  category: any;\n  geometry: any;\n  description: any;\n  categories: any;\n  hash: any;\n  action_type: any;\n  geometries: any[] = [\n    {\n      value: \"1\",\n      description: \"Línea\"\n    },\n    {\n      value: \"2\",\n      description: \"Punto\"\n    },\n    {\n      value: \"3\",\n      description: \"Polígono\"\n    }\n  ];\n\n  constructor(\n    protected layerService: LayerService,\n    protected formService: FormService,\n    protected fieldFormService: FieldFormService,\n    protected categoryService: CategoryService,\n    private dialogRef: MatDialogRef<ModalLayerComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.categoryService.getCategories().subscribe((data: {}) => {\n      this.categories = data;\n    });\n\n    this.action_type = \"create\";\n\n    if (typeof data.data !== \"undefined\") {\n      this.id = data.data.capa_id;\n      this.name = data.data.capa_nombre;\n      this.category = data.data.categoria_capa_id;\n      this.geometry = data.data.geometria_capa_id;\n      this.description = data.data.capa_nombre_descripcion;\n      this.hash = data.data.gx_md5_hash;\n      this.action_type = \"edit\";\n    }\n  }\n\n  ngOnInit() {}\n\n  public closeMe() {\n    this.dialogRef.close();\n  }\n\n  public createLayer() {\n    const layerDetails = {\n      geometria_capa_id: this.geometry,\n      categoria_capa_id: this.category,\n      capa_nombre: this.name,\n      capa_nombre_descripcion: this.description,\n      capa_nombre_estado: \"1\"\n    };\n\n    this.layerService.createLayer(layerDetails).subscribe((data: {}) => {\n      this.dialogRef.close({ data: data });\n    });\n  }\n\n  public editLayer() {\n    const layerDetails = {\n      capa_id: this.id,\n      geometria_capa_id: this.geometry,\n      categoria_capa_id: this.category,\n      capa_nombre: this.name,\n      capa_nombre_descripcion: this.description,\n      capa_nombre_estado: \"1\",\n      gx_md5_hash: this.hash\n    };\n\n    this.layerService\n      .updateLayer(this.id, layerDetails)\n      .subscribe((data: {}) => {\n        this.dialogRef.close({ data: data });\n      });\n  }\n}\n","<h1  mat-dialog-title *ngIf=\"action_type==='create'\">Crear una nueva capa</h1>\n<h1  mat-dialog-title *ngIf=\"action_type==='edit'\">Editar capa</h1>\n\n<mat-dialog-content  class=\"create-layer\">\n        <mat-form-field>\n            <input matInput  [disabled]=\"false\" placeholder=\"Nombre de la Capa\" required [(ngModel)]=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Categoría Capa</mat-label>\n                <mat-select required [(ngModel)]=\"category\">\n                    <mat-option *ngFor=\"let category of categories\" [value]=\"category.categoria_capa_id\">\n                        {{category.categoria_capa_nombre}}\n                    </mat-option>\n                </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Geometría Capa</mat-label>\n                <mat-select required [(ngModel)]=\"geometry\">\n                    <mat-option *ngFor=\"let geometry of geometries\" [value]=\"geometry.value\">\n                        {{geometry.description}}\n                    </mat-option>\n                </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput  [disabled]=\"false\" placeholder=\"Descripción\" required [(ngModel)]=\"description\">\n        </mat-form-field>\n    </mat-dialog-content>\n<mat-dialog-actions>\n    <button  mat-raised-button *ngIf=\"action_type==='create'\" (click)=\"createLayer()\">Crear</button>\n    <button  mat-raised-button *ngIf=\"action_type==='edit'\" (click)=\"editLayer()\">Editar</button>\n    <button  mat-raised-button (click)=\"closeMe()\">Cancelar</button>\n</mat-dialog-actions>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { UsersService } from \"../../services/users/users.service\";\nimport { LoginService } from \"../../services/login/login.service\";\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-modal-new-user',\n  templateUrl: './modal-new-user.component.html',\n  styleUrls: ['./modal-new-user.component.css']\n})\nexport class ModalNewUserComponent implements OnInit {\n\n  nombre1: any;\n  nombre2: any;\n  apellido1: any;\n  apellido2: any;\n  tipoDoc: any;\n  numDoc: any;\n  email: any;\n  user: any;\n  pass: any;\n  rol: any;\n  edit: boolean;\n  disabled: boolean[]=[];\n\n  constructor(\n    public userService: UsersService,\n    public loginService: LoginService,\n    private _snackBar: MatSnackBar,\n    private dialogRef: MatDialogRef<ModalNewUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.edit = this.data.edit;\n    if (this.edit) {\n      this.userService.getUser(data.idUser).subscribe((data: {}) => {\n        this.nombre1 = data[\"usuario_realgisNombre1\"];\n        this.nombre2 = data[\"usuario_realgisNombre2\"];\n        this.apellido1 = data[\"usuario_realgisApellido1\"];\n        this.apellido2 = data[\"usuario_realgisApellido2\"];\n        this.tipoDoc = data[\"usuario_realgisTipo\"];\n        this.numDoc = data[\"usuario_realgisDoc\"];\n        this.email = data[\"usuario_realgisCorreo\"];\n        this.user = data[\"usuario_realgisUsuario\"];\n        this.pass = data[\"usuario_realgisClave\"];\n        this.rol = data[\"usuario_realgisRolIni\"];\n        this.disabled = [false, false, false, false, false, false, false, false, false, false, false];\n      });\n    }else{\n      this.disabled = [true, true, true, true, true, true, true, true, true, true, true];\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n\n  createUser(){\n    const user = {\n      usuario_realgisTipo: this.tipoDoc,\n      usuario_realgisDoc: this.numDoc,\n      usuario_realgisNombre1: this.nombre1,\n      usuario_realgisNombre2: this.nombre2,\n      usuario_realgisApellido1: this.apellido1,\n      usuario_realgisApellido2: this.apellido2,\n      usuario_realgisUsuario: this.user,\n      usuario_realgisClave: this.pass,\n      usuario_realgisEstado: 1,\n      usuario_realgisCorreo: this.email,\n      usuario_realgisUsuarioCreacion: this.loginService.userName + \" \" + this.loginService.userLastname, \n      usuario_realgisRolIni: this.rol\n    };\n\nthis.userService.createNewUser(user).subscribe((data: {}) => {\n  if (data[\"SDTReporteErrores\"][0][\"Id\"] == 1) {\n    this.dialogRef.close();\n  }\n this._snackBar.open(data[\"SDTReporteErrores\"][0][\"Descipcion\"], \"OK\", {\n    duration: 5000,\n  });\n});\n  }\n\n  editUser(){\n\n    const user = {\n      usuario_realgisId: this.data.idUser,\n      usuario_realgisTipo: !this.disabled[4] ? \"\" : this.tipoDoc,\n      usuario_realgisDoc: !this.disabled[5] ? \"\" : this.numDoc,\n      usuario_realgisNombre1: !this.disabled[0] ? \"\" : this.nombre1,\n      usuario_realgisNombre2: !this.disabled[1] ? \"\" : this.nombre2,\n      usuario_realgisApellido1: !this.disabled[2] ? \"\" : this.apellido1,\n      usuario_realgisApellido2: !this.disabled[3] ? \"\" : this.apellido2,\n      usuario_realgisUsuario: !this.disabled[7] ? \"\" : this.user,\n      usuario_realgisClave: !this.disabled[8] ? \"\" : this.pass,\n      usuario_realgisEstado: \"\",\n      usuario_realgisCorreo: !this.disabled[6] ? \"\" : this.email,\n    };\n this.userService.editUser(user).subscribe((data: {}) => {\n   if (data[\"SDTReporteErrores\"].length == 0) {\n     this.dialogRef.close();\n     this._snackBar.open(\"El Usuario se Edito correctamente\", \"OK\", {\n    duration: 5000\n  });\n}\n  }); \n}\n\n}\n","<button mat-icon-button class=\"close-button\" [mat-dialog-close]=\"true\">\n  <mat-icon class=\"close-icon\">close</mat-icon>\n</button>\n<h1 mat-dialog-title *ngIf=\"edit\" align=\"center\">Editar usuario</h1>\n<h1 mat-dialog-title *ngIf=\"!edit\" align=\"center\">Crear nuevo usuario</h1>\n<div mat-dialog-content>\n    <table class=\"full-width\" cellspacing=\"2\">\n      <tr>\n        <td><mat-form-field>\n    <mat-label>Primer Nombre</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"nombre1\" [disabled]=\"!disabled[0]\">\n</mat-form-field></td>\n<td *ngIf=\"edit\" class=\"checkbox\">\n      <mat-checkbox [(ngModel)]=\"disabled[0]\"></mat-checkbox>\n    </td>\n        <td><mat-form-field>\n    <mat-label>Segundo Nombre</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"nombre2\" [disabled]=\"!disabled[1]\">\n</mat-form-field></td>\n<td *ngIf=\"edit\" class=\"checkbox\">\n  <mat-checkbox [(ngModel)]=\"disabled[1]\"></mat-checkbox>\n</td>\n      </tr>\n      <tr>\n        <td><mat-form-field>\n    <mat-label>Primer Apellido</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"apellido1\" [disabled]=\"!disabled[2]\">\n</mat-form-field></td>\n<td *ngIf=\"edit\" class=\"checkbox\">\n      <mat-checkbox [(ngModel)]=\"disabled[2]\"></mat-checkbox>\n    </td>\n        <td><mat-form-field>\n    <mat-label>Segundo Apellido</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"apellido2\" [disabled]=\"!disabled[3]\">\n</mat-form-field></td>\n<td *ngIf=\"edit\" class=\"checkbox\">\n      <mat-checkbox [(ngModel)]=\"disabled[3]\"></mat-checkbox>\n    </td>\n      </tr>\n      <tr>\n        <td><mat-form-field>\n        <mat-label>Tipo de Documento</mat-label>\n        <mat-select  [(ngModel)]=\"tipoDoc\" [disabled]=\"!disabled[4]\">\n          <mat-option value=\"CC\">Cedula de Ciudadania</mat-option>\n          <mat-option value=\"CE\">Cedula de Extranjeria</mat-option>\n          <mat-option value=\"TI\">Tarjeta de Identidad</mat-option>\n          <mat-option value=\"PS\">Pasaporte</mat-option>\n          <mat-option value=\"NIT\">NIT</mat-option>\n        </mat-select>\n    </mat-form-field></td>\n    <td *ngIf=\"edit\" class=\"checkbox\">\n          <mat-checkbox [(ngModel)]=\"disabled[4]\"></mat-checkbox>\n        </td>\n        <td><mat-form-field>\n    <mat-label>Numero de Documento</mat-label>\n    <input matInput type=\"number\" [(ngModel)]=\"numDoc\" [disabled]=\"!disabled[5]\">\n  </mat-form-field></td>\n  <td *ngIf=\"edit\" class=\"checkbox\">\n        <mat-checkbox [(ngModel)]=\"disabled[5]\"></mat-checkbox>\n      </td>\n      </tr>\n      <tr>\n        <td><mat-form-field>\n    <mat-label>Correo Electronico</mat-label>\n    <input matInput type=\"email\" [(ngModel)]=\"email\" [disabled]=\"!disabled[6]\">\n</mat-form-field></td>\n<td *ngIf=\"edit\" class=\"checkbox\">\n      <mat-checkbox [(ngModel)]=\"disabled[6]\"></mat-checkbox>\n    </td>\n      </tr>\n      <tr>\n        <td><mat-form-field>\n    <mat-label>Usuario</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"user\" [disabled]=\"!disabled[7]\">\n</mat-form-field></td>\n<td *ngIf=\"edit\" class=\"checkbox\">\n      <mat-checkbox [(ngModel)]=\"disabled[7]\"></mat-checkbox>\n    </td>\n        <td><mat-form-field>\n    <mat-label >Contraseña</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"pass\" [disabled]=\"!disabled[8]\" [type]=\"!disabled[8] ? 'password' : 'text'\">\n</mat-form-field></td>\n<td *ngIf=\"edit\" class=\"checkbox\">\n      <mat-checkbox [(ngModel)]=\"disabled[8]\"></mat-checkbox>\n    </td>\n      </tr>\n      <tr>\n        <td *ngIf=\"!edit\"><mat-form-field>\n        <mat-label>Rol</mat-label>\n        <mat-select [(ngModel)]=\"rol\" [disabled]=\"!disabled[9]\">\n          <mat-option value=\"1\">Administrador</mat-option>\n          <mat-option value=\"2\">Reconocedor</mat-option>\n          <mat-option value=\"3\">Consulta</mat-option>\n        </mat-select>\n    </mat-form-field></td>\n    <!-- <td *ngIf=\"edit\" class=\"checkbox\">\n          <mat-checkbox [(ngModel)]=\"disabled[9]\"></mat-checkbox>\n        </td> -->\n      </tr>\n    </table>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button *ngIf=\"!edit\"  (click)=\"createUser()\">Crear Usuario</button>\n  <button mat-raised-button *ngIf=\"edit\" (click)=\"editUser()\">Editar Usuario</button>\n  <button mat-raised-button [mat-dialog-close] cdkFocusInitial>Cancelar</button>\n</div>\n","import {Component, OnInit, Inject, Injectable} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { ActiveService } from '../../../view/services/active.service';\nimport { PanoramicService } from '../../../view/services/panoramic.service';\nimport { FormService } from \"../../services/forms/form.service\";\nimport { FilterService } from \"../../services/filter/filter.service\";\nimport { MatTableDataSource } from \"@angular/material/table\";\n\n@Component({\n  selector: 'app-modal-remove',\n  templateUrl: './modal-remove.component.html',\n  styleUrls: ['./modal-remove.component.css']\n})\nexport class ModalRemoveComponent implements OnInit {\n\n  id: any;\n  name: any;\n  lat: any;\n  lng: any;\n  hash: any;\n  CAMPOS_ACTIVO: CamposActivo[] = [];\n  dataSource = new MatTableDataSource<CamposActivo>([]);\n  loading = true;\n  displayedColumns: string[] = [];\n\n  constructor(protected panoramicService: PanoramicService, protected activeService: ActiveService, protected formService: FormService, protected filterService: FilterService,\n              private dialogRef: MatDialogRef<ModalRemoveComponent>, @Inject(MAT_DIALOG_DATA) public  data: any) {\n    this.id = data.id;\n    this.lat = data.lat;\n    this.lng = data.lng;\n    this.name = data.name;\n    this.hash = data.hash;\n    \n  }\n\n  ngOnInit() {\n    this.getCampos();\n  }\n\ngetCampos(){\n  var formCapId;\n  var camposActivo;\n  this.activeService.getActive(this.id).subscribe((data: {}) => {\n    formCapId = data[\"formulario_captura_id\"]\n    this.filterService.getCamposResultado(formCapId).subscribe((data2: {}) => {\n    camposActivo = data2;\n    camposActivo.forEach(element => {\n      const campoN = {\n        nombre: element[\"formulario_campo_nombre\"],\n        valor: element[\"formulario_captura_campo_valor\"],\n        id: element[\"formulario_captura_campo_id\"]\n      };\n      this.CAMPOS_ACTIVO.push(campoN);\n    });\n    this.CAMPOS_ACTIVO.sort(function (a, b) {\n      if (a.id > b.id) {\n        return 1;\n      }\n      if (a.id < b.id) {\n        return -1;\n      }\n      // a must be equal to b\n      return 0;\n    });\n    const latitud = {\n      nombre: \"Latitud\",\n      valor: Number(this.lat),\n      //valor: this.convertToDMS(this.lat) + (this.lat  >= 0 ? \"N\" : \"S\"),\n      //Habilitar cuando se implemente en la herramienta de filtro\n      id: 0\n    };\n    const longitud = {\n      nombre: \"Longitud\",\n      valor: Number(this.lng),\n      //valor: this.convertToDMS(this.lng) + (this.lng >= 0 ? \"E\" : \"W\"), \n      //Habilitar cuando se implemente en la herramienta de filtro\n      id: 0\n    };\n    this.CAMPOS_ACTIVO.push(latitud);\n    this.CAMPOS_ACTIVO.push(longitud);\n    this.generateTable();\n  });\n  });\n}\n\ngenerateTable(){\n  this.displayedColumns = [\"nombre\", \"valor\"];\n  this.loading = false;\n  this.dataSource.data = this.CAMPOS_ACTIVO;\n}\n\nconvertToDMS(coordinate){\n  var absolute = Math.abs(coordinate);\n  var degrees = Math.floor(absolute);\n  var minutesNotTruncated = (absolute - degrees) * 60;\n  var minutes = Math.floor(minutesNotTruncated);\n  var seconds = ((minutesNotTruncated - minutes) * 60);\n  return degrees + \"°\" + minutes + \"'\" + seconds.toFixed(2) + '\"';\n}\n\n  public  updateActive() {\n      var activeDetails = {\n        formulario_captura_nombre: this.name,\n      };\n      this.activeService.updateActive(this.id, activeDetails).subscribe((data: {}) => {\n        this.dialogRef.close({ data: data });\n      });\n  }\n\n  public deleteActive() {\n    this.activeService.deleteActive(this.id).subscribe((data: {}) => {\n      this.panoramicService.deleteHotspot(this.id);\n      this.dialogRef.close();\n    });\n  }\n\n}\n\nexport interface CamposActivo {\n  nombre: string;\n  valor: number;\n  id: number;\n}","<button mat-icon-button class=\"close-button\" [mat-dialog-close]=\"true\">\n  <mat-icon class=\"close-icon\">close</mat-icon>\n</button>\n<h3  mat-dialog-title align=\"center\">Información Activo</h3>\n<mat-progress-bar *ngIf=\"loading\" mode=\"query\" class=\"progressBar\"></mat-progress-bar>\n<mat-dialog-content  class=\"update-active\">\n\n    <table mat-table #table [dataSource]=\"dataSource\">  \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"nombre\">\n          <td type=\"text\" mat-cell *matCellDef=\"let element\"> <b>{{element.nombre}} </b></td>\n        </ng-container>\n    \n        <!-- Field_Filter Column -->\n        <ng-container matColumnDef=\"valor\">\n          <td type=\"text\" mat-cell *matCellDef=\"let element\"> {{element.valor}} </td>\n        </ng-container>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </mat-dialog-content>\n<!-- <mat-dialog-actions>\n    <button  mat-raised-button (click)='updateActive()'>Actualizar</button>\n    <button  mat-raised-button (click)=\"deleteActive()\">Eliminar</button>\n</mat-dialog-actions> -->\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { ModalLayerComponent } from \"../modal-layer/modal-layer.component\";\nimport { LayerService } from \"../../../home/services/layers/layer.service\";\nimport { ModalCategoryComponent } from \"../modal-category/modal-category.component\";\nimport { CategoryService } from \"../../../home/services/category_layers/category.service\";\nimport { FormService } from \"../../../home/services/forms/form.service\";\nimport { AdmonActiveComponent } from \"../modal_admon_active/admon-active/admon-active.component\";\nimport { ModalFormsComponent } from \"../modal-forms/modal-forms.component\";\nimport { MapService } from \"../../../view/services/map.service\";\nimport { ModalFormUserComponent } from \"../modal-form-user/modal-form-user.component\";\nimport { ModalNewUserComponent } from \"../modal-new-user/modal-new-user.component\";\nimport { UsersService } from \"../../services/users/users.service\";\nimport { ConfirmDialogComponent } from \"../confirm-dialog/confirm-dialog.component\";\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: \"app-modal-window\",\n  templateUrl: \"./modal-window.component.html\",\n  styleUrls: [\"./modal-window.component.css\"],\n})\nexport class ModalWindowComponent implements OnInit {\n  layersAdd: any;\n  categoriesAdd: any;\n  formsAdd: any;\n  indexTab: number = 0;\n  usersAdd: any;\n\n  constructor(\n    public mapService: MapService,\n    public layerService: LayerService,\n    public categoryService: CategoryService,\n    public formService: FormService,\n    protected dialog: MatDialog,\n    public usersService: UsersService,\n    private _snackBar: MatSnackBar\n\n  ) {\n    this.categoryService.getCategories().subscribe((data: {}) => {\n      this.categoriesAdd = data;\n    });\n\n    this.layerService.getLayers().subscribe((data: {}) => {\n      this.layersAdd = data;\n    });\n\n    this.formService.getForms().subscribe((data: {}) => {\n      this.formsAdd = data;\n    });\n\n    this.getUsers();\n  }\n\n  ngOnInit() {}\n\n  changeTab(index) {\n    this.indexTab = index;\n  }\n\n  getUsers(){\n    this.usersAdd = [];\n    this.usersService.getUsers().subscribe((data: {}) => {\n      this.usersAdd = data;\n    });\n  }\n\n  createLayer() {\n    this.dialog\n      .open(ModalLayerComponent, { data: {} })\n      .afterClosed()\n      .subscribe((response) => {\n        this.layerService.getLayers().subscribe((data: {}) => {\n          this.layersAdd = data;\n        });\n      });\n  }\n\n  editLayer(id) {\n    this.layerService.getLayer(id).subscribe((data: {}) => {\n      this.dialog\n        .open(ModalLayerComponent, { data: { data } })\n        .afterClosed()\n        .subscribe((response) => {\n          this.layerService.getLayers().subscribe((data: {}) => {\n            this.layersAdd = data;\n          });\n          this._snackBar.open(\"Se editó correctamente la capa\", \"OK\", {\n            duration: 5000,\n          });\n        });\n    });\n  }\n\n  deleteLayer(id) {\n    this.layerService.deleteLayer(id).subscribe((data: {}) => {\n      this.layerService.getLayers().subscribe((data: {}) => {\n        this.layersAdd = data;\n      });\n      this._snackBar.open(\"Se eliminó correctamente la capa\", \"OK\", {\n        duration: 5000,\n      });\n    });\n  }\n\n  createCategory() {\n    this.dialog\n      .open(ModalCategoryComponent, { data: {} })\n      .afterClosed()\n      .subscribe((response) => {\n        this.categoryService.getCategories().subscribe((data: {}) => {\n          this.categoriesAdd = data;\n        });\n      });\n  }\n\n  editCategory(id) {\n    this.categoryService.getCategory(id).subscribe((data: {}) => {\n      this.dialog\n        .open(ModalCategoryComponent, { data: { data } })\n        .afterClosed()\n        .subscribe((response) => {\n          this.categoryService.getCategories().subscribe((data: {}) => {\n            this.categoriesAdd = data;\n            this._snackBar.open(\"Se editó/eliminó correctamente la categoría\", \"OK\", {\n              duration: 5000,\n            });\n          });\n        });\n    });\n  }\n\n  createForm() {\n    this.dialog\n      .open(ModalFormsComponent, { data: {} })\n      .afterClosed()\n      .subscribe((response) => {\n        this.formService.getForms().subscribe((data: {}) => {\n          this.formsAdd = data;\n        });\n      });\n  }\n\n  editForm(id) {\n    this.dialog\n      .open(AdmonActiveComponent, { data: { id } })\n      .afterClosed()\n      .subscribe((response) => {\n        /*this.categoryService.getCategories().subscribe((data: {}) => {\n          this.categoriesAdd = data;\n        });*/\n      });\n  }\n\n  deleteForm(id) {\n    this.formService.deleteForm(id).subscribe((data: {}) => {\n      this.formService.getForms().subscribe((data: {}) => {\n        this.formsAdd = data;\n      });\n      this._snackBar.open(\"Se eliminó correctamente el formulario\", \"OK\", {\n        duration: 5000,\n      });\n    });\n  }\n\n  getFormsUser(idUser) {\n    this.formService.getFormsUser(idUser).subscribe((data: {}) => {\n      this.dialog.open(ModalFormUserComponent, {\n        data: { data, idUser },\n        autoFocus: false,\n      });\n    });\n  }\n\n  openCreateUser(){\n    const dialogRef = this.dialog.open(ModalNewUserComponent, {\n      data: {edit: false},\n        autoFocus: true,\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.getUsers();\n      });\n  }\n\n  openEditUser(idUser){\n    const dialogRef = this.dialog.open(ModalNewUserComponent, {\n      data: {edit: true,\n      idUser\n      },\n      autoFocus: true,\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.getUsers();\n    });\n  }\n\n  disableUser(idUser, username, lastname){\n  const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {message: \"¿Desea inhabilitar este Usuario?\",\n      confirmAction: \"Inhabilitar\",\n      message2: username + \" \" + lastname\n      },\n      autoFocus: true,\n    });\n     dialogRef.afterClosed().subscribe(result => {\n       if (result) {\n        const user = {\n          usuario_realgisId: idUser \n        };\n        this.usersService.disableUser(user).subscribe((data: {}) => {\n          this._snackBar.open(data[\"SDTReporteErrores\"][0][\"Descipcion\"], \"OK\", {\n            duration: 5000,\n          });\n          this.getUsers();\n        });\n       }\n    });\n\n  }\n\n  changeActuallyCategoryLayer(category, layer, form, formId) {\n    this.mapService.setCurrentCategory(category);\n    this.mapService.setCurrentLayer(layer);\n    this.mapService.setCurrentForm(form);\n    this.mapService.setCurrentFormId(formId);\n  }\n}\n","<button mat-icon-button class=\"close-button\" [mat-dialog-close]=\"true\">\n  <mat-icon class=\"close-icon\">close</mat-icon>\n</button>\n<h1 mat-dialog-title align=\"center\">Configuración</h1>\n<mat-progress-bar *ngIf=\"categoriesAdd == null || layersAdd == null || formsAdd == null || usersAdd == null\"\n  mode=\"indeterminate\">\n</mat-progress-bar>\n<mat-tab-group mat-align-tabs=\"center\" (selectedIndexChange)=\"changeTab($event)\" mat-dialog-content>\n  <mat-tab label=\"Espacio de Trabajo\">\n    <mat-accordion class=\"content-settings\">\n      <mat-expansion-panel *ngFor=\"let category of categoriesAdd\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{category.categoria_capa_nombre}}\n            <mat-icon matTooltip=\"Editar Nombre de Categoria\" class=\"button-layer\"\n              (click)=\"editCategory(category.categoria_capa_id)\" color=\"primary\">edit</mat-icon>\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-accordion>\n          <ng-container *ngFor=\"let layer of layersAdd\">\n            <mat-expansion-panel *ngIf=\"layer.categoria_capa_id==category.categoria_capa_id\" >\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  {{layer.capa_nombre}}\n                  <div>\n                    <mat-icon matTooltip=\"Editar Capa\" (click)=\"editLayer(layer.capa_id)\" color=\"primary\">create\n                    </mat-icon>\n                    <mat-icon matTooltip=\"Eliminar esta Capa\" class=\"button-layer colorRed\"\n                      (click)=\"deleteLayer(layer.capa_id)\">delete</mat-icon>\n                  </div>\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <mat-list>\n                <ng-container *ngFor=\"let form of formsAdd\">\n                  <mat-list-item *ngIf=\"form.capa_id==layer.capa_id\">\n                    {{form.formulario_nombre}}\n                    <div>\n                      <mat-icon matTooltip=\"Ver o agregar campos del Formulario\" class=\"button-layer\"\n                        (click)=\"editForm(form.formulario_Id)\" color=\"primary\">create</mat-icon>\n                      <mat-icon matTooltip=\"Eliminar este Formulario\" class=\"button-layer colorRed\"\n                        (click)=\"deleteForm(form.formulario_Id)\">delete</mat-icon>\n                    </div>\n                  </mat-list-item>\n                </ng-container>\n              </mat-list>\n            </mat-expansion-panel>\n          </ng-container>\n        </mat-accordion>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </mat-tab>\n\n  <mat-tab label=\"Gestión de Usuarios\">\n      <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let user of usersAdd\">\n       <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{user.usuario_realgisNombre1}} {{user.usuario_realgisApellido1}}\n            <mat-icon>account_circle</mat-icon>\n          </mat-panel-title>\n          \n        </mat-expansion-panel-header>\n        <b>Nombres:</b> {{user.usuario_realgisNombre1}} {{user.usuario_realgisNombre2}} <br>\n        <b>Apellidos:</b> {{user.usuario_realgisApellido1}} {{user.usuario_realgisApellido2}}<br>\n        <b>Rol:</b> {{user.Rol_Nombre}}<br>\n        <b>Correo:</b> {{user.usuario_realgisCorreo}}<br>\n        <b>Identificación:</b> {{user.usuario_realgisTipo}} {{user.usuario_realgisDoc}}<br>\n        <b>Usuario:</b> {{user.usuario_realgisUsuario}}<br>\n        <mat-action-row>\n           <mat-icon matTooltip=\"Ver formularios asignados\" class=\"button-layer\"\n           (click)=\"getFormsUser(user.usuario_realgisId)\" color=\"primary\" *ngIf=\"user.Rol_Nombre == 'Consulta' || user.Rol_Nombre == 'Reconocedor'\">assignment_ind</mat-icon>\n          <mat-icon matTooltip=\"Editar usuario\" class=\"button-layer\" (click)=\"openEditUser(user.usuario_realgisId)\"\n            color=\"primary\">create</mat-icon>\n          <mat-icon matTooltip=\"Inhabilitar usuario\" class=\"button-layer colorRed\"\n            (click)=\"disableUser(user.usuario_realgisId , user.usuario_realgisNombre1 , user.usuario_realgisApellido1)\">person_remove</mat-icon>\n        </mat-action-row>\n       \n        \n        \n      </mat-expansion-panel>\n    </mat-accordion>\n  </mat-tab>\n\n</mat-tab-group>\n\n<div mat-dialog-actions *ngIf=\"indexTab == 0\">\n  <button mat-raised-button matTooltip=\"Crear una nueva Categoria\" (click)=\"createCategory()\">\n\n    <mat-icon>category</mat-icon>\n    <sup>\n      <mat-icon>add</mat-icon>\n    </sup>\n  </button>\n  <button mat-raised-button matTooltip=\"Crear una nueva Capa\" (click)=\"createLayer()\">\n    <mat-icon>layers</mat-icon>\n    <sup>\n      <mat-icon>add</mat-icon>\n    </sup>\n  </button>\n  <button mat-raised-button matTooltip=\"Crear un nuevo formulario\" (click)=\"createForm()\">\n    <mat-icon>assignment</mat-icon>\n    <sup>\n      <mat-icon>add</mat-icon>\n    </sup>\n  </button>\n</div>\n\n<div mat-dialog-actions *ngIf=\"indexTab == 1\">\n  <button mat-raised-button matTooltip=\"Crear un nuevo Usuario\" (click)=\"openCreateUser()\">\n    <mat-icon>person_add</mat-icon>\n  </button>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { ModalLayerComponent } from \"../modal-layer/modal-layer.component\";\nimport { LayerService } from \"../../../home/services/layers/layer.service\";\nimport { ModalCategoryComponent } from \"../modal-category/modal-category.component\";\nimport { CategoryService } from \"../../../home/services/category_layers/category.service\";\nimport { FormService } from \"../../../home/services/forms/form.service\";\nimport { AdmonActiveComponent } from \"../modal_admon_active/admon-active/admon-active.component\";\nimport { ModalFormsComponent } from \"../modal-forms/modal-forms.component\";\nimport { MapService } from \"../../../view/services/map.service\";\nimport { LoginService } from \"../../services/login/login.service\";\nimport { AnyTypeAnnotation } from \"@babel/types\";\n\n\n@Component({\n  selector: \"app-modal-workspace\",\n  templateUrl: \"./modal-workspace.component.html\",\n  styleUrls: [\"./modal-workspace.component.css\"]\n})\nexport class ModalWorkspaceComponent implements OnInit {\n  layersAdd: any[] = [];\n  categoriesAdd: any[] = [];\n  formsAdd: any[] = [];\n  userId : any;\n  userRol : any;\n  formsAsignados = false;\n\n  constructor(\n    public mapService: MapService,\n    public layerService: LayerService,\n    public loginService: LoginService,\n    public categoryService: CategoryService,\n    public formService: FormService,\n    protected dialog: MatDialog\n  ) {\n\n    this.userId = this.loginService.getuserId();\nthis.userRol = this.loginService.getUserRol();\nif(this.userRol == \"Administrador\"){\n    this.categoryService.getCategories().subscribe((data: {}) => {\n      for (const key in data) {\n  if (Object.prototype.hasOwnProperty.call(data, key)) {\n    const element = data[key];\nthis.categoriesAdd.push(element);\n  }}\n    });\n\n    this.layerService.getLayers().subscribe((data: {}) => {\n      for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.layersAdd.push(element);\n        }}\n     \n    }); \n\n     this.formService.getForms().subscribe((data: {}) => {\n      for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.formsAdd.push(element);\n        }}\n    });\n}else{\n      this.formService.getFormsUser(this.userId).subscribe((dataForms: {}) => {\n        if(!(dataForms[0])){this.formsAsignados = true;};\nfor (const key in dataForms) {\n  if (Object.prototype.hasOwnProperty.call(dataForms, key)) {\n    const element = dataForms[key];\n    this.formService.getForm(element.formulario_id).subscribe((dataForm: {}) => {\n      this.formsAdd.push(dataForm);\n      this.layerService.getLayer(dataForm[\"capa_id\"]).subscribe((dataLayer: {}) => {\n        if (!(this.layersAdd.find(element => element[\"capa_id\"] == dataLayer[\"capa_id\"]))) {\n          this.layersAdd.push(dataLayer);\n        }\nthis.categoryService.getCategory(dataLayer[\"categoria_capa_id\"]).subscribe((dataCategory: {}) => {\n  if (!(this.categoriesAdd.find(element => element[\"categoria_capa_id\"] == dataLayer[\"categoria_capa_id\"]))) {\n         this.categoriesAdd.push(dataCategory);\n        }\n\n});\n      });\n    });\n  }\n}\n });\n}\n\n\n \n    \n  }\n\n  ngOnInit() {}\n\n  createLayer() {\n    this.dialog\n      .open(ModalLayerComponent, { data: {} })\n      .afterClosed()\n      .subscribe(response => {\n        this.layerService.getLayers().subscribe((data: {}) => {\n         for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.layersAdd.push(element);\n        }}\n        });\n      });\n  }\n\n  editLayer(id) {\n    this.layerService.getLayer(id).subscribe((data: {}) => {\n      this.dialog\n        .open(ModalLayerComponent, { data: { data } })\n        .afterClosed()\n        .subscribe(response => {\n          this.layerService.getLayers().subscribe((data: {}) => {\n          for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.layersAdd.push(element);\n        }}\n          });\n          alert(\"Se editó correctamente la capa\");\n        });\n    });\n  }\n\n  deleteLayer(id) {\n    this.layerService.deleteLayer(id).subscribe((data: {}) => {\n      this.layerService.getLayers().subscribe((data: {}) => {\n       for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.layersAdd.push(element);\n        }}\n      });\n      alert(\"Se eliminó correctamente la capa\");\n    });\n  }\n\n  createCategory() {\n    this.dialog\n      .open(ModalCategoryComponent, { data: {} })\n      .afterClosed()\n      .subscribe(response => {\n        this.categoryService.getCategories().subscribe((data: {}) => {\n         for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.categoriesAdd.push(element);\n        }}\n        });\n      });\n  }\n\n  editCategory(id) {\n    this.categoryService.getCategory(id).subscribe((data: {}) => {\n      this.dialog\n        .open(ModalCategoryComponent, { data: { data } })\n        .afterClosed()\n        .subscribe(response => {\n          this.categoryService.getCategories().subscribe((data: {}) => {\n          for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.categoriesAdd.push(element);\n        }}\n            alert(\"Se editó/eliminó correctamente la categoría\");\n          });\n        });\n    });\n  }\n\n  createForm() {\n    this.dialog\n      .open(ModalFormsComponent, { data: {} })\n      .afterClosed()\n      .subscribe(response => {\n        this.formService.getForms().subscribe((data: {}) => {\n         for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.formsAdd.push(element);\n        }}\n        });\n      });\n  }\n\n  editForm(id) {\n    this.dialog\n      .open(AdmonActiveComponent, { data: { id } })\n      .afterClosed()\n      .subscribe(response => {\n        this.categoryService.getCategories().subscribe((data: {}) => {\n        for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.categoriesAdd.push(element);\n        }}\n        });\n      });\n  }\n\n  deleteForm(id) {\n    this.formService.deleteForm(id).subscribe((data: {}) => {\n      this.formService.getForms().subscribe((data: {}) => {\n        for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const element = data[key];\n      this.formsAdd.push(element);\n        }}\n      });\n      alert(\"Se eliminó correctamente el formulario\");\n    });\n  }\n\n  changeActuallyCategoryLayer(category, layer, form, formId) {\n    this.mapService.setCurrentCategory(category);\n    this.mapService.setCurrentLayer(layer);\n    this.mapService.setCurrentForm(form);\n    this.mapService.setCurrentFormId(formId);\n    this.mapService.addActives();\n    this.dialog.closeAll();\n  }\n}\n","<button mat-icon-button class=\"close-button\" [mat-dialog-close]=\"true\">\n  <mat-icon class=\"close-icon\">close</mat-icon>\n</button>\n\n    <h1 mat-dialog-title align=\"center\">Espacio de Trabajo</h1>\n    <mat-progress-bar *ngIf=\"categoriesAdd.length == 0 && layersAdd.length == 0 && formsAdd.length == 0 && !formsAsignados\" mode=\"indeterminate\"></mat-progress-bar>\n        <div mat-dialog-content>\n          <p *ngIf=\"formsAsignados\">No se han asignado formularios al usuario</p>\n          <mat-accordion>\n            <mat-expansion-panel *ngFor=\"let category of categoriesAdd\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                {{category.categoria_capa_nombre}}\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-accordion>\n            <ng-container *ngFor=\"let layer of layersAdd\">\n              <mat-expansion-panel *ngIf=\"layer.categoria_capa_id==category.categoria_capa_id\">\n                <mat-expansion-panel-header>\n                  <mat-panel-title>\n                    {{layer.capa_nombre}}\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <mat-list>\n                  <ng-container *ngFor=\"let form of formsAdd\">\n                    <mat-list-item *ngIf=\"form.capa_id==layer.capa_id\">\n                      <mat-radio-button checked=\"false\"  color=\"primary\" \n                    (click)=\"changeActuallyCategoryLayer(category.categoria_capa_nombre,layer.capa_nombre, form.formulario_nombre, form.formulario_Id)\"\n                          >\n                          {{form.formulario_nombre}}</mat-radio-button>\n                    </mat-list-item>\n                  </ng-container>\n                </mat-list>\n                    \n              </mat-expansion-panel>\n            </ng-container>\n          </mat-accordion>\n          </mat-expansion-panel>\n          </mat-accordion>\n          \n        </div>\n\n\n\n","import { Component, OnInit, Inject, Injectable } from \"@angular/core\";\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from \"@angular/material/dialog\";\nimport { ActiveService } from \"../../../view/services/active.service\";\nimport { FormService } from \"../../services/forms/form.service\";\nimport { FieldFormService } from \"../../services/forms/field-form.service\";\nimport { MapService } from \"../../../view/services/map.service\";\nimport { LoginService } from \"../../services/login/login.service\";\nimport { ObjectTypesService } from \"../../services/forms/object-types.service\";\n\n@Component({\n  selector: \"app-modal\",\n  templateUrl: \"./modal.component.html\",\n  styleUrls: [\"./modal.component.css\"],\n})\nexport class ModalComponent implements OnInit {\n  name: any;\n  scene: any;\n  lat: any;\n  lng: any;\n  posX: any;\n  posY: any;\n  formId: any;\n  fields: any;\n  formcapId: number[];\n  valuesCampo: string[];\n  usuarioId: number;\n  fieldTypes: any;\n  optionsField: string[][];\n\n  constructor(\n    protected mapService: MapService,\n    protected loginService: LoginService,\n    protected formService: FormService,\n    protected fieldFormService: FieldFormService,\n    protected activeService: ActiveService,\n    protected objectTypesService: ObjectTypesService,\n    private dialogRef: MatDialogRef<ModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.scene = data.scene;\n    this.lat = data.lat;\n    this.lng = data.lng;\n    this.posX = data.posX;\n    this.posY = data.posY;\n    this.formcapId = [];\n    this.valuesCampo = [];\n    this.formId = mapService.getCurrentFormId();\n    this.usuarioId = loginService.getuserId();\n    this.objectTypesService.getObjectTypes().subscribe((data: {}) => {\n      this.fieldTypes = data;\n      this.getFields();\n    });\n\n    if (this.formId === \"\") {\n      this.dialogRef.close();\n      alert(\n        \"No se ha seleccionado ningún formulario para la creación del activo\"\n      );\n    }\n  }\n\n  ngOnInit() { }\n\n  public closeMe() {\n    this.dialogRef.close();\n  }\n  //this is used to retrieve the current date in YYYY-MM-DD format\n  getCurrentDate() {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = ('0' + (now.getMonth() + 1)).slice(-2);\n    const day = ('0' + now.getDate()).slice(-2);\n    const currentDate = year + '-' + month + '-' + day;\n    return currentDate;\n  }\n\n  getFields() {\n    this.fieldFormService.getFieldForm({ formulario_id: this.formId }).subscribe((dataField: {}) => {\n      this.fields = dataField[\"SDTFormularioid\"];\n      dataField[\"SDTFormularioid\"].forEach((element) => {\n        this.formcapId.push(element[\"formulario_campo_id\"]);\n      });\n      this.getTypes();\n    });\n  }\n\n  getTypes() {\n    this.fields.forEach((element, index) => {\n      for (let index2 = 0; index2 < this.fieldTypes.length; index2++) {\n        const element2 = this.fieldTypes[index2];\n        if (element[\"tipo_objeto_id\"] == element2[\"tipo_objeto_id\"]) {\n          var typeconvert;\n          switch (element2[\"tipo_objeto_icono\"]) {\n            case \"text_fields\":\n              typeconvert = \"text\";\n              break;\n\n            case \"numbers\":\n              typeconvert = \"number\";\n              break;\n\n            case \"list\":\n              typeconvert = \"combo\";\n              this.fields[index].options = this.getOptionsField(element[\"formulario_campo_id\"]);\n              break;\n\n            case \"event\":\n              typeconvert = \"date\";\n              break;\n\n            case \"image\":\n              typeconvert = \"text\"; //CAMBIAR PARA QUE SEA UN FILESELECT\n              break;\n\n            default:\n              break;\n          }\n          this.fields[index].type = typeconvert;\n        }\n      }\n    });\n  }\n\n  getOptionsField(id): string[] {\n    var options = [];\n    this.fieldFormService.getOptions(id).subscribe((data: []) => {\n      data.forEach(element => {\n        options[element[\"formulario_campo_opcion_orden\"]] = element[\"formulario_campo_opcion_valor\"];\n      });\n\n    });\n    return options;\n  }\n\n  public createActive() {\n    const activeDetails = {\n      formulario_captura_scene: this.scene,\n      formulario_captura_latitud: this.lat,\n      formulario_captura_longitud: this.lng,\n      formulario_captura_x: this.posX,\n      formulario_captura_y: this.posY,\n      formulario_captura_altitud: \"2600\", //De donde obtener la altitud?\n      formulario_captura_estado: 1, //Estado?\n      formulario_captura_fecha: this.getCurrentDate(),\n      formulario_id: this.formId,\n      usuario_realgisId: this.usuarioId, //Usuario login   \n    };\n    this.activeService.createActive(activeDetails).subscribe((data: {}) => {\n      this.dialogRef.close({ data: data });\n      this.createCapture(data);\n    });\n  }\n\n  createCapture(data) {\n    for (let index = 0; index < this.formcapId.length; index++) {\n      const capture = {\n        formulario_captura_id: data[\"formulario_captura_id\"],\n        formulario_campo_id: this.formcapId[index],\n        formulario_captura_campo_valor: this.valuesCampo[index],\n      };\n      console.log(capture);\n      /* this.activeService.createCapture(capture).subscribe((data: {}) => {\n        this.dialogRef.close({ data: data });\n      }); */\n    }\n  }\n\n}\n","<h1 mat-dialog-title>Creación de Activo</h1>\n<mat-dialog-content class=\"add-active\">\n  <mat-form-field>\n    <input matInput [disabled]=\"true\" placeholder=\"Latitud\" value=\"{{data.lat}}\"> \n  </mat-form-field>\n  <mat-form-field>\n    <input matInput [disabled]=\"true\" placeholder=\"Longitud\" value=\"{{data.lng}}\">\n  </mat-form-field>\n\n  <mat-form-field *ngFor=\"let field of fields; let i=index\">\n    <input matInput [required]=\"field.formulario_campo_requerido\" *ngIf=\"field.type!='date'&& field.type!='combo'\" [disabled]=\"false\" type=\"{{field.type}}\" [(ngModel)]=\"valuesCampo[i]\" placeholder=\"{{field.formulario_campo_nombre}}\" />\n    <input matInput [required]=\"field.formulario_campo_requerido\" *ngIf=\"field.type=='date'\" disabled [matDatepicker]=\"picker\" [(ngModel)]=\"valuesCampo[i]\" placeholder=\"{{field.formulario_campo_nombre}}\" />\n    <mat-label *ngIf=\"field.type =='combo'\">{{field.formulario_campo_nombre}}</mat-label>\n    <mat-select [required]=\"field.formulario_campo_requerido\" [(ngModel)]=\"valuesCampo[i]\" *ngIf=\"field.type=='combo'\">\n      <mat-option *ngFor=\"let option of field.options\" value=\"{{option}}\">{{option}}</mat-option>\n    </mat-select>\n    <!-- <input matInput required  [disabled]=\"false\" type=\"{{field.type}}\" [(ngModel)]=\"valuesCampo[i]\" placeholder=\"{{field.formulario_campo_nombre}}\" /> -->\n    <mat-datepicker-toggle matSuffix *ngIf=\"field.type=='date'\" [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\n  </mat-form-field>\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button mat-raised-button type=\"submit\" (click)=\"createActive()\">Crear</button>\n  <button mat-raised-button (click)=\"closeMe()\">Cancelar</button>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Injectable, Input } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\nimport { LayerService } from \"../../../services/layers/layer.service\";\nimport { FormService } from \"../../../services/forms/form.service\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { FormBuilder, FormGroup, FormArray, FormControl } from \"@angular/forms\";\n\nimport { FieldFormService } from \"../../../services/forms/field-form.service\";\nimport { ModalAddfieldComponent } from \"../../modal-addfield/modal-addfield.component\";\n\n@Component({\n  selector: \"app-admon-active\",\n  templateUrl: \"./admon-active.component.html\",\n  styleUrls: [\"./admon-active.component.css\"]\n})\nexport class AdmonActiveComponent implements OnInit {\n  fields: any;\n  formId: any;\n\n  constructor(\n    protected layerService: LayerService,\n    protected formService: FormService,\n    protected fieldFormService: FieldFormService,\n    protected dialog: MatDialog,\n    private dialogRef: MatDialogRef<AdmonActiveComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.formId = data.id;\n\n    // tslint:disable-next-line: no-shadowed-variable\n    this.layerService.getLayers().subscribe((data: {}) => {\n      this.layers = data;\n    });\n\n    this.fieldFormService\n      .getFieldForm({ formulario_id: this.formId })\n      .subscribe((data: {}) => {\n        this.fields = data[\"SDTFormularioid\"];\n      });\n  }\n  id: any;\n  name: any;\n  description: any;\n  layer: any;\n  layers: any;\n  hash: any;\n\n  public others: any[] = [\n    {\n      new_field: \"\"\n    }\n  ];\n\n  removeOther(i: number) {\n    this.others.splice(i, 1);\n  }\n\n  ngOnInit() {}\n\n  public closeMe() {\n    this.dialogRef.close();\n  }\n\n  addOther() {\n    this.others.push({\n      new_field: \"\"\n    });\n  }\n\n  public createForm() {\n    const formDetails = {\n      capa_id: this.layer,\n      formulario_nombre: this.name,\n      formulario_descripcion: this.description,\n      formulario_estado: 1\n    };\n\n    this.formService.createForm(formDetails).subscribe((data: {}) => {\n      this.dialogRef.close({ data });\n    });\n  }\n\n  public createFieldForm() {\n    this.dialog\n      .open(ModalAddfieldComponent, { data: { formId: this.formId } })\n      .afterClosed()\n      .subscribe(result => {\n        this.fieldFormService\n          .getFieldForm({ formulario_id: this.formId })\n          .subscribe((data: {}) => {\n            this.fields = data[\"SDTFormularioid\"];\n          });\n      });\n  }\n}\n","<h1 mat-dialog-title>Previsualización de Formulario</h1>\n\n<mat-dialog-content class=\"create-form\">\n  <mat-form-field *ngFor=\"let field of fields\">\n    <input matInput [disabled]=\"true\" placeholder=\"{{field.formulario_campo_nombre}}\" />\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button mat-raised-button (click)='createFieldForm()'>Agregar nuevo campo</button>\n  <button mat-raised-button (click)='closeMe()'>Cerrar</button>\n</mat-dialog-actions>\n","import { Component, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { environment } from \"../../../../environments/environment\"\nimport { LoginService } from '../../services/login/login.service';\nimport { ModalWindowComponent } from '../modal-window/modal-window.component';\nimport { HomeComponent } from '../home/home.component';\nimport { MapService } from 'src/app/view/services/map.service';\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport WebMap from \"@arcgis/core/WebMap\";\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n  projectEnvironment = environment;\n  project: string = environment.project;\n  version: string = environment.version;\n  documentationUrl: string = environment.documentationUrl;\n  potActivated: boolean = false\n  facActivated: boolean = false\n\n  constructor(\n    protected dialog: MatDialog,\n    public loginService: LoginService,\n    public homeComponent: HomeComponent,\n    public mapService: MapService,\n    private _snackBar: MatSnackBar\n  ) {\n  }\n\n  toggle() {\n    this.sidenav.toggle();\n    this.homeComponent.sidenavView = !this.homeComponent.sidenavView;\n  }\n\n  openUserManual() {\n    window.open(this.documentationUrl, \"_blank\");\n  }\n\n  reload() {\n    window.location.reload();\n  }\n\n  openSettingsLayer() {\n    this.dialog.open(ModalWindowComponent, { autoFocus: false });\n  }\n\n  displayInitial360Message() {\n    if (!this.mapService.currentScene) {\n      this._snackBar.open(\"Seleccione un marcador en el mapa para activar la vista 360\", \" cerrar\", {\n        duration: 7000,\n        horizontalPosition: \"center\",\n        verticalPosition: \"top\",\n        panelClass: 'custom-panel'\n      });\n    }\n  }\n\n  toggle360View() {\n    if (this.homeComponent.activatedViewPanoramic) {\n      this.homeComponent.changeViewMap();\n    } else {\n      this.displayInitial360Message()\n      this.homeComponent.changeViewMixed();\n    }\n    this.toggle();\n  }\n\n  viewDashboard() {\n    if (this.homeComponent.activatedViewMap) {\n      this.homeComponent.activatedViewMap = false;\n      this.homeComponent.activatedViewPanoramic = false;\n      this.homeComponent.activatedViewDashboard = true;\n    } else {\n      this.homeComponent.activatedViewMap = true;\n      this.homeComponent.activatedViewPanoramic = false;\n      this.homeComponent.activatedViewDashboard = false;\n    }\n    this.toggle();\n  }\n\n  viewMapPot() {\n\n    let webMapActual = this.mapService.getViewMap().map as WebMap;\n    const webMapIni = new WebMap({                        // Define the web map\n      portalItem: {\n        id: this.projectEnvironment.mapId\n      }\n    });\n\n    const webMapPot = new WebMap({                        // Define the web map pot\n      portalItem: {\n        id: this.projectEnvironment.mapIdPot,\n      }\n    });\n\n    if (webMapActual.portalItem.id === this.projectEnvironment.mapIdPot) {\n      this.mapService.getViewMap().map = webMapIni;\n      this.potActivated = !this.potActivated\n    } else {\n      this.mapService.getViewMap().map = webMapPot;\n      this.potActivated = !this.potActivated\n      \n    }\n    this.homeComponent.changeViewMap();\n  }\n  viewMapFact() {\n\n    let webMapActual = this.mapService.getViewMap().map as WebMap;\n    const webMapIni = new WebMap({                        // Define the web map\n      portalItem: {\n        id: this.projectEnvironment.mapId\n      }\n    });\n\n    const webMapFact = new WebMap({                        // Define the web map fac\n      portalItem: {\n        id: this.projectEnvironment.mapIdfact,\n      }\n    });\n\n    if (webMapActual.portalItem.id === this.projectEnvironment.mapIdfact) {\n      this.mapService.getViewMap().map = webMapIni;\n      this.facActivated = !this.facActivated\n    } else {\n      this.mapService.getViewMap().map = webMapFact;\n      this.facActivated = !this.facActivated\n      \n    }\n    this.homeComponent.changeViewMap();\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #sidenav mode=\"side\" class=\"sidenav\">\n    <div class=\"top-content\">\n      <button mat-icon-button (click)=\"toggle360View()\" class=\"sideNav-button\" matTooltip=\"Vista 360\"\n        [matTooltipPosition]=\"'left'\"\n        *ngIf=\"projectEnvironment.modules.view360 && !homeComponent.activatedViewDashboard\">\n        <img src=\"assets/img/SVG/360Icon.svg\"\n          [class]=\"homeComponent.activatedViewPanoramic? 'icon-activated': 'icon'\" />\n      </button>\n      \n      <button mat-icon-button class=\"widgetButton\" class=\"sideNav-button\" (click)=\"viewMapPot()\" matTooltip=\"Ver POT\"\n        [matTooltipPosition]=\"'left'\"\n        *ngIf=\"projectEnvironment.modules.mapPot && !homeComponent.activatedViewDashboard\">\n        <img class=\"icon\" src=\"assets/img/SVG/potIcon.svg\" />\n      </button>\n      <!-- <button mat-icon-button class=\"widgetButton\" class=\"sideNav-button\" (click)=\"viewMapFact()\" matTooltip=\"Ver Facturación\"\n        [matTooltipPosition]=\"'left'\"\n        *ngIf=\"projectEnvironment.modules.mapPot && !homeComponent.activatedViewDashboard\">\n        <img class=\"icon\" src=\"assets/img/PREDIAL.svg\" /> -->\n      <!-- </button> -->\n      <button mat-icon-button (click)=\"viewDashboard()\" class=\"sideNav-button\"\n        matTooltip=\"Ver avance de facturación\" [matTooltipPosition]=\"'left'\"\n        *ngIf=\"projectEnvironment.modules.dashboard\">\n        <img class=\"icon\" src=\"assets/img/PREDIAL.svg\" />\n      </button>\n    </div>\n\n    <div class=\"footer-content\">\n      <div class=\"menu-icon\">\n        <button mat-icon-button class=\"sideNav-button\" [matMenuTriggerFor]=\"menuLogin\">\n          <img src=\"assets/img/SVG/infoIcon.svg\" class=\"icon\" />\n        </button>\n      </div>\n    </div>\n  </mat-sidenav>\n</mat-sidenav-container>\n\n<mat-menu #menuLogin=\"matMenu\" [xPosition]=\"'before'\">\n  <div class=\"menu-title\">\n    <mat-icon>{{projectEnvironment.login?'person':'public'}}</mat-icon>\n    <h3>{{projectEnvironment.login? loginService.userName+' '+loginService.userLastname:project}}</h3>\n  </div>\n  <div class=\"menu-content\">\n    <button mat-button *ngIf=\"projectEnvironment.login && loginService.getUserRol()=='Administrador'\"\n      class=\"footer-button\" (click)=\"openSettingsLayer()\">\n      <span>Configuración</span>\n      <mat-icon class=\"footer-button-icon\">settings</mat-icon></button>\n    <button mat-button class=\"footer-button\" (click)=\"openUserManual()\">\n      <span>Ayuda</span>\n      <mat-icon class=\"footer-button-icon\">help_outline</mat-icon></button>\n    <button mat-button *ngIf=\"projectEnvironment.login\" class=\"footer-button\" (click)=\"reload()\">\n      <span>Cerrar sesión</span>\n      <mat-icon class=\"footer-button-icon\">logout</mat-icon></button>\n    <span *ngIf=\"projectEnvironment.login\" style=\"font-size: small;\">{{project}}</span>\n    <span style=\"font-size: small;\">RealGIS v. {{version}}</span>\n    <span style=\"font-size: x-small; font-style: italic;\">\n      Powered by\n      <a href=\"https://realtix.co/wordpress/\"> Realidad 5.0</a>\n    </span>\n  </div>\n</mat-menu>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { HeaderComponent } from \"./components/header/header.component\";\nimport { SidebarComponent } from \"./components/sidebar/sidebar.component\";\nimport { FooterComponent } from \"./components/footer/footer.component\";\nimport { ModalComponent } from \"./components/modal/modal.component\";\nimport { MaterialModule } from \"../material/material.module\";\nimport { ViewModule } from \"../view/view.module\";\nimport { ModalRemoveComponent } from \"./components/modal-remove-active/modal-remove.component\";\nimport { ModalLayerComponent } from \"./components/modal-layer/modal-layer.component\";\nimport { ModalCategoryComponent } from \"./components/modal-category/modal-category.component\";\nimport { AdmonActiveComponent } from \"./components/modal_admon_active/admon-active/admon-active.component\";\nimport { ModalFormsComponent } from \"./components/modal-forms/modal-forms.component\";\nimport { ModalWindowComponent } from \"./components/modal-window/modal-window.component\";\nimport { ModalWorkspaceComponent } from './components/modal-workspace/modal-workspace.component';\nimport { ModalAddfieldComponent } from './components/modal-addfield/modal-addfield.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ModalFormUserComponent } from './components/modal-form-user/modal-form-user.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { ModalNewUserComponent } from './components/modal-new-user/modal-new-user.component';\nimport { ConfirmDialogComponent } from \"./components/confirm-dialog/confirm-dialog.component\";\nimport { AngularSplitModule } from 'angular-split';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n\n\n@NgModule({\n    declarations: [\n        HomeComponent,\n        HeaderComponent,\n        SidebarComponent,\n        FooterComponent,\n        ModalComponent,\n        ModalRemoveComponent,\n        ModalLayerComponent,\n        ModalCategoryComponent,\n        AdmonActiveComponent,\n        ModalFormsComponent,\n        ModalWindowComponent,\n        ModalWorkspaceComponent,\n        ModalAddfieldComponent,\n        LoginComponent,\n        FilterComponent,\n        ModalFormUserComponent,\n        ModalNewUserComponent,\n        ConfirmDialogComponent,\n    ],\n    imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MaterialModule,\n        FormsModule,\n        MatIconModule,\n        MatButtonModule,\n        ViewModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatSlideToggleModule,\n        MatProgressBarModule,\n        MatTreeModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatCheckboxModule,\n        AngularSplitModule,\n        ScrollingModule\n    ]\n})\nexport class HomeModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Category } from '../../entities/category_layers/category';\nimport { environment } from \"../../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CategoryService {\n  // Define API\n \n  //apiURL = environment.apiUrl;\napiURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n  /*========================================\n  CRUD Methods for consuming RESTful API\n  =========================================*/\n  // Http Optionsrealgis_cc\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n  \n\n  // HttpClient API get() method => Fetch layer list\n  getCategories(): Observable<Category> {\n    return this.http.get<Category>(this.apiURL + '/getcategoriacapa')\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API get() method => Fetch layer\n  getCategory(id): Observable<Category> {\n    return this.http.get<Category>(this.apiURL + '/categoria_capa/' + id)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // HttpClient API post() method => Create layer\n  createCategory(category): Observable<Category> {\n    return this.http.post<Category>(this.apiURL + '/categoria_capa/0', JSON.stringify(category), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API put() method => Update layer\n  updateCategory(id, category): Observable<Category> {\n    return this.http.put<Category>(this.apiURL + '/categoria_capa/' + id, JSON.stringify(category), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API delete() method => Delete layer\n  deleteCategory(id) {\n    return this.http.delete<Category>(this.apiURL + '/categoria_capa/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // Error handling\n  handleError(error) {\n    let errorMessage = 'Hola categoria';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Codigo Error(Category): ${error.status}\\nMensaje Error: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { retry, catchError } from 'rxjs/operators';\nimport { environment } from \"../../../../environments/environment\";\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n// URL API\napiURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { \n\n  }\n \n  getCampos(){\n    return this.http.get(this.apiURL + '/getformulariocapturacampo')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  getActivos(){\n    return this.http.get(this.apiURL + '/getformulariocaptura')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  getCamposResultado(formCapId){\n    return this.http.get(this.apiURL + '/getFormularioCapturaCampoParm?formulario_captura_id='+formCapId)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    );\n  }\n\ngetActivosResultados(formCapId){\n  return this.http.get(this.apiURL + /formulario_captura/ + formCapId)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    );\n}\n\n\n\n  handleError(error) {\n\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Hay un error en la busqueda debido al servidor!\\nCodigo Error: ${error.status}\\nMessage: ${error.message}`;\n      window.location.reload();\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, from } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { FieldForm } from '../../entities/forms/field-form';\nimport { environment } from \"../../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FieldFormService {\n  // Define API\n  \n  apiURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n  /*========================================\n  CRUD Methods for consuming RESTful API\n  =========================================*/\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  // HttpClient API get() method => Fetch forms list\n  getFieldForms(): Observable<FieldForm> {\n    return this.http.get<FieldForm>(this.apiURL + '/getformulariocampo')\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API get() method => Fetch form\n  getFieldForm(formId): Observable<FieldForm> {\n    return this.http.post<FieldForm>(this.apiURL + '/getformularioid', JSON.stringify(formId), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // HttpClient API post() method => Creando Campo\n  // tslint:disable-next-line: no-shadowed-variable\n  createFieldForm(fieldForm): Observable<FieldForm> {\n    return this.http.post<FieldForm>(this.apiURL + '/formulario_campo/0', JSON.stringify(fieldForm), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API put() method => Update form\n  updateFieldForm(id, fieldForm): Observable<FieldForm> {\n    return this.http.put<FieldForm>(this.apiURL + '/formulario_campo/' + id, JSON.stringify(fieldForm), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API delete() method => Delete form\n  deleteFieldForm(id) {\n    return this.http.delete<FieldForm>(this.apiURL + '/formulario_campo/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n\n createOption(option){\n  return this.http.post(this.apiURL + '/formulario_campo_opcion/0', JSON.stringify(option), this.httpOptions)\n  .pipe(\n    retry(1),\n    catchError(this.handleError)\n  );\n }\n\ngetOptions(id){\n  return this.http.get(this.apiURL + '/getformulariocampoopcionParm?formulario_campo_id=' + id)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n}\n\n  // Error handling\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code (Campo): ${error.status}\\nMessage (Campo): ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Form } from '../../entities/forms/form';\nimport { environment } from \"../../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FormService {\n  // Define API\n  apiURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n  /*========================================\n  CRUD Methods for consuming RESTful API\n  =========================================*/\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  // HttpClient API get() method => Fetch forms list\n  getForms(): Observable<Form> {\n    return this.http.get<Form>(this.apiURL + '/getformulario')\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  getFormsUser(idUser): Observable<Form> {\n    return this.http.get<Form>(this.apiURL + '/getformulariousuarioParm?usuario_realgisId=' + idUser)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // HttpClient API get() method => Fetch form\n  getForm(id): Observable<Form> {\n    return this.http.get<Form>(this.apiURL + '/formulario/' + id)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // HttpClient API post() method => Create form\n  createForm(form): Observable<Form> {\n    return this.http.post<Form>(this.apiURL + '/formulario/0', JSON.stringify(form), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API put() method => Update form\n  updateForm(id, form): Observable<Form> {\n    return this.http.put<Form>(this.apiURL + '/formulario/' + id, JSON.stringify(form), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API delete() method => Delete form\n  deleteForm(id) {\n    return this.http.delete<Form>(this.apiURL + '/formulario/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // Error handling\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code (form): ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { ObjectType } from '../../entities/forms/object-type';\nimport { environment } from \"../../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ObjectTypesService {\n  // Define API\n  apiURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n  /*========================================\n  CRUD Methods for consuming RESTful API\n  =========================================*/\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  // HttpClient API get() method => Fetch forms list\n  getObjectTypes(): Observable<ObjectType> {\n    return this.http.get<ObjectType>(this.apiURL + '/gettipoobjeto')\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API get() method => Fetch form\n  getObjectType(id): Observable<ObjectType> {\n    return this.http.get<ObjectType>(this.apiURL + '/tipo_objeto/' + id)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // HttpClient API post() method => Create form\n  createObjectType(objectType): Observable<ObjectType> {\n    return this.http.post<ObjectType>(this.apiURL + '/tipo_objeto/0', JSON.stringify(objectType), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API put() method => Update form\n  updateObjectType(id, objectType): Observable<ObjectType> {\n    return this.http.put<ObjectType>(this.apiURL + '/tipo_objeto/' + id, JSON.stringify(objectType), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API delete() method => Delete form\n  deleteObjectType(id) {\n    return this.http.delete<ObjectType>(this.apiURL + '/tipo_objeto/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // Error handling\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Layer } from '../../entities/layers/layer';\nimport { environment } from \"../../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LayerService {\n  // Define API\n  apiURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n  /*========================================\n  CRUD Methods for consuming RESTful API\n  =========================================*/\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  // HttpClient API get() method => Fetch layer list\n  getLayers(): Observable<Layer> {\n    return this.http.get<Layer>(this.apiURL + '/getcapa')\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API get() method => Fetch layer\n  getLayer(id): Observable<Layer> {\n    return this.http.get<Layer>(this.apiURL + '/capa/' + id)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // HttpClient API post() method => Create layer\n  createLayer(layer): Observable<Layer> {\n    return this.http.post<Layer>(this.apiURL + '/capa/0', JSON.stringify(layer), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API put() method => Update layer\n  updateLayer(id, layer): Observable<Layer> {\n    return this.http.put<Layer>(this.apiURL + '/capa/' + id, JSON.stringify(layer), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API delete() method => Delete layer\n  deleteLayer(id) {\n    return this.http.delete<Layer>(this.apiURL + '/capa/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // Error handling\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Codigo Error (layer): ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { retry, catchError } from \"rxjs/operators\";\nimport { environment } from \"../../../../environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LoginService {\n  // URL API\n  apiURL = environment.apiUrl;\n  userId: number;\n  userRol: string;\n  userName: string;\n  userLastname: string;\n  settings: Boolean; \n  layers: Boolean; \n  search: Boolean; \n  createActive: Boolean; \n  views: Boolean; \n  zoom: Boolean;\n  mLine: Boolean; \n  mPol: Boolean; \n\n  constructor(private http: HttpClient) {}\n  httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n    }),\n  };\n\n  getuserId() {\n    return this.userId;\n  }\n\n  getUserRol(){\n    return this.userRol;\n  }\n\n  login(user: any): Observable<any> {\n    return this.http\n      .post(this.apiURL + \"/getUsuarioRealGis\", user)\n      .pipe(retry(1), catchError(this.handleError));\n  }\n\n  handleError(error) {\n    let errorMessage = \"\";\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Hay un error en la validacion del usuario debido al servidor!\\nCodigo Error: ${error.status}\\nMessage: ${error.message}`;\n      window.location.reload();\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Form } from '../../entities/forms/form';\nimport { environment } from \"../../../../environments/environment\";\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  apiURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n  httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n    }),\n  };\n\n  getUsers(): Observable<Form> {\n    return this.http.get<Form>(this.apiURL + '/getUsuarioRealgisTodos')\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  assignFormUser(form_user: any){\n    return this.http\n    .post(this.apiURL + \"/formulario_usuario/0\", form_user)\n    .pipe(retry(1), catchError(this.handleError));\n\n  }\n\n  createNewUser(user: any){\nreturn this.http\n    .post(this.apiURL + \"/getUsuarioRealgis_Rol\", user)\n    .pipe(retry(1), catchError(this.handleError));\n  }\n\n  getUser(idUser){\nreturn this.http.get<Form>(this.apiURL + '/usuario_realgis/' + idUser)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  editUser(user: any){\n    console.log(user);\nreturn this.http\n    .post(this.apiURL + \"/getUsuarioRealgisActualiza\", user)\n    .pipe(retry(1), catchError(this.handleError));\n  }\n  \ndisableUser(user: any){\n  return this.http\n    .post(this.apiURL + \"/getUsuarioRealgisInhabilita\", user)\n    .pipe(retry(1), catchError(this.handleError));\n}\n\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code (form): ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatButtonToggleModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatExpansionModule\n  ],\n  exports: [\n    MatMenuModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatButtonToggleModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatExpansionModule\n  ]\n})\n\nexport class MaterialModule { }\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport esriConfig from \"@arcgis/core/config\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport Map from \"@arcgis/core/Map\";\nimport WebMap from \"@arcgis/core/WebMap\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { ModalWorkspaceComponent } from \"../../../home/components/modal-workspace/modal-workspace.component\";\nimport { PanoramicService } from \"../../services/panoramic.service\";\nimport { MapService } from \"../../services/map.service\";\nimport { FilterComponent } from \"../../../home/components/filter/filter.component\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport Point from \"@arcgis/core/geometry/Point\";\nimport ScaleBar from \"@arcgis/core/widgets/ScaleBar\";\nimport { environment } from \"../../../../environments/environment\";\nimport { HomeBarComponent } from \"../../../widgets/home-bar/home-bar.component\";\nimport { WidgetDirective } from \"../../../widgets/directiva/directive-widget.directive\";\nimport WebTileLayer from \"@arcgis/core/layers/WebTileLayer.js\";\nimport GeoJSONLayer from \"@arcgis/core/layers/GeoJSONLayer.js\";\n\n@Component({\n  selector: \"app-view-map\",\n  templateUrl: \"./map-view.component.html\",\n  styleUrls: [\"./map-view.component.css\"],\n})\nexport class MapViewComponent implements OnInit {\n  public view: any = null;\n  measureLineActive = false;\n  measurePolygonActive = false;\n  idMap = environment.mapId;\n  urlPortal = environment.portalUrl;\n  view360 = environment.modules.view360;\n  apiKey = environment.apiKeyArcGIS;\n  mapReady: boolean = false;\n  @ViewChild(\"map\", { static: true }) private mapViewEl!: ElementRef;\n  @ViewChild(WidgetDirective, { static: true })\n  private appDirectiveWidget!: WidgetDirective;\n\n  constructor(\n    protected dialog: MatDialog,\n    protected panoramicService: PanoramicService,\n    private _snackBar: MatSnackBar,\n    protected mapService: MapService,\n    protected viewContainer: ViewContainerRef\n  ) {}\n\n  ngOnInit(): void {\n    this.chargeMap().then(() => {\n      this.addWidgets();\n      //this hides hotspot layer from the layer list\n      const hotSpotLayer = this.view.map.allLayers.find(function (layer) {\n        return layer.title.toLowerCase().includes(\"hotspot\");\n      });\n      if (hotSpotLayer) {\n        hotSpotLayer.listMode = \"hide\";\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    document.getElementById(\"coordenadas\").innerHTML = \"\";\n    document.getElementById(\"scaleBar\").innerHTML = \"\";\n  }\n\n  chargeMap(): Promise<any> {\n    const container = this.mapViewEl.nativeElement;\n\n    const upllayer = new GeoJSONLayer({\n      url: \"./assets/layers/upl.geojson\",\n      visible: false,\n      title: \"Unidad de Planeamiento Local\",\n    });\n\n    const map = new Map({\n      layers: [upllayer],\n      basemap: \"streets-vector\",\n    });\n\n    // const webmap = new WebMap({\n    //   portalItem: {\n    //     id: this.idMap,\n    //   },\n    // });\n\n    const viewMap = new MapView({\n      map: map,\n      container: container,\n      center: [-74.08175, 4.60971],\n      zoom: 10,\n    });\n\n    // viewMap.on(\"pointer-move\", function (event) {\n    //   const point: Point = viewMap.toMap({\n    //     x: event.x,\n    //     y: event.y,\n    //   });\n    //   document.getElementById(\"coordenadas\").innerHTML =\n    //     point.latitude.toFixed(5) + \" , \" + point.longitude.toFixed(5);\n    // });\n    this.view = viewMap;\n    this.mapService.setViewMap(this.view);\n    //this removes the default zoom controllers\n    this.view.ui.remove(\"zoom\");\n    return this.view.when();\n  }\n\n  addWidgets() {\n    new ScaleBar({\n      view: this.view,\n      container: \"scaleBar\",\n      unit: \"metric\",\n    });\n\n    this.appDirectiveWidget = new WidgetDirective(this.viewContainer);\n    const elementDom =\n      this.appDirectiveWidget.viewContainerRef.createComponent(\n        HomeBarComponent\n      );\n    this.view.ui.add(elementDom.location.nativeElement, \"bottom-right\");\n    this.view.popup.dockEnabled = true;\n  }\n\n  openWorkspace() {\n    this.dialog.open(ModalWorkspaceComponent, { data: {} });\n  }\n\n  openFilter() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = false;\n    dialogConfig.closeOnNavigation = false;\n    if (this.panoramicService.getPanoramic()) {\n      this.dialog.open(FilterComponent, dialogConfig);\n    } else {\n      this._snackBar.open(\"Active la vista mixta para buscar activos\", \"\", {\n        duration: 1000,\n        horizontalPosition: \"center\",\n        verticalPosition: \"top\",\n      });\n    }\n  }\n}\n","<div id=\"map\" class=\"map\" #map>\n\n <!-- <div class=\"tools\" id=\"toolsButtons\">\n        <mat-grid-list cols=\"1\">\n          <mat-grid-tile>\n            <button mat-mini-fab class=\"buttonLayer\" (click)=\"openWorkspace()\">\n              <mat-icon inline=true>layers</mat-icon>\n            </button>\n          </mat-grid-tile>\n          <mat-grid-tile>\n            <button mat-mini-fab class=\"buttonFilter\" (click)=\"openFilter()\">\n              <mat-icon inline=true>search</mat-icon>\n            </button>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div> -->\n      \n    </div>\n     <ng-template appDirectiveWidget></ng-template> \n     ","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PanoramicService } from '../../services/panoramic.service';\n// import { ModalComponent } from '../../../home/components/modal/modal.component';\n// import { ModalRemoveComponent } from '../../../home/components/modal-remove-active/modal-remove.component';\nimport { MapService } from \"../../services/map.service\";\nimport { environment } from 'src/environments/environment';\n\ndeclare function embedpano(params): any;\n\n@Component({\n  selector: 'app-view-panoramic',\n  templateUrl: './panoramic-view.component.html',\n  styleUrls: ['./panoramic-view.component.css']\n})\nexport class PanoramicViewComponent implements OnInit, OnDestroy {\n\n  loaded: boolean;\n   \n  constructor(\n    protected panoramicService: PanoramicService, \n    protected dialog: MatDialog, \n    protected mapService: MapService,\n    ) {}\n\n  ngOnInit() {\n    if (!document.getElementById(\"krpanoSWFObject\")) {\n      embedpano({\n        swf: './assets/panoramic/tour.swf', xml: './assets/panoramic/tour.xml ',\n        target: 'pano', html5: 'only', mobilescale: 1.0, passQueryParameters: true,\n        onready: this.panoramicReady, panoramicService: this.panoramicService, mapService: this.mapService, dialog: this.dialog\n      });\n    };\n  }\n\n  panoramicReady(panoramic) {\n    this.mapService.getViewMap().rotation = 0;\n    this.mapService.getViewMap().constraints.rotationEnabled = false;\n    this.panoramicService.setPanoramic(panoramic);\n    this.mapService.addMarkersLayer(panoramic);\n     // This variable contains the date of the virtual tour, this is passed to krpano using \"set\", and is shown in vtourskin.xml --DS\n    panoramic.set(\"myKrpVar\",environment.imagesDate);\n\n    //this calls the last scene when the view is closed an re-opened --DS\n    if (this.mapService.currentScene){\n      let xml = this.mapService.currentScene.split('_')[1] + '.xml'\n      this.panoramicService.loadScene(xml, this.mapService.currentScene)\n    }       \n  }\n\n  ngOnDestroy() {\n    this.mapService.getViewMap().constraints.rotationEnabled = true;\n  }\n}\n\n // panoramic.set('events.onclick', function () {\n      \n    //   if (this.panoramicService.getCreateActive()) {\n    //     this.panoramicService.addActive(this.dialog, ModalComponent, ModalRemoveComponent);\n    //     this.panoramicService.setCreateActive(false);\n    //   }\n    // }.bind(this));\n\n    // panoramic.set('events.onloadcomplete', function () {\n\n    //   if (!this.loaded) {\n    //     this.loaded = true;\n    //   }\n    // }.bind(this));\n\n    // panoramic.set('events.onxmlcomplete', function () {\n    //   this.panoramicService.addPoints(this.dialog, ModalRemoveComponent);\n    //   if (!this.loaded) {\n    //     this.loaded = true;\n    //   }\n    // }.bind(this));","<div id=\"pano\" class=\"pano\">","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Active } from '../entities/active';\nimport { environment } from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ActiveService {\n  // Define API\n  apiURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n  /*========================================\n  CRUD Methods for consuming RESTful API\n  =========================================*/\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  // HttpClient API get() method => Fetch active list\n  getAllActives(): Observable<Active> {\n    return this.http.get<Active>(this.apiURL + '/getformulariocaptura')\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n\n  // HttpClient API get() method => Fetch active\n  getActive(id): Observable<Active> {\n    return this.http.get<Active>(this.apiURL + '/formulario_captura/' + id)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // HttpClient API post() method => Create active\n  createActive(active): Observable<Active> {\n    return this.http.post<Active>(this.apiURL + '/formulario_captura/0', JSON.stringify(active), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  getActivesFilter(filters): Observable<Active> {\n    return this.http.post<Active>(this.apiURL + '/pBuscarFormularioCaptura', JSON.stringify(filters), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  createCapture(capture): Observable<Active>{\n    return this.http.post<Active>(this.apiURL + '/formulario_captura_campo/0', JSON.stringify(capture), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  // HttpClient API put() method => Update active\n  updateActive(id, active): Observable<Active> {\n    return this.http.put<Active>(this.apiURL + '/formulario_captura/' + id, JSON.stringify(active), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n  // HttpClient API delete() method => Delete active\n  deleteActive(id) {\n    return this.http.delete<Active>(this.apiURL + '/formulario_captura/' + id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      );\n  }\n\n  // Error handling\n  handleError(error) {\n    let errorMessage = 'Intente nuevamente';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Codigo Error (captura): ${error.status} Message: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActiveService } from './active.service';\nimport Graphic from '@arcgis/core/Graphic';\nimport Collection from '@arcgis/core/core/Collection';\nimport Point from '@arcgis/core/geometry/Point';\nimport SimpleRenderer from '@arcgis/core/renderers/SimpleRenderer';\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport MapView from '@arcgis/core/views/MapView';\nimport * as reactiveUtils from \"@arcgis/core/core/reactiveUtils\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MapService {\n  currentCategory: string = '';\n  currentLayer: string = '';\n  currentForm: string = '';\n  currentFormId: string = '';  // este es el id del formulario\n  //depende de cuantos recorridos existan- Master asume un unico recorrido\n  markersLayer: any;\n  markersLayerView: any;\n  //depende de cuantos recorridos existan\n  dataMarkers: any;\n  markersSource = new Collection();\n  mapView: MapView;\n  highlight: any;\n  sceneActiveStart: any;\n  layer: any;\n  lastHlookAt: number;\n  newScene: boolean = false;\n  showPano: boolean = false;\n  currentScene: any;\n  view: any\n\n  constructor(\n    private activeService: ActiveService,\n  ) { }\n\n  setViewMap(map) {\n    this.mapView = map;\n  }\n\n  getViewMap() {\n    return this.mapView;\n  }\n\n  activeScene(krpano) {\n    let setActiveMarker = () => {\n      this.currentScene = krpano.get('scene[get(xml.scene)].name');\n      let query = this.layer.createQuery();\n      query.where = `LOWER(scene) ='${this.currentScene}'`;\n      this.layer.queryFeatures(query)\n        .then(function (response) {\n          if (response) {\n            this.newScene = true;\n            let activeMarker = response.features[0].geometry;\n\n            this.getHorizontalDirection(krpano, activeMarker);\n\n            this.mapView.goTo(activeMarker); // aca se pasa la geometria del punto --DS\n            this.mapView.zoom = 19;\n          }\n        }.bind(this)\n        );\n    };\n    krpano.set('events.onnewscene', setActiveMarker);\n  }\n\n  drawMarker(feature, hlookat) {\n    this.mapView.graphics.removeAll()\n    const symbol = {\n      type: \"picture-marker\",\n      url: \"assets/img/SVG/RealGISicon_compass.svg\",\n      width: 32,\n      height: 32,\n      angle: hlookat\n    };\n\n    let directionGraphic = new Graphic({\n      geometry: feature,\n      //@ts-ignore\n      symbol: symbol,\n    });\n\n    this.mapView.graphics.add(directionGraphic);\n    this.newScene = false;\n    this.lastHlookAt = hlookat;\n  }\n\n  getHorizontalDirection(krpano, feature) {\n\n    let viewChange = () => {\n\n      // this line is mandatory to get values between 0 and 360 --DS\n      krpano.call(\"adjusthlookat(180)\");\n\n      let hlookat: number = krpano.get('view.hlookat');\n      if (hlookat !== this.lastHlookAt || this.newScene) {\n        this.drawMarker(feature, hlookat);\n\n      }\n    };\n\n    krpano.set('events.onviewchange', viewChange)\n  }\n\n  addMarkersLayer(krpano) {\n\n    this.layer = this.mapView.map.allLayers.find(function (layer) {\n      return layer.title.toLowerCase().includes('hotspot') && layer.type === 'feature';\n    });\n\n    this.layer.visible = true\n    this.layer.outFields = [\"*\"];\n\n    this.mapView.whenLayerView(this.layer).then(layerView => {\n      this.view = layerView\n\n    });\n    \n    this.layer\n      .when(() => {\n        return this.layer.queryExtent();\n      })\n      .then((response) => {\n        this.mapView.goTo(response.extent);\n      });\n    this.activeScene(krpano);\n\n    //this is simbology based on zoom level --DS\n    reactiveUtils.when(() => this.mapView.stationary === true, () => {\n      let radius: number;\n\n      if (this.mapView.zoom > 19) {\n        radius = (this.mapView.zoom - 10);\n      } else {\n        radius = 5;\n      }\n      this.layer.renderer.symbol.size = radius;\n    });\n\n\n    this.mapView.on(\n      'click',\n      function (event) {\n        const opts = {\n          include: this.layer,\n        };\n        this.mapView.hitTest(event, opts).then((response) => {\n          if (response.results.length) {\n            if (!this.showPano) { this.showPano = true; }\n            const graphic = response.results[0].graphic;\n            let sceneXml = graphic.attributes.xml_origen;\n            let sceneName = graphic.attributes.scene;\n            krpano.call(\n              `loadpanoscene(xml/${sceneXml},${sceneName}, null, MERGE, NOBLEND);`\n            );\n          }\n        });\n      }.bind(this)\n    );\n  }\n\n  removeMarkers() {\n    this.layer.visible = false;\n    this.newScene = false\n    this.mapView.graphics.removeAll();\n    this.showPano = false;\n  }\n\n  addActives() {\n\n    if (this.currentFormId != \"\") {\n\n      let activeSymbol = {\n        type: 'simple-marker',\n        color: 'yellow',\n        size: 12,\n        style: 'triangle',\n        outline: {\n          color: 'black',\n          width: 0.4,\n        },\n      };\n\n      var filter = {\n        formulario_id: this.currentFormId,\n      };\n\n      let activesSource = new Collection();\n      activesSource.removeAll();\n      this.activeService.getActivesFilter(filter).subscribe((data: {}) => {\n        Object.entries(data[\"SDTFormularioCapturaFiltro\"]).forEach(\n          ([key, value]) => {\n            let marker = new Graphic({\n              geometry: new Point({\n                latitude: value[\"formulario_captura_latitud\"],\n                longitude: value[\"formulario_captura_longitud\"],\n              })\n            });\n            activesSource.add(marker);\n          }\n        );\n        let activesLayer = new FeatureLayer({\n          source: activesSource,\n          objectIdField: 'ObjectID',\n          geometryType: 'point',\n\n          renderer: new SimpleRenderer({\n            symbol: activeSymbol,\n          }),\n          popupEnabled: false,\n          visible: true,\n          title: 'Activos',\n        });\n        this.mapView.map.layers.find(function (layer) {\n          if (layer.title === 'Activos') {\n            this.mapView.map.remove(layer);\n          }\n          return true\n        }.bind(this));\n        this.mapView.map.add(activesLayer);\n      });\n    }\n  }\n\n  setCurrentCategory(category) {\n    this.currentCategory = category;\n  }\n\n  setCurrentLayer(layer) {\n    this.currentLayer = layer;\n  }\n\n  setCurrentForm(form) {\n    this.currentForm = form;\n  }\n\n  setCurrentFormId(formId) {\n    this.currentFormId = formId;\n  }\n\n  getCurrentCategory() {\n    return this.currentCategory;\n  }\n\n  getCurrentLayer() {\n    return this.currentLayer;\n  }\n\n  getCurrentForm() {\n    return this.currentForm;\n  }\n\n  getCurrentFormId() {\n    return this.currentFormId;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { MapService } from \"./map.service\";\nimport { ActiveService } from \"./active.service\";\nimport { MatDialogConfig } from \"@angular/material/dialog\";\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PanoramicService {\n  panoramic: any;\n  createActive: Boolean = false;\n\n  constructor(\n    protected mapService: MapService,\n    protected activeService: ActiveService\n  ) { }\n\n  setPanoramic(panoramic) {\n    this.panoramic = panoramic;\n  }\n\n  getPanoramic() {\n    return this.panoramic;\n  }\n\n  setCreateActive(createActive) {\n    this.createActive = createActive;\n  }\n\n  getCreateActive() {\n    return this.createActive;\n  }\n\n  loadScene(xml: string, scenename: string) {\n    this.panoramic.call(\n      `loadpanoscene(xml/${xml},${scenename}, null, MERGE, NOBLEND);`\n    );\n  }\n\n\n  //Se crean los hotspots del activo\n\n  /* private createHotspots(ath, atv, scene) {\n    var hs_name = \"hs_\" + scene;\n    this.panoramic.call(\"addhotspot(\" + hs_name + \")\");\n    this.panoramic.set(\n      \"hotspot[\" + hs_name + \"].url\",\n      \"./assets/panoramic/skin/vtourskin_hotspot.png\"\n    );\n    this.panoramic.set(\"hotspot[\" + hs_name + \"].ath\", ath);\n    this.panoramic.set(\"hotspot[\" + hs_name + \"].atv\", atv);\n    this.panoramic.set(\n      \"hotspot[\" + hs_name + \"].loadstyle('skin_hotspotstyle')\"\n    );\n\n    if (this.panoramic.get(\"device.html5\")) {\n      this.panoramic.set(\n        \"hotspot[\" + hs_name + \"].onclick\",\n        function (scene) {\n          this.panoramic.call(\"loadscene(\" + scene + \", null, MERGE);\");\n        }.bind(this, scene, this.panoramic)\n      );\n    } else {\n      this.panoramic.set(\n        \"hotspot[\" + hs_name + \"].onclick\",\n        \"js( alert(calc('hotspot \\\"' + name + '\\\" clicked')) );\"\n      );\n    }\n  } */\n\n  /*  addHotspots() {\n     if (this.panoramic) {\n       var scene = this.panoramic.get(\"scene[get(xml.scene)]\");\n       var sceneDown = this.panoramic.get(\"scene\").getItem(scene.index - 1);\n       var sceneUp = this.panoramic.get(\"scene\").getItem(scene.index + 1);\n \n       var ath = this.panoramic.get(\"view.hlookat\");\n       var atv = this.panoramic.get(\"view.vlookat\");\n       var style = \"skin_hotspotstyle\";\n \n       if (sceneUp !== undefined) {\n         this.createHotspots(ath, atv, sceneUp.name);\n       }\n \n       if (sceneDown !== undefined) {\n         ath = -1 * ath;\n         this.createHotspots(ath, atv, sceneDown.name);\n       }\n     }\n   } */\n\n\n  addActive(dialog, ModalComponent, ModalRemoveComponent) {\n    this.panoramic.call(\"screentosphere(mouse.x,mouse.y,m_ath,m_atv);\");\n    var posX = this.panoramic.get(\"m_ath\");\n    var posY = this.panoramic.get(\"m_atv\");\n    var uniqname = \"hs\" + Date.now();\n\n    var scene = this.panoramic.get(\"scene[get(xml.scene)]\");\n    var view = this.panoramic.get(\"view\");\n\n    var hlookat = view.hlookat;\n    var vlookat = view.vlookat;\n    var fov = view.fov;\n    var lat = scene.lat;\n    var lng = scene.lng;\n    var name = scene.name;\n\n    dialog\n      .open(ModalComponent, {\n        data: {\n          scene: name,\n          posX: posX,\n          posY: posY,\n          lat: lat,\n          lng: lng,\n        },\n      })\n      .afterClosed()\n      .subscribe((response) => {\n        if (response) {\n          let id = response.data.formulario_captura_id;\n          let nameActive = response.data.formulario_captura_nombre;\n          this.panoramic.call(\"addhotspot( hs_\" + id + \");\");\n          this.panoramic.set(\n            \"hotspot[ hs_\" + id + \"].url\",\n            \"./assets/img/property.png\"\n          );\n          this.panoramic.call(\"set(hotspot[ hs_\" + id + \"].ath,\" + posX + \");\");\n          this.panoramic.call(\n            \"set(hotspot[ hs_\" + id + \"].atv, \" + posY + \");\"\n          );\n          this.panoramic.call(\n            \"hotspot[ hs_\" + id + \"].loadstyle('hotspot_ani_white');\"\n          );\n          this.panoramic.set(\n            \"hotspot[ hs_\" + id + \"].onclick\",\n            function () {\n              const dialogConfig = new MatDialogConfig();\n              dialogConfig.disableClose = true;\n              dialogConfig.autoFocus = false;\n              dialogConfig.closeOnNavigation = false;\n              dialogConfig.data = {\n                id: id,\n                name: nameActive,\n                lat: lat,\n                lng: lng,\n              };\n              dialog.open(ModalRemoveComponent, dialogConfig);\n            }.bind(this)\n          );\n        }\n      });\n  }\n\n  //Crea los hotspots en el tour de los activos creados\n  addPoints(dialog, ModalRemoveComponent) {\n    var filter = {\n      \"formulario_id\": this.mapService.getCurrentFormId()\n    }\n    this.activeService.getActivesFilter(filter).subscribe((data: {}) => {\n      var panoramic = this.panoramic;\n      Object.entries(data[\"SDTFormularioCapturaFiltro\"]).forEach(function ([key, val]) {\n        var scene = panoramic.get(\"scene[get(xml.scene)]\");\n        if (scene) {\n          if (scene.name == val[\"formulario_captura_scene\"]) {\n            panoramic.call(\n              \"addhotspot( hs_\" + val[\"formulario_captura_id\"] + \");\"\n            );\n            panoramic.set(\n              \"hotspot[ hs_\" + val[\"formulario_captura_id\"] + \"].url\",\n              \"./assets/img/property.png\"\n            );\n            panoramic.call(\n              \"set(hotspot[ hs_\" +\n              val[\"formulario_captura_id\"] +\n              \"].atv,\" +\n              val[\"formulario_captura_y\"] +\n              \");\"\n            );\n            panoramic.call(\n              \"set(hotspot[ hs_\" +\n              val[\"formulario_captura_id\"] +\n              \"].ath, \" +\n              val[\"formulario_captura_x\"] +\n              \");\"\n            );\n            panoramic.call(\n              \"hotspot[ hs_\" +\n              val[\"formulario_captura_id\"] +\n              \"].loadstyle('hotspot_ani_white');\"\n            );\n            panoramic.set(\n              \"hotspot[ hs_\" + val[\"formulario_captura_id\"] + \"].onclick\",\n              function () {\n                dialog.open(ModalRemoveComponent, {\n                  autoFocus: false,\n                  data: {\n                    id: val[\"formulario_captura_id\"],\n                    name: val[\"formulario_captura_nombre\"],\n                    lat: val[\"formulario_captura_latitud\"],\n                    lng: val[\"formulario_captura_longitud\"],\n                    hash: val[\"gx_md5_hash\"],\n                  },\n                });\n              }.bind(this)\n            );\n          }\n        }\n\n      });\n    });\n  }\n\n  deleteHotspot(id) {\n    this.panoramic.call(\"removehotspot( hs_\" + id + \");\");\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { MapViewComponent } from './components/map-view/map-view.component';\nimport { PanoramicViewComponent } from './components/panoramic-view/panoramic-view.component';\n\nimport { MapService } from './services/map.service';\nimport { MaterialModule } from '../material/material.module';\nimport { WidgetsModule } from \"../widgets/widgets.module\";\n\n@NgModule({\n    declarations: [MapViewComponent, PanoramicViewComponent],\n    imports: [\n        CommonModule,\n        MatGridListModule,\n        MaterialModule,\n        HttpClientModule,\n        WidgetsModule\n    ],\n    providers: [\n        MapService\n    ],\n    exports: [\n        MapViewComponent,\n        PanoramicViewComponent,\n\n    ]\n})\nexport class ViewModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"../../../environments/environment\";\nimport esriRequest from \"@arcgis/core/request\";\nimport { MapService } from \"../../view/services/map.service\";\nimport { FormControl } from \"@angular/forms\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport Field from \"@arcgis/core/layers/support/Field\";\n\n@Component({\n  selector: \"app-add-layer\",\n  templateUrl: \"./add-layer.component.html\",\n  styleUrls: [\"./add-layer.component.css\"],\n})\nexport class AddLayerComponent implements OnInit {\n  uploadStatus: string;\n  portalUrl = environment.portalUrl;\n\n  constructor(protected mapService: MapService) {}\n\n  ngOnInit() {}\n\n  uploadFile(e) {\n    let fileName = e.target.value.toLowerCase().split(\".\");\n    const type = fileName[1];\n    fileName = fileName[0].replace(\"c:\\\\fakepath\\\\\", \"\");\n    this.uploadStatus = \"Agregando: \" + fileName + \".\" + type;\n    let filetype, idObject;\n    switch (type) {\n      case \"geojson\":\n        filetype = \"geojson\";\n        idObject = \"ObjectId\";\n        break;\n      case \"zip\":\n        filetype = \"shapefile\";\n        idObject = \"FID\";\n        break;\n      case \"csv\":\n        filetype = \"csv\";\n        break;\n      case \"gpx\":\n        filetype = \"gpx\";\n        break;\n    }\n    var params = {\n      name: fileName,\n      targetSR: this.mapService.getViewMap().spatialReference,\n      maxRecordCount: 1000,\n      enforceInputFileSizeLimit: true,\n      enforceOutputJsonSizeLimit: true,\n      generalize: true,\n      maxAllowableOffset: 10,\n      reducePrecision: false,\n      numberOfDigitsAfterDecimal: 2,\n    };\n    const myContent = {\n      filetype: filetype,\n      publishParameters: JSON.stringify(params),\n      f: \"json\",\n    };\n    const form = document.getElementById(\"uploadForm\");\n    var formData = new FormData();\n    var file = e.target.files[0];\n    formData.append(\"file\", file);\n    esriRequest(\n      \"https://www.arcgis.com/sharing/rest/content/features/generate\",\n      {\n        query: myContent,\n        body: formData,\n        responseType: \"json\",\n        method: \"post\",\n      }\n    )\n      .then(\n        function (response) {\n          var layerName =\n            response.data.featureCollection.layers[0].layerDefinition.name;\n          this.addFileToMap(\n            response.data.featureCollection,\n            idObject,\n            layerName\n          );\n          this.uploadStatus = \"Agregado: \" + layerName;\n        }.bind(this)\n      )\n      .catch(\n        function (error) {\n          this.uploadStatus = \"Error: \" + error.message;\n        }.bind(this)\n      );\n  }\n\n  addFileToMap(features, idObject, layerName) {\n    var sourceGraphics = [];\n    var layers = features.layers.map(function (layer) {\n      var graphics = layer.featureSet.features.map(function (feature) {\n        var graph = Graphic.fromJSON(feature);\n        return graph;\n      });\n      sourceGraphics = sourceGraphics.concat(graphics);\n      var featureLayer = new FeatureLayer({\n        objectIdField: idObject,\n        source: graphics,\n        fields: layer.layerDefinition.fields.map(function (field) {\n          return Field.fromJSON(field);\n        }),\n      });\n      return featureLayer;\n    });\n    layers[0].title = layerName;\n    this.mapService.getViewMap().map.addMany(layers);\n    this.mapService\n      .getViewMap()\n      .goTo(sourceGraphics)\n      .catch(function (error) {\n        if (error.name != \"AbortError\") {\n          console.error(error);\n        }\n      });\n    this.mapService.getViewMap().popup.defaultPopupTemplateEnabled = true;\n  }\n}\n","<app-title-bar [title]='\"Importar Capa\"' [icon]=\"'library_add'\"></app-title-bar>\n<div name=\"content\" class=\"styleContent\">\n  <p style=\"text-align: center;\">\n    <b>SELECCIONA UN ARCHIVO COMPATIBLE:</b>\n  </p>\n  <ul>\n    <li>SHAPEFILE (COMPRIMIDO EN .ZIP)</li>\n    <li>GPX</li>\n    <li>GEO JSON</li>\n    <li>CSV</li>\n  </ul>\n  <form id=\"uploadForm\" class=\"uploadForm\" (change)=\"uploadFile($event)\">\n    <input type=\"file\" name=\"file\" id=\"inFile\" class=\"input-custom\">\n    <label for=\"inFile\" class=\"label-input\">\n      BUSCAR\n    </label>\n  </form>\n  <div id=\"status-file\" class=\"styleStatus\">\n    <p id=\"upload-status\" class=\"upload-status\">{{uploadStatus}}</p>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport BasemapGallery from \"@arcgis/core/widgets/BasemapGallery\";\nimport { MapService } from \"../../view/services/map.service\";\nimport Basemap from \"@arcgis/core/Basemap\";\n\n\n\n@Component({\n  selector: 'app-basemap-gallery',\n  templateUrl: './basemap-gallery.component.html',\n  styleUrls: ['./basemap-gallery.component.css']\n})\nexport class BasemapGalleryComponent implements OnInit {\n  basemapGallery: BasemapGallery;\n  constructor(public mapService: MapService) { }\n\n  ngOnInit(): void {\n    let basemapCCH = new Basemap({\n      portalItem: {\n        id: \"11dd85011fab42e18f656c43144396f2\"  //BaseMap Huila Imagenes Satelitales + Imagery Google\n      }\n    });\n    this.basemapGallery = new BasemapGallery({\n      view: this.mapService.getViewMap(),\n      container: 'divBasemapGallery'\n    });\n  }\n\n}\n","<app-title-bar [title]='\"Galeria de Mapas base\"' [icon]=\"'dataset'\"></app-title-bar>\n<div id=\"divBasemapGallery\" class=\"BasemapGallery\">\n</div>","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appDirectiveWidget]',\n})\nexport class WidgetDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MapService } from \"../../view/services/map.service\";\nimport Zoom from \"@arcgis/core/widgets/Zoom\";\nimport Locate from \"@arcgis/core/widgets/Locate\";\nimport Home from \"@arcgis/core/widgets/Home\";\nimport PictureMarkerSymbol from \"@arcgis/core/symbols/PictureMarkerSymbol\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport Compass from \"@arcgis/core/widgets/Compass\";\nimport * as reactiveUtils from \"@arcgis/core/core/reactiveUtils\";\nimport { HomeComponent } from 'src/app/home/components/home/home.component';\n\n@Component({\n  selector: 'app-home-bar',\n  templateUrl: './home-bar.component.html',\n  styleUrls: ['./home-bar.component.css']\n})\nexport class HomeBarComponent implements OnInit {\n  controlZoom: Zoom;\n  valorZoom: Number;\n  location: Locate;\n  home: Home;\n  compass: Compass;\n  compassRotation: number;\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer, public mapService: MapService, public homeComponent: HomeComponent) {\n    iconRegistry.addSvgIconInNamespace(\"homeBar\", \"compass\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/RealGISicon_compass.svg\"));\n    iconRegistry.addSvgIconInNamespace(\"homeBar\", \"locate\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/RealGISicon_locate.svg\"));\n    iconRegistry.addSvgIconInNamespace(\"homeBar\", \"home\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/RealGISicon_home.svg\"));\n    iconRegistry.addSvgIconInNamespace(\"homeBar\", \"left\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/RealGISicon_arrow_left.svg\"));\n    iconRegistry.addSvgIconInNamespace(\"homeBar\", \"rigth\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/RealGISicon_arrow_rigth.svg\"));\n    iconRegistry.addSvgIconInNamespace(\"homeBar\", \"zoomin\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/RealGISicon_add.svg\"));\n    iconRegistry.addSvgIconInNamespace(\"homeBar\", \"zoomout\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/RealGISicon_subtract.svg\"));\n  }\n\n  ngOnInit(): void {\n    this.watchNorth()\n\n    this.controlZoom = new Zoom({\n      view: this.mapService.getViewMap()\n    });\n    // this.valorZoom = this.mapService.getViewMap().zoom;\n    this.location = new Locate({\n      view: this.mapService.getViewMap(),\n      graphic: new Graphic({\n        symbol: new PictureMarkerSymbol({\n          url: \"./assets/img/SVG/RealGISicon_ubication_blue.svg\",\n          width: \"40px\",\n          height: \"40px\"\n        })\n      })\n    });\n    this.home = new Home({\n      view: this.mapService.getViewMap(),\n      viewpoint: this.mapService.getViewMap().viewpoint\n    });\n    this.compass = new Compass({\n      view: this.mapService.getViewMap()\n    });\n  }\n\n  zoomIn() {\n    this.controlZoom.zoomIn();\n  }\n\n  zoomOut() {\n    this.controlZoom.zoomOut();\n  }\n\n  changeZoom(value:number) {\n    this.mapService.getViewMap().zoom = value;\n  }\n\n  locate() {\n    this.location.locate();\n  }\n\n  goHome() {\n    this.home.go();\n  }\n\n  resetNorth() {\n    this.compass.reset()\n  }\n\n  watchNorth() {\n    const view = this.mapService.getViewMap()\n    reactiveUtils.watch(() => view.rotation, (rotation) => {\n      this.compassRotation = rotation\n    }\n    );\n  }\n\n}\n","<div id=\"homeBar\" class=\"styleBar\" #homeBar>\n  <!-- <button mat-icon-button disableRipple class=\"buttonBar\" (click)=\"resetNorth()\"\n    *ngIf=\"!homeComponent.activatedViewPanoramic\">\n    <mat-icon [ngStyle]=\"{'transform': 'rotate('+ compassRotation + 'deg)'}\">explore</mat-icon>\n  </button> -->\n\n  <button mat-icon-button class=\"buttonBar\" (click)=\"goHome()\">\n    <mat-icon>home</mat-icon>\n  </button>\n  <button mat-icon-button class=\"buttonBar\" (click)=\"locate()\">\n    <mat-icon>my_location</mat-icon>\n  </button>\n  <button mat-icon-button class=\"buttonBar\" (click)=\"zoomIn()\">\n    <mat-icon>add</mat-icon>\n  </button>\n  <!-- <div class=\"slidecontainer\">\n    <input type=\"range\" min=\"0\" max=\"23\" [value]=\"mapService.getViewMap().zoom\" class=\"rotated\" #ref\n      (input)=\"changeZoom(ref.value)\">\n  </div> -->\n  <button mat-icon-button class=\"buttonBar\" (click)=\"zoomOut()\">\n    <mat-icon>remove</mat-icon>\n  </button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MapService } from \"../../view/services/map.service\";\nimport LayerList from \"@arcgis/core/widgets/LayerList\";\nimport Slider from \"@arcgis/core/widgets/Slider\";\n\n@Component({\n  selector: 'app-layers-list',\n  templateUrl: './layers-list.component.html',\n  styleUrls: ['./layers-list.component.css']\n})\nexport class LayersListComponent implements OnInit {\n  layerList: LayerList;\n\n  constructor(public mapService: MapService) { }\n\n  ngOnInit(): void {\n    this.layerList = new LayerList({\n      view: this.mapService.getViewMap(),\n      container: 'divLayersList',\n      listItemCreatedFunction: (event) => {\n        const item = event.item;\n        const slider = new Slider({\n          min: 0,\n          max: 100,\n          values: [item.layer.opacity * 100],\n          precision: 0,\n        });\n\n        item.panel = {\n          content: [\"Opacidad\", slider],\n          title: \"Opacidad\",\n          className: \"esri-icon-environment-settings\"\n        };\n\n        slider.on(\"thumb-drag\", (event) => {\n          const { value } = event;\n          item.layer.opacity = value / 100;\n        });\n      }\n    });\n  }\n\n}\n","<app-title-bar [title]='\"Lista de Capas\"' [icon]=\"'layers'\"></app-title-bar>\n<div id=\"divLayersList\" class=\"LayersList\">\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport Measurement from \"@arcgis/core/widgets/Measurement\";\nimport { MapService } from \"../../view/services/map.service\";\n\n@Component({\n  selector: 'app-measurement',\n  templateUrl: './measurement.component.html',\n  styleUrls: ['./measurement.component.css']\n})\nexport class MeasurementComponent implements OnInit, OnDestroy {\n\n  measurementWidget = new Measurement();\n\n  constructor(protected mapService: MapService) { }\n  ngOnDestroy(): void {\n    this.measurementWidget.clear();\n  }\n\n  ngOnInit(): void {\n    this.measurementWidget.view = this.mapService.getViewMap();\n    this.measurementWidget.areaUnit = \"metric\";\n    this.measurementWidget.linearUnit = \"metric\";\n    this.measurementWidget.container = 'measurementWidget';\n  }\n\n  measureDistance() {\n    this.measurementWidget.activeTool = \"distance\";\n  }\n\n  measureArea() {\n    this.measurementWidget.activeTool = \"area\";\n  }\n}\n","<app-title-bar [title]='\"Medición\"' [icon]=\"'straighten'\"></app-title-bar>\n<div id=\"divMeasurement\">\n  <mat-action-list>\n    <mat-list-item (click)=\"measureArea()\">\n      <mat-icon>square_foot</mat-icon> Área\n    </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item mat-list-item (click)=\"measureDistance()\">\n      <mat-icon>straighten</mat-icon> Distancia\n    </mat-list-item>\n  </mat-action-list>\n\n  <div id=\"results\" class=\"results\">\n    <div class=\"titleResult\" *ngIf=\"this.measurementWidget.activeTool\">Resultado</div>\n    <div id=\"measurementWidget\" class=\"measurementWidget\"></div>\n    <!-- <div class=\"divClearButton\" *ngIf=\"this.measurementWidget.activeTool\">\n      <button mat-icon-button (click)=\"measurementWidget.clear()\" >\n        <mat-icon class=\"clear\">delete</mat-icon>\n      </button>\n    </div> -->\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport Map from \"@arcgis/core/Map\";\nimport MapView from '@arcgis/core/views/MapView';\nimport { MapService } from 'src/app/view/services/map.service';\nimport * as promiseUtils from \"@arcgis/core/core/promiseUtils\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport * as reactiveUtils from \"@arcgis/core/core/reactiveUtils\";\n\n@Component({\n  selector: 'app-overview-map',\n  templateUrl: './overview-map.component.html',\n  styleUrls: ['./overview-map.component.css']\n})\nexport class OverviewMapComponent implements OnInit {\n  view: any;\n  mainView: any;\n\n  constructor(\n    public mapService: MapService\n  ) { }\n\n  ngOnInit(): void {\n    this.createOveriew().then(() => {\n      this.setUp()\n    })\n  }\n\n  createOveriew() {\n    const overviewMap = new Map({\n      basemap: \"topo-vector\"\n    });\n\n    // esta es la vista del mapa overview\n    this.view = new MapView({\n      container: 'overviewDiv',\n      map: overviewMap,\n      constraints: {\n        rotationEnabled: false\n      }\n    });\n\n    // esta es la vista del mapa principal\n    this.mainView = this.mapService.getViewMap()\n\n    this.view.ui.components = [];\n\n    return this.view.when()\n  }\n\n  setUp() {\n    const extentDebouncer = promiseUtils.debounce(() => {\n      this.view.goTo({\n        center: this.mainView.center,\n        scale: this.mainView.scale * 2.2 *\n          Math.max(\n            this.mainView.width / this.view.width,\n            this.mainView.height / this.view.height\n          )\n      });\n      return this.view.when()\n    });\n\n    const extentGraphic = new Graphic({\n      geometry: null,\n      symbol: {\n        // @ts-ignore\n        type: \"simple-fill\",\n        color: [0, 0, 0, 0.5],\n        outline: null\n      }\n    });\n\n    this.view.graphics.add(extentGraphic);\n\n    reactiveUtils.watch(() => [this.mainView.stationary, this.mainView.extent], ([stationary, extent]) => {\n      if (stationary) {\n        extentDebouncer().then(() => {\n          extentGraphic.geometry = extent;\n        });\n      }\n    },\n      { initial: true }\n    )\n  }\n}\n","<app-title-bar [title]='\"Vista General\"' [icon]=\"'zoom_in_map'\"></app-title-bar>\n<div id=\"overviewDiv\" class=\"overview\">\n    <div id=\"extentDiv\"></div>","import { Component, OnInit } from '@angular/core';\nimport Print from \"@arcgis/core/widgets/Print\";\nimport { MapService } from 'src/app/view/services/map.service';\n\n@Component({\n  selector: 'app-print',\n  templateUrl: './print.component.html',\n  styleUrls: ['./print.component.css']\n})\nexport class PrintComponent implements OnInit {\n\n  constructor(\n   public  mapService: MapService\n  ) { }\n\n  ngOnInit(): void {\n    this.setUpPrint()\n  }\n\n  setUpPrint(){\n      new Print({\n      view: this.mapService.getViewMap(),\n      container: \"printContainer\",\n      // this is gisrealidad5 print service.\n      printServiceUrl:\n         \"https://utility.arcgisonline.com/arcgis/rest/services/Utilities/PrintingTools/GPServer/Export%20Web%20Map%20Task\"  //https://gisrealidad5.com/server/rest/services/Utilities/PrintingTools/GPServer/Export%20Web%20Map%20Task\n    });\n    \n  }\n}\n","<app-title-bar [title]='\"Exportar Salida Gráfica\"' [icon]=\"'print'\"></app-title-bar>\n<div id=\"printContainer\"></div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MapService } from \"../../view/services/map.service\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n  sqlForm = new FormGroup({\n    capa: new FormControl('', Validators.required) as any,\n    atributo: new FormControl('', Validators.required) as any,\n    condicion: new FormControl('', Validators.required) as any,\n    valor: new FormControl('', Validators.required) as any,\n  });\n\n  catastralForm = new FormGroup({\n    codigo_ant: new FormControl(''),\n    codigo: new FormControl(''),\n    matricula: new FormControl('')\n  });\n\n  viewCatastral = environment.modules.searchCatastral;\n  layers: any;\n  layerControl = new FormControl('');\n  selectForm = 0;\n  progressBar = false;\n  searchResults: any[] = [];\n  highlightItem: any;\n  validCatastral = false;\n  showResultsSection: boolean = false;\n  matriculaActiva: boolean = false;\n\n  constructor(protected mapService: MapService) { }\n\n  ngOnInit(): void {\n    this.layers = this.mapService.getViewMap().map.allLayers;\n  }\n\n  ngOnDestroy() {\n    this.clear();\n  }\n  // this searches for features based on user inputs\n  searchFeatures() {\n    this.searchResults = [];\n    this.progressBar = true;\n    let consulta = \"\";\n\n    switch (this.selectForm) {\n      case 0:\n\n        consulta = `${Object.keys(this.catastralForm.value)[0]} = '${Object.values(this.catastralForm.value)[0]}'`;\n\n        this.layers.forEach(layer => {\n\n          if (layer.title.includes(\"Terreno\") || layer.title.includes(\"Predio\")) {\n            layer.queryFeatures({\n              returnGeometry: true,\n              outFields: [\"*\"],\n              where: consulta,\n              start: 0,\n              num: 1000\n            }).then((response) => {\n              if (response.features.length != 0) {\n                this.searchResults = response.features;\n              }\n              this.progressBar = false;\n            })\n\n          }\n\n        });\n        break\n\n      case 1:\n\n        const { atributo } = this.sqlForm.value;\n        const searchValue = this.sqlForm.value.valor.toLowerCase();\n        const fieldName = atributo.type === 'string'\n          ? `Lower(${atributo.name}) ${this.sqlForm.value.condicion}`\n          : `${atributo.name} ${this.sqlForm.value.condicion}`;\n\n        consulta = searchValue && fieldName\n          ? `${fieldName} ${this.sqlForm.value.condicion == 'like' ? `'%${searchValue}%'` : `'${searchValue}'`}`\n          : '';\n\n        this.sqlForm.value.capa.queryFeatures({\n          returnGeometry: true,\n          outFields: [\"*\"],\n          where: consulta || \"1=1\",\n          start: 0,\n          num: 1000\n        }).then((response) => {\n          this.progressBar = false;\n          if (response.features.length) {\n            this.searchResults = response.features;\n          }\n        });\n\n        break\n    }\n\n    this.showResultsSection = true;\n  }\n  onKeyDown(event: KeyboardEvent) {\n    if (!/^\\d$/.test(event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  inputForm(event) {\n    if (event.target.id == 'mat-input-3') {\n      this.matriculaActiva = true\n  \n    \n    }\n    if (event.target.value != \"\") {\n      this.validCatastral = true;\n      Object.keys(this.catastralForm.controls).forEach(element => {\n        if (element != event.target.attributes[3].nodeValue) {\n          this.catastralForm.controls[element].disable();\n        }\n      });\n    } else {\n      this.matriculaActiva = false;\n      this.validCatastral = false;\n      Object.keys(this.catastralForm.controls).forEach(element => {\n        this.catastralForm.controls[element].enable();\n      });\n    }\n  }\n\n  viewAttributesFeature(feature) {\n    if (this.mapService.getViewMap().popup.visible) {\n      this.mapService.getViewMap().popup.visible = false;\n    }\n    this.mapService.getViewMap().popup.dockEnabled = true;\n    this.mapService.getViewMap().popup.spinnerEnabled = true;\n    this.mapService.getViewMap().popup.collapseEnabled = false;\n    this.mapService.getViewMap().popup.highlightEnabled = false;\n    this.mapService.getViewMap().popup.dockOptions = {\n      buttonEnabled: false,\n      position: 'bottom-center'\n    };\n    this.mapService.getViewMap().popup.open({\n      features: [feature]\n    });\n  }\n  // this zooms to the found feature\n  zoomFeature(feature) {\n    const viewMap = this.mapService.getViewMap();\n    const popup = viewMap.popup;\n    const layer = feature.layer || feature.sourceLayer.layer;\n\n    viewMap.goTo(feature);\n\n    popup.visible ? popup.close() : null\n    viewMap.whenLayerView(layer).then(layerView => {\n      this.highlightItem ? this.highlightItem.remove() : null\n      this.highlightItem = layerView.highlight(feature)\n    });\n  }\n\n  clear() {\n    this.searchResults = [];\n    this.showResultsSection = false;\n    this.progressBar = false;\n    this.validCatastral = false;\n    this.sqlForm.setValue({ capa: \"\", atributo: \"\", condicion: \"\", valor: \"\" });\n    this.catastralForm.setValue({ codigo_ant: \"\", codigo: \"\", matricula: \"\" });\n    Object.keys(this.catastralForm.controls).forEach(element => {\n      this.catastralForm.controls[element].enable();\n    });\n    if (this.highlightItem) {\n      this.highlightItem.remove()\n    }\n\n  }\n\n  removeFeature(feature) {\n    this.searchResults = this.searchResults.filter(item => item !== feature)\n  }\n\n  //this filters shown layers so hotspot is not visible \n  filterLayers(layers) {\n    let filteredLayers = layers.items.filter(item => {\n      return !item.title.toLowerCase().includes(\"hotspot\")\n    })\n    return filteredLayers\n  }\n\n}\n","<app-title-bar [title]='\"Busqueda\"' [icon]=\"'assets/img/SVG/searchIcon.svg'\"></app-title-bar>\n<div id=\"divSearch\" class=\"search\">\n  <mat-tab-group [(selectedIndex)]=\"selectForm\">\n    <mat-tab label=\"Catastral\" *ngIf=\"viewCatastral\">\n      <form class=\"formContainer\" [formGroup]=\"catastralForm\" (input)=\"inputForm($event)\">\n        <mat-form-field>\n          <mat-label>Cédula Catastral Anterior</mat-label>\n          <input matInput placeholder=\"Cédula Catastral Anterior\" formControlName=\"codigo_ant\" #input (keypress)=\"onKeyDown($event)\">\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Código Predial Nacional</mat-label>\n          <input matInput placeholder=\"Código Predial Nacional\" formControlName=\"codigo\" #input (keypress)=\"onKeyDown($event)\">\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Matrícula Inmobiliaria</mat-label>\n          <input matInput placeholder=\"Matrícula Inmobiliaria\" formControlName=\"matricula\" #input (keypress)=\"onKeyDown($event)\">\n          <mat-hint *ngIf=\"matriculaActiva\">Sin circulo registral.</mat-hint>\n        </mat-form-field>\n      </form>\n    </mat-tab>\n    <mat-tab label=\"Avanzada \">\n      <form class=\"formContainer\" [formGroup]=\"sqlForm\">\n        <mat-form-field>\n          <mat-label>Capa</mat-label>\n          <mat-select formControlName=\"capa\">\n            <mat-optgroup *ngFor=\"let group of filterLayers(layers)\" [label]=\"group.title\">\n              <mat-option *ngFor=\"let layer of group.layers\" [value]=\"layer\">\n                {{layer.title}}\n              </mat-option>\n            </mat-optgroup>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Atributo</mat-label>\n          <mat-select formControlName=\"atributo\">\n            <mat-option *ngFor=\"let field of sqlForm.value.capa.fields\" [value]=\"field\">\n              {{field.alias}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Condición</mat-label>\n          <mat-select formControlName=\"condicion\">\n            <mat-option value=\">=\">Mayor o igual</mat-option>\n            <mat-option value=\">\">Mayor que</mat-option>\n            <mat-option value=\"<\">Menor que</mat-option>\n            <mat-option value=\"<=\">Menor o igual</mat-option>\n            <mat-option value=\"=\">Igual a</mat-option>\n            <mat-option value=\"<>\">Diferente</mat-option>\n            <mat-option value=\"like\">Contiene</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Valor</mat-label>\n          <input matInput placeholder=\"Valor\" formControlName=\"valor\">\n        </mat-form-field>\n      </form>\n    </mat-tab>\n  </mat-tab-group>\n  <div class=\"actionsButtons\">\n    <button mat-raised-button class=\"buttonAction\" (click)=\"searchFeatures()\" type=\"submit\"\n      [disabled]=\"!(this.sqlForm.valid || this.validCatastral)\">Buscar</button>\n    <button mat-raised-button class=\"buttonAction\" (click)=\"clear()\">Limpiar</button>\n  </div>\n</div>\n\n<div *ngIf=\"showResultsSection\">\n  <div class=\"titleResult\">\n    <span id=\"titleResultado\">Resultados: </span>\n      <b *ngIf=\"searchResults.length === 0\"> {{searchResults.length}} </b>\n      <b *ngIf=\"searchResults.length > 0 && searchResults.length <= 1000\"> {{searchResults.length}} </b>\n      <b *ngIf=\"searchResults.length > 1000\"> (>1000) </b>\n  </div>\n  <div id=\"results\" class=\"listResults\">\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"progressBar\"></mat-progress-bar>\n    <mat-list #results style=\"max-height: 300px; overflow-y: auto;\">\n      <mat-list-item *ngFor=\"let result of searchResults\" class=\"itemResult\">\n        {{result.layer.title}}.{{result.uid}}\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n          <mat-icon>more_horiz</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item (click)=\"viewAttributesFeature(result)\">\n            <mat-icon>table_rows</mat-icon>\n            <span>Ver Atributos</span>\n          </button>\n          <button mat-menu-item (click)=\"zoomFeature(result)\">\n            <mat-icon>zoom_in_map</mat-icon>\n            <span>Acercar</span>\n          </button>\n          <button mat-menu-item (click)=\"removeFeature(result)\">\n            <mat-icon>remove</mat-icon>\n            <span>Limpiar Selección</span>\n          </button>\n        </mat-menu>\n      </mat-list-item>\n    </mat-list>\n    <span class=\"noDataMessage\" *ngIf=\"searchResults.length === 0\">No se encontraron resultados con los parametros\n      dados</span>\n  </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport SketchViewModel from \"@arcgis/core/widgets/Sketch/SketchViewModel\";\nimport { MapService } from \"../../view/services/map.service\";\nimport GraphicsLayer from \"@arcgis/core/layers/GraphicsLayer\";\nimport * as geometryEngineAsync from \"@arcgis/core/geometry/geometryEngineAsync\";\nimport { saveAs } from 'file-saver';\nimport { FeatureCollection, Feature, Geometry } from 'geojson';\nimport JSZip from 'jszip';\nimport { environment } from \"../../../environments/environment\";\n\n\ninterface CustomFeatureCollection extends FeatureCollection {\n  name: string;\n}\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.css']\n})\nexport class SelectComponent implements OnInit, OnDestroy {\n\n  selectForm = new FormGroup({\n    selectionForm: new FormControl('') as any\n  });\n\n  sketchGraphic = new GraphicsLayer();\n  resultSelect: any[] = [];\n  clickButton: boolean = false;\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer, public mapService: MapService) {\n    iconRegistry.addSvgIcon(\"circle\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/selectbyCircle.svg\"));\n    iconRegistry.addSvgIcon(\"rectangle\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/selectbyRectangle.svg\"));\n    iconRegistry.addSvgIcon(\"polygon\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/selectbyPolygon.svg\"));\n    iconRegistry.addSvgIcon(\"point\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/selectbyPoint.svg\"));\n    iconRegistry.addSvgIcon(\"polyline\", sanitizer.bypassSecurityTrustResourceUrl(\"assets/img/SVG/selectbyLine.svg\"));\n  }\n\n  ngOnDestroy(): void {\n    this.clearResults();\n  }\n\n  ngOnInit(): void {}\n  \n\n  startSelect() {\n    const sketch = new SketchViewModel({\n      view: this.mapService.getViewMap(),\n      layer: this.sketchGraphic,\n    });\n    sketch.create(this.selectForm.value.selectionForm);\n    sketch.on(\"create\", async (event) => {\n      if (event.state === \"complete\") {\n        const geometries = this.sketchGraphic.graphics.map(function (graphic) {\n          return graphic.geometry;\n        });\n        const queryGeometry = await geometryEngineAsync.union(\n          geometries.toArray()\n        );\n        this.selectFeatures(queryGeometry);\n        this.sketchGraphic.remove(event.graphic);\n      }\n    });\n  }\n\n  selectFeatures(geometry) {\n    let layerGroup;\n    this.mapService.getViewMap().layerViews.forEach((layer) => {\n      if (layer.layer.type == \"group\") {\n        layerGroup = layer as any;\n      }\n      layerGroup.layerViews.items.forEach(layerView => {\n        if (layerView.layer.type == \"feature\") {\n          layerView.layer.outFields = [\"*\"];\n          layerView.layer.popupTemplate.overwriteActions = true;\n          layerView.queryFeatures({\n            geometry: geometry,\n            returnGeometry: true,\n            returnQueryGeometry: false,\n            outFields: [\"*\"],\n          })\n            .then((result) => {\n              if (result.features.length > 0) {\n                result.highlight = layerView.highlight(result.features);\n                result.check = true;\n                result.layerView = layerView;\n                this.resultSelect.push(result);\n              }\n            });\n        }\n      });\n    });\n  }\n\n  changeCheck(group) {\n    this.clickButton = true;\n    if (group.check) {\n      group.highlight.remove();\n    } else {\n      group.layerView.highlight(group.features);\n    }\n    group.check = !group.check;\n\n  }\n\n  viewAttributesFeature(feature) {\n    if (this.mapService.getViewMap().popup.visible) {\n      this.mapService.getViewMap().popup.visible = false;\n    }\n    this.mapService.getViewMap().popup.dockEnabled = true;\n    this.mapService.getViewMap().popup.spinnerEnabled = true;\n    this.mapService.getViewMap().popup.collapseEnabled = false;\n    this.mapService.getViewMap().popup.highlightEnabled = false;\n    this.mapService.getViewMap().popup.dockOptions = {\n      buttonEnabled: false,\n      position: 'bottom-center'\n    };\n    this.mapService.getViewMap().popup.open({\n      features: [feature]\n    });\n  }\n\n  download = environment.modules.allowdownload;\n\n  downloadGeoJSON() {\n    const zip = new JSZip();\n    const layerNames = this.getUniqueLayerNames();\n  \n    layerNames.forEach(layerName => {\n      const fileName = layerName + '.geojson';\n      const featureCollection = this.collectSelectedFeaturesAsFeatureCollection(fileName, layerName);\n      const geoJSONData = JSON.stringify(featureCollection);\n      zip.file(fileName, geoJSONData);\n    });\n  \n    zip.generateAsync({type:\"blob\"})\n      .then(function(content) {\n        saveAs(content, \"layers_WGS84.zip\");\n      });\n  }\n  \n  getUniqueLayerNames(): string[] {\n    const layerNames = [];\n    this.resultSelect.forEach(group => {\n      if (layerNames.indexOf(group.layerView.layer.title) === -1) {\n        layerNames.push(group.layerView.layer.title);\n      }\n    });\n    return layerNames;\n  }\n  \n  collectSelectedFeaturesAsFeatureCollection(fileName: string, layerName: string) {\n    const selectedFeatures = [];\n    this.resultSelect.forEach(group => {\n      if (group.layerView.layer.title === layerName) {\n        group.features.forEach(feature => {\n          let coordinates = [];\n          const geometryType = feature.geometry.type.charAt(0).toUpperCase() + feature.geometry.type.slice(1); \n  \n          if (geometryType === 'Point') {\n            coordinates = [feature.geometry.x, feature.geometry.y]; \n          } else if (geometryType === 'Polygon') {\n            const rings = feature.geometry.rings.map(ring => {\n              ring.push(ring[0]);\n              return ring;\n            });\n            coordinates = rings;\n          } else if (geometryType === 'LineString') {\n            coordinates = [feature.geometry.paths.map(path => {\n              return path.map(point => [point[0], point[1]]);\n            })];\n          }\n  \n          const properties = feature.attributes; \n  \n          const selectedFeature = {\n            type: 'Feature',\n            geometry: {\n              type: geometryType, \n              coordinates: coordinates\n            },\n            properties: properties\n          };\n          selectedFeatures.push(selectedFeature);\n        });\n      }\n    });\n  \n    const featureCollection: CustomFeatureCollection = {\n      type: 'FeatureCollection',\n      features: selectedFeatures,\n      name: fileName \n    };\n  \n    return featureCollection;\n  }\n  \n\n  removeFeature(feature, group) {\n    if (group.features.length === 1) {\n      this.removeGroup(group)\n    } else {\n      group.features = group.features.filter(item => item !== feature);\n      group.highlight.remove();\n      group.highlight = group.layerView.highlight(group.features);\n    }\n\n  }\n\n  removeGroup(group) {\n    group.highlight.remove();\n    this.resultSelect = this.resultSelect.filter(item => item !== group)\n  }\n\n  clearResults() {\n    this.resultSelect.forEach(group => {\n      group.highlight.remove();\n    });\n    this.resultSelect = [];\n  }\n\n}\n","<app-title-bar [title]='\"Selección\"' [icon]=\"'assets/img/SVG/selectIcon.svg'\"></app-title-bar>\n<div id=\"divSelect\" class=\"select\">\n  <div id=\"selection\" class=\"selection\">\n    <form [formGroup]=\"selectForm\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Seleccionar</mat-label>\n        <mat-select placeholder=\"Seleccionar\" formControlName=\"selectionForm\" appearance=\"fill\"\n          (selectionChange)=\"startSelect()\">\n          <mat-select-trigger>\n            Realiza la selección\n          </mat-select-trigger>\n          <mat-option value=\"point\">\n            <mat-icon svgIcon=\"point\"></mat-icon>Seleccionar por punto\n          </mat-option>\n          <mat-option value=\"rectangle\">\n            <mat-icon svgIcon=\"rectangle\"></mat-icon>Seleccionar por rectángulo\n          </mat-option>\n          <mat-option value=\"polygon\">\n            <mat-icon svgIcon=\"polygon\"></mat-icon>Seleccionar por polígono\n          </mat-option>\n          <mat-option value=\"circle\">\n            <mat-icon svgIcon=\"circle\"></mat-icon>Seleccionar por círculo\n          </mat-option>\n          <mat-option value=\"polyline\">\n            <mat-icon svgIcon=\"polyline\"></mat-icon>Seleccionar por línea\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </form>\n    <button mat-raised-button class=\"buttonAction\" type=\"submit\" (click)=\"clearResults()\">Limpiar</button>\n  </div>\n</div>\n<div id=\"results\" class=\"listResults\" *ngIf=\"resultSelect.length>0\">\n  <div id=\"results\" class=\"results\">\n    <div class=\" titleResult\">Resultados</div>\n  </div>\n  <mat-accordion>\n    <mat-expansion-panel *ngFor=\"let group of resultSelect\" [disabled]=\"clickButton\" (click)=\"clickButton=false\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <mat-checkbox color=\"primary\" [checked]=\"group.check\" (click)=\"$event.stopPropagation(); changeCheck(group)\"></mat-checkbox>\n          &nbsp;{{group.features[0].layer.title}}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{group.features.length}}\n        </mat-panel-description>\n        <button mat-icon-button (click)=\"clickButton=true\" [matMenuTriggerFor]=\"menuGroup\">\n          <mat-icon>more_horiz</mat-icon>\n        </button>\n        <mat-menu #menuGroup=\"matMenu\">\n          <button mat-menu-item (click)=\"mapService.getViewMap().goTo(group.features)\">\n            <mat-icon>zoom_in</mat-icon>\n            <span>Acercar</span>\n          </button>\n          <button mat-menu-item (click)=\"removeGroup(group)\">\n            <mat-icon>remove</mat-icon>\n            <span>Limpiar Selección</span>\n          </button>\n        </mat-menu>\n      </mat-expansion-panel-header>\n      <mat-list #results>\n        <mat-list-item *ngFor=\"let result of group.features\" class=\"itemResult\">\n          {{result.layer.title}}.{{result.uid}}\n          <button mat-icon-button [matMenuTriggerFor]=\"menuItem\">\n            <mat-icon>more_horiz</mat-icon>\n          </button>\n          <mat-menu #menuItem=\"matMenu\">\n            <button mat-menu-item (click)=\"viewAttributesFeature(result)\">\n              <mat-icon>table_rows</mat-icon>\n              <span>Ver Atributos</span>\n            </button>\n            <button mat-menu-item (click)=\"mapService.getViewMap().goTo(result)\">\n              <mat-icon>zoom_in</mat-icon>\n              <span>Acercar</span>\n            </button>\n            <button mat-menu-item (click)=\"removeFeature(result, group)\">\n              <mat-icon>remove</mat-icon>\n              <span>Limpiar Selección</span>\n            </button>\n          </mat-menu>\n        </mat-list-item>\n      </mat-list>\n    </mat-expansion-panel>\n  </mat-accordion>\n  <div class=\"contenedor\" *ngIf=\"download\">\n    <button mat-icon-button aria-label=\"Download selected element\" matTooltip=\"Descargar\"  (click)=\"downloadGeoJSON()\" title=\"Descargar\">\n      <mat-icon class=\"custom-icon\">download</mat-icon>\n    </button>\n  </div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-title-bar',\n  templateUrl: './title-bar.component.html',\n  styleUrls: ['./title-bar.component.css']\n})\nexport class TitleBarComponent implements OnInit {\n  @Input() title: string;\n  @Input() icon: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<any>,) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n}\n","<div cdkDrag cdkDragRootElement=\".cdk-overlay-pane\" cdkDragBoundary=\".cdk-overlay-container\" cdkDragHandle class=\"bar\"\n  style=\"background-color: #d7e3ff;color: black;\">\n  <mat-icon class=\"barIcon\">\n    {{icon}} </mat-icon>\n  {{title}}\n  <button mat-icon-button matTooltip=\"Cerrar\" class=\"closeButton\" (click)=\"closeDialog()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeBarComponent } from './home-bar/home-bar.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { WidgetDirective } from './directiva/directive-widget.directive';\nimport { BasemapGalleryComponent } from './basemap-gallery/basemap-gallery.component';\nimport { TitleBarComponent } from './title-bar/title-bar.component';\nimport { LayersListComponent } from './layers-list/layers-list.component';\nimport { SearchComponent } from './search/search.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { SelectComponent } from './select/select.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MeasurementComponent } from './measurement/measurement.component';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { AddLayerComponent } from './add-layer/add-layer.component';\nimport { OverviewMapComponent } from './overview-map/overview-map.component';\nimport { PrintComponent } from './print/print.component';\n\n@NgModule({\n  declarations: [\n    HomeBarComponent,\n    WidgetDirective,\n    BasemapGalleryComponent,\n    TitleBarComponent,\n    LayersListComponent,\n    SearchComponent,\n    SelectComponent,\n    MeasurementComponent,\n    AddLayerComponent,\n    OverviewMapComponent,\n    PrintComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatBottomSheetModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSliderModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    DragDropModule,\n    MatProgressBarModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatMenuModule,\n    MatExpansionModule\n  ],\n  exports: [\n    HomeBarComponent\n  ]\n})\nexport class WidgetsModule { }\n","export const environment = {\n  production: true,\n  apiUrl: \"\", //http://10.0.12.10:8080/REAL_GIS_DESJava/rest\n  project: \"Zipaquirá\",\n  login: false,\n  version: \"3.3\", //Migrated to angular v15\n  portalUrl: \"https://gisrealidad5.com/portal/\",\n  mapId: \"b59ec7c5772240b4abcaae57d072a301\",\n  mapIdPot: \"ab41fdd5f9184f3fa251c49b456c287f\", \n  mapIdfact: \"a82bb4fb3c6f455e8893cbba05f4dc5b\",\n  apiKeyArcGIS: null,\n  imagesDate: \"Diciembre 2023\", // use this format: 01 enero 1990\n  dashboardUrl:\"https://gisrealidad5.com/portal/apps/dashboards/a82bb4fb3c6f455e8893cbba05f4dc5b\",\n  documentationUrl:\"https://drive.google.com/file/d/1a1nHHbRTxpW2emJ2EqGXbiKfciuRICR7/view?usp=sharing\",\n  modules: {\n    view360: true,\n    baseMapGallery: true,\n    layerList: true,\n    search: true,\n    searchCatastral: true,\n    select: true,\n    measurement: true,\n    tableAttribute: false, // widget en planeación\n    addLayer: true,\n    overviewMap: true,\n    print: true,\n    dashboard: true,\n    editor: false,\n    mapPot: false,\n    allowdownload: true\n  }\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 41993;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["AppComponent","constructor","selectors","decls","vars","template","i0","BrowserModule","RouterModule","HomeModule","HomeComponent","ReactiveFormsModule","MatSnackBarModule","BrowserAnimationsModule","routes","path","component","AppModule","bootstrap","imports","forRoot","declarations","exports","MAT_DIALOG_DATA","ConfirmDialogComponent","dialogRef","data","ngOnInit","consts","MatPaginator","MatTableDataSource","FilterComponent","mapService","filterService","fieldFormService","panoramicService","formId","getCurrentFormId","getFieldForm","formulario_id","subscribe","fields","dataSource","paginator","cargarEscena","name","x","y","xmlscene","substring","loadScene","getPanoramic","call","close","limpiar","resultados","length","campos","resultadosCampos","resultadosActivos","DATOS_RESULTADOS","table","renderRows","displayedColumns","search","loading","obtenerCampos","tipoBuscar","getActivos","data1","activos","buscarCampos","campoId","valorBuscar","valorBuscar2","getCampos","id","tipo","valor1","valor2","forEach","element","push","toUpperCase","includes","Number","alert","getCamposresultados","getCamposResultado","data2","getActivosresultados","getActivosResultados","data3","generarTabla","campo1","campo2","latitud","longitud","scene","sceneX","sceneY","ids","i","toFixed","Math","min","apply","defCampo1","defCampo2","infoResultado","viewQuery","FooterComponent","homeComponent","EventEmitter","environment","BasemapGalleryComponent","LayersListComponent","SearchComponent","SelectComponent","MeasurementComponent","AddLayerComponent","OverviewMapComponent","PrintComponent","Legend","Editor","HeaderComponent","loginService","dialog","topRight","top","right","bottomRight","bottom","topLeft","left","bottomLeft","middleLeft","toggleSidenav","sidenavOpen","emit","changeCreateActive","getCreateActive","setCreateActive","openDialog","position","document","getElementById","open","autoFocus","hasBackdrop","getDialogById","toggleLegend","view","getViewMap","legend","container","createElement","legendView","ui","remove","add","openEditor","editor","editorView","outputs","MatDialogConfig","ModalWindowComponent","LoginComponent","SecurityContext","domSanitizer","login","version","project","openLogin","safeUrl","bypassSecurityTrustResourceUrl","sanitize","URL","dashboardUrl","openSidenav","sidenav","toggle","dialogConfig","disableClose","backdropClass","openSettingsLayer","dialogConfig2","changeViewMap","activatedViewMap","activatedViewPanoramic","removeMarkers","changeViewMixed","onDragEnd","event","splitAreaSizeMap","sizes","splitAreaSizePanoramic","loginservice","_snackBar","addPanelClass","limpiarLogin","user","pass","openSnackBar","message","duration","horizontalPosition","verticalPosition","validacion","usuario_realgisUsuario","usuario_realgisClave","status","Estado","usuario_realgisNombre1","lastname","usuario_realgisApellido1","usuarioId","usuario_realgisId","userId","rol","Rol_Nombre","funciones","Funciones","functions","split","userName","userLastname","userRol","settings","layers","createActive","views","zoom","mLine","mPol","ctx","ModalAddfieldComponent","objectTypesService","getObjectTypes","fieldTypes","createFieldForm","fieldFormDetails","tipo_objeto_id","fieldType","formulario_campo_nombre","fieldName","formulario_campo_requerido","fieldRequired","createOptionsField","fieldSelect","console","log","campo_id","options","fieldOptions","index","option","formulario_campo_id","formulario_campo_opcion_valor","formulario_campo_opcion_orden","createOption","closeMe","ModalCategoryComponent","categoryService","action_type","categoria_capa_id","categoria_capa_nombre","hash","gx_md5_hash","createCategory","categoryDetails","categoria_capa_fecha_creacion","date","editCategory","updateCategory","deleteCategory","type","ModalFormUserComponent","layerService","formService","userService","getFormsUser","getForms","idUser","formsUser","key","Object","prototype","hasOwnProperty","formsAdd","element2","find","formulario_Id","selectForm","form_user","formulario_usuario_estado","assignFormUser","ModalFormsComponent","getLayers","createForm","formDetails","formulario_nombre","formulario_descripcion","description","capa_id","layer","formulario_estado","ModalLayerComponent","value","getCategories","categories","capa_nombre","category","geometry","geometria_capa_id","capa_nombre_descripcion","createLayer","layerDetails","capa_nombre_estado","editLayer","updateLayer","ModalNewUserComponent","edit","getUser","nombre1","nombre2","apellido1","apellido2","tipoDoc","numDoc","email","disabled","createUser","usuario_realgisTipo","usuario_realgisDoc","usuario_realgisNombre2","usuario_realgisApellido2","usuario_realgisEstado","usuario_realgisCorreo","usuario_realgisUsuarioCreacion","usuario_realgisRolIni","createNewUser","editUser","ModalRemoveComponent","activeService","lat","lng","formCapId","camposActivo","getActive","campoN","nombre","valor","CAMPOS_ACTIVO","sort","a","b","generateTable","convertToDMS","coordinate","absolute","abs","degrees","floor","minutesNotTruncated","minutes","seconds","updateActive","activeDetails","formulario_captura_nombre","deleteActive","deleteHotspot","AdmonActiveComponent","usersService","categoriesAdd","layersAdd","getUsers","changeTab","indexTab","usersAdd","afterClosed","response","getLayer","deleteLayer","getCategory","editForm","deleteForm","openCreateUser","result","openEditUser","disableUser","username","confirmAction","message2","changeActuallyCategoryLayer","form","setCurrentCategory","setCurrentLayer","setCurrentForm","setCurrentFormId","ModalWorkspaceComponent","getuserId","getUserRol","dataForms","formsAsignados","getForm","dataForm","dataLayer","dataCategory","addActives","closeAll","ModalComponent","posX","posY","formcapId","valuesCampo","getFields","getCurrentDate","now","Date","year","getFullYear","month","getMonth","slice","day","getDate","currentDate","dataField","getTypes","index2","typeconvert","getOptionsField","getOptions","formulario_captura_scene","formulario_captura_latitud","formulario_captura_longitud","formulario_captura_x","formulario_captura_y","formulario_captura_altitud","formulario_captura_estado","formulario_captura_fecha","createCapture","capture","formulario_captura_id","formulario_captura_campo_valor","new_field","removeOther","others","splice","addOther","WebMap","SidebarComponent","documentationUrl","sidenavView","openUserManual","window","reload","location","displayInitial360Message","currentScene","panelClass","toggle360View","viewDashboard","activatedViewDashboard","viewMapPot","webMapActual","map","webMapIni","portalItem","projectEnvironment","mapId","webMapPot","mapIdPot","potActivated","viewMapFact","webMapFact","mapIdfact","facActivated","CommonModule","FormsModule","MatIconModule","MatButtonModule","MaterialModule","ViewModule","MatTableModule","MatPaginatorModule","MatDatepickerModule","MatNativeDateModule","MatSlideToggleModule","MatProgressBarModule","MatTreeModule","MatTooltipModule","MatCheckboxModule","MatTabsModule","AngularSplitModule","ScrollingModule","HttpHeaders","throwError","retry","catchError","CategoryService","http","apiUrl","headers","get","apiURL","pipe","handleError","post","JSON","stringify","httpOptions","put","delete","error","errorMessage","ErrorEvent","factory","providedIn","FilterService","FieldFormService","getFieldForms","fieldForm","updateFieldForm","deleteFieldForm","FormService","updateForm","ObjectTypesService","getObjectType","createObjectType","objectType","updateObjectType","deleteObjectType","LayerService","LoginService","UsersService","MatButtonToggleModule","MatCardModule","MatDialogModule","MatExpansionModule","MatFormFieldModule","MatInputModule","MatListModule","MatMenuModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatToolbarModule","MapView","Map","ScaleBar","HomeBarComponent","WidgetDirective","GeoJSONLayer","MapViewComponent","viewContainer","portalUrl","modules","view360","apiKeyArcGIS","chargeMap","then","addWidgets","hotSpotLayer","allLayers","title","toLowerCase","listMode","ngOnDestroy","innerHTML","mapViewEl","nativeElement","upllayer","url","visible","basemap","viewMap","center","setViewMap","when","unit","appDirectiveWidget","elementDom","viewContainerRef","createComponent","popup","dockEnabled","openWorkspace","openFilter","closeOnNavigation","PanoramicViewComponent","embedpano","swf","xml","target","html5","mobilescale","passQueryParameters","onready","panoramicReady","panoramic","rotation","constraints","rotationEnabled","setPanoramic","addMarkersLayer","set","imagesDate","ActiveService","getAllActives","active","getActivesFilter","filters","Graphic","Collection","Point","SimpleRenderer","FeatureLayer","reactiveUtils","MapService","mapView","activeScene","krpano","setActiveMarker","query","createQuery","where","queryFeatures","newScene","activeMarker","features","getHorizontalDirection","goTo","bind","drawMarker","feature","hlookat","graphics","removeAll","symbol","width","height","angle","directionGraphic","lastHlookAt","viewChange","outFields","whenLayerView","layerView","queryExtent","extent","stationary","radius","renderer","size","on","opts","include","hitTest","results","showPano","graphic","sceneXml","attributes","xml_origen","sceneName","currentFormId","activeSymbol","color","style","outline","filter","activesSource","entries","marker","latitude","longitude","activesLayer","source","objectIdField","geometryType","popupEnabled","currentCategory","currentLayer","currentForm","getCurrentCategory","getCurrentLayer","getCurrentForm","PanoramicService","scenename","addActive","uniqname","vlookat","fov","nameActive","addPoints","val","MatGridListModule","HttpClientModule","WidgetsModule","esriRequest","Field","uploadFile","e","fileName","replace","uploadStatus","filetype","idObject","params","targetSR","spatialReference","maxRecordCount","enforceInputFileSizeLimit","enforceOutputJsonSizeLimit","generalize","maxAllowableOffset","reducePrecision","numberOfDigitsAfterDecimal","myContent","publishParameters","f","formData","FormData","file","files","append","body","responseType","method","layerName","featureCollection","layerDefinition","addFileToMap","catch","sourceGraphics","featureSet","graph","fromJSON","concat","featureLayer","field","addMany","defaultPopupTemplateEnabled","BasemapGallery","Basemap","basemapCCH","basemapGallery","Zoom","Locate","Home","PictureMarkerSymbol","Compass","iconRegistry","sanitizer","addSvgIconInNamespace","watchNorth","controlZoom","home","viewpoint","compass","zoomIn","zoomOut","changeZoom","locate","goHome","go","resetNorth","reset","watch","compassRotation","LayerList","Slider","layerList","listItemCreatedFunction","item","slider","max","values","opacity","precision","panel","content","className","Measurement","measurementWidget","clear","areaUnit","linearUnit","measureDistance","activeTool","measureArea","promiseUtils","createOveriew","setUp","overviewMap","mainView","components","extentDebouncer","debounce","scale","extentGraphic","initial","Print","setUpPrint","printServiceUrl","FormGroup","FormControl","Validators","capa","required","atributo","condicion","codigo_ant","codigo","matricula","searchCatastral","searchFeatures","searchResults","progressBar","consulta","keys","catastralForm","returnGeometry","start","num","sqlForm","searchValue","showResultsSection","onKeyDown","test","preventDefault","inputForm","matriculaActiva","validCatastral","controls","nodeValue","disable","enable","viewAttributesFeature","spinnerEnabled","collapseEnabled","highlightEnabled","dockOptions","buttonEnabled","zoomFeature","sourceLayer","highlightItem","highlight","setValue","removeFeature","filterLayers","filteredLayers","items","SketchViewModel","GraphicsLayer","geometryEngineAsync","saveAs","FeatureCollection","JSZip","$event","selectionForm","allowdownload","addSvgIcon","clearResults","startSelect","sketch","sketchGraphic","create","state","geometries","queryGeometry","union","toArray","selectFeatures","layerGroup","layerViews","popupTemplate","overwriteActions","returnQueryGeometry","check","resultSelect","changeCheck","group","clickButton","downloadGeoJSON","zip","layerNames","getUniqueLayerNames","collectSelectedFeaturesAsFeatureCollection","geoJSONData","generateAsync","indexOf","selectedFeatures","coordinates","charAt","rings","ring","paths","point","properties","selectedFeature","removeGroup","TitleBarComponent","closeDialog","inputs","icon","MatSliderModule","MatDividerModule","DragDropModule","MatBottomSheetModule","production","baseMapGallery","select","measurement","tableAttribute","addLayer","print","dashboard","mapPot","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[81]}