"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["node_modules_esri_calcite-components_dist_components_calcite-input-date-picker_js"],{

/***/ 15593:
/*!********************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/calcite-input-date-picker.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CalciteInputDatePicker": () => (/* binding */ CalciteInputDatePicker),
/* harmony export */   "defineCustomElement": () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ 40994);
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date.js */ 78952);
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom.js */ 7499);
/* harmony import */ var _floating_ui_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./floating-ui.js */ 51863);
/* harmony import */ var _form_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./form.js */ 2015);
/* harmony import */ var _interactive_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interactive.js */ 59338);
/* harmony import */ var _key_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./key.js */ 78407);
/* harmony import */ var _label2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./label2.js */ 9873);
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./loadable.js */ 80483);
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./locale.js */ 9333);
/* harmony import */ var _openCloseComponent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./openCloseComponent.js */ 84634);
/* harmony import */ var _date_picker_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./date-picker.js */ 49746);
/* harmony import */ var _t9n_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./t9n.js */ 75301);
/* harmony import */ var _focusTrapComponent_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./focusTrapComponent.js */ 12335);
/* harmony import */ var _guid_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./guid.js */ 38722);
/* harmony import */ var _component_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./component.js */ 90662);
/* harmony import */ var _date_picker_day_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./date-picker-day.js */ 97613);
/* harmony import */ var _date_picker_month_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./date-picker-month.js */ 40322);
/* harmony import */ var _date_picker_month_header_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./date-picker-month-header.js */ 41898);
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./icon.js */ 2706);
/* harmony import */ var _input_text_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./input-text.js */ 92188);
/* harmony import */ var _progress_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./progress.js */ 92079);

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */






















const CSS = {
  assistiveText: "assistive-text",
  menu: "menu-container",
  menuActive: "menu-container--active",
  toggleIcon: "toggle-icon"
};

/**
 * Specifies if an ISO string date (YYYY-MM-DD) has two digit year.
 *
 * @param {string} value
 * @returns {boolean}
 */
function isTwoDigitYear(value) {
  if (!value) {
    return false;
  }
  const {
    year
  } = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.d)(value);
  return Number(year) < 100;
}
/**
 * Returns a normalized year to current century from a given two digit year number.
 *
 * @param {number} twoDigitYear
 * @returns {string}
 */
function normalizeToCurrentCentury(twoDigitYear) {
  const currentYear = new Date().getFullYear();
  const normalizedYear = Math.floor(currentYear / 100) * 100 + twoDigitYear;
  return normalizedYear;
}
const inputDatePickerCss = ":host{--calcite-icon-size:1rem;--calcite-spacing-eighth:0.125rem;--calcite-spacing-quarter:0.25rem;--calcite-spacing-half:0.5rem;--calcite-spacing-three-quarters:0.75rem;--calcite-spacing:1rem;--calcite-spacing-plus-quarter:1.25rem;--calcite-spacing-plus-half:1.5rem;--calcite-spacing-double:2rem;--calcite-menu-min-width:10rem;--calcite-header-min-height:3rem;--calcite-footer-min-height:3rem}:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{position:relative;display:inline-block;inline-size:100%;overflow:visible;vertical-align:top;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host .menu-container .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:transform, visibility, opacity;opacity:0;box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);z-index:var(--calcite-app-z-index);border-radius:0.25rem}:host .menu-container[data-placement^=bottom] .calcite-floating-ui-anim{transform:translateY(-5px)}:host .menu-container[data-placement^=top] .calcite-floating-ui-anim{transform:translateY(5px)}:host .menu-container[data-placement^=left] .calcite-floating-ui-anim{transform:translateX(5px)}:host .menu-container[data-placement^=right] .calcite-floating-ui-anim{transform:translateX(-5px)}:host .menu-container[data-placement] .calcite-floating-ui-anim--active{opacity:1;transform:translate(0)}:host([scale=s]){--calcite-toggle-spacing:0.5rem;--calcite-internal-input-text-input-padding-inline-end:calc(var(--calcite-toggle-spacing) + 1rem)}:host([scale=m]){--calcite-toggle-spacing:0.75rem;--calcite-internal-input-text-input-padding-inline-end:calc(var(--calcite-toggle-spacing) + 1.5rem)}:host([scale=l]){--calcite-toggle-spacing:1rem;--calcite-internal-input-text-input-padding-inline-end:calc(var(--calcite-toggle-spacing) + 2rem)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.calendar-picker-wrapper{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);transform:translate3d(0, 0, 0)}.input-wrapper{position:relative}.toggle-icon{position:absolute;display:flex;cursor:pointer;align-items:center;inset-inline-end:0;inset-block:0;padding-inline:var(--calcite-toggle-spacing)}:host([range]) .input-container{display:flex}:host([range]) .input-wrapper{flex:1 1 auto}:host([range]) .horizontal-arrow-container{display:flex;align-items:center;border-width:1px;border-inline-start-width:0px;border-inline-end-width:0px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:var(--calcite-ui-background);padding-block:0px;padding-inline:0.25rem}:host([range][layout=vertical]) .input-wrapper{inline-size:100%}:host([range][layout=vertical]) .input-container{flex-direction:column;align-items:flex-start}:host([range][layout=vertical]) .calendar-picker-wrapper--end{transform:translate3d(0, 0, 0)}:host([range][layout=vertical]) .vertical-arrow-container{inset-block-start:1.5rem;position:absolute;z-index:var(--calcite-app-z-index);margin-inline:1px;background-color:var(--calcite-ui-foreground-1);padding-inline:0.625rem;inset-inline-start:0}.menu-container{--calcite-floating-ui-z-index:var(--calcite-app-z-index-dropdown);display:block;position:absolute;z-index:var(--calcite-floating-ui-z-index);visibility:hidden}.menu-container .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:transform, visibility, opacity;opacity:0;box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);z-index:var(--calcite-app-z-index);border-radius:0.25rem}.menu-container[data-placement^=bottom] .calcite-floating-ui-anim{transform:translateY(-5px)}.menu-container[data-placement^=top] .calcite-floating-ui-anim{transform:translateY(5px)}.menu-container[data-placement^=left] .calcite-floating-ui-anim{transform:translateX(5px)}.menu-container[data-placement^=right] .calcite-floating-ui-anim{transform:translateX(-5px)}.menu-container[data-placement] .calcite-floating-ui-anim--active{opacity:1;transform:translate(0)}:host([open]) .menu-container{visibility:visible}.menu-container--active{visibility:visible}.input .calcite-input__wrapper{margin-block-start:0px}:host([range][layout=vertical][scale=m]) .vertical-arrow-container{inset-block-start:1.5rem;padding-inline-start:0.75rem}:host([range][layout=vertical][scale=m]) .vertical-arrow-container calcite-icon{block-size:0.75rem;inline-size:0.75rem;min-inline-size:0px}:host([range][layout=vertical][scale=l]) .vertical-arrow-container{inset-block-start:2.25rem;padding-inline:0.875rem}:host([range][layout=vertical][open]) .vertical-arrow-container{display:none}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}.assistive-text{position:absolute;inline-size:1px;block-size:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}:host([hidden]){display:none}[hidden]{display:none}";
const InputDatePicker = /*@__PURE__*/(0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteInputDatePickerChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.createEvent)(this, "calciteInputDatePickerChange", 6);
    this.calciteInputDatePickerBeforeClose = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.createEvent)(this, "calciteInputDatePickerBeforeClose", 6);
    this.calciteInputDatePickerClose = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.createEvent)(this, "calciteInputDatePickerClose", 6);
    this.calciteInputDatePickerBeforeOpen = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.createEvent)(this, "calciteInputDatePickerBeforeOpen", 6);
    this.calciteInputDatePickerOpen = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.createEvent)(this, "calciteInputDatePickerOpen", 6);
    this.calciteInternalInputInputHandler = event => {
      const target = event.target;
      const value = target.value;
      const parsedValue = this.parseNumerals(value);
      const formattedValue = this.formatNumerals(parsedValue);
      target.value = formattedValue;
      const {
        year
      } = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.a)(value, this.localeData);
      if (year && year.length < 4) {
        return;
      }
      const date = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.b)(value, this.localeData);
      if ((0,_date_js__WEBPACK_IMPORTED_MODULE_1__.i)(date, this.min, this.max)) {
        this.datePickerActiveDate = date;
      }
    };
    this.calciteInternalInputBlurHandler = () => {
      this.commitValue();
    };
    this.dialogId = `date-picker-dialog--${(0,_guid_js__WEBPACK_IMPORTED_MODULE_14__.g)()}`;
    this.focusOnOpen = false;
    this.lastBlurredInput = "none";
    this.userChangedValue = false;
    this.openTransitionProp = "opacity";
    this.valueAsDateChangedExternally = false;
    this.placeholderTextId = `calcite-input-date-picker-placeholder-${(0,_guid_js__WEBPACK_IMPORTED_MODULE_14__.g)()}`;
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.onInputWrapperClick = () => {
      if (this.range && this.lastBlurredInput !== "none" && this.open) ;else {
        this.open = !this.open;
      }
      this.lastBlurredInput = "none";
    };
    this.setFilteredPlacements = () => {
      const {
        el,
        flipPlacements
      } = this;
      this.filteredFlipPlacements = flipPlacements ? (0,_floating_ui_js__WEBPACK_IMPORTED_MODULE_3__.f)(flipPlacements, el) : null;
    };
    this.setTransitionEl = el => {
      this.transitionEl = el;
    };
    this.setStartInput = el => {
      this.startInput = el;
    };
    this.setEndInput = el => {
      this.endInput = el;
    };
    this.deactivate = () => {
      this.open = false;
      this.lastBlurredInput = "none";
    };
    this.keyDownHandler = event => {
      const {
        defaultPrevented,
        key
      } = event;
      if (defaultPrevented) {
        return;
      }
      if (key === "Enter") {
        this.commitValue();
        if (this.shouldFocusRangeEnd()) {
          this.endInput?.setFocus();
        } else if (this.shouldFocusRangeStart()) {
          this.startInput?.setFocus();
        }
        if ((0,_form_js__WEBPACK_IMPORTED_MODULE_4__.s)(this)) {
          event.preventDefault();
          this.restoreInputFocus();
        }
      } else if (key === "ArrowDown") {
        this.open = true;
        this.focusOnOpen = true;
        event.preventDefault();
      } else if (key === "Escape") {
        this.open = false;
        event.preventDefault();
        this.restoreInputFocus();
      }
    };
    this.startInputFocus = () => {
      this.focusedInput = "start";
    };
    this.startEndInputFocus = event => {
      const blurredEl = event.relatedTarget;
      this.lastBlurredInput = blurredEl === this.startInput ? "start" : blurredEl === this.endInput ? "end" : "none";
    };
    this.endInputFocus = () => {
      this.focusedInput = "end";
    };
    this.setFloatingEl = el => {
      this.floatingEl = el;
      (0,_floating_ui_js__WEBPACK_IMPORTED_MODULE_3__.c)(this, this.referenceEl, this.floatingEl);
    };
    this.setStartWrapper = el => {
      this.startWrapper = el;
      this.setReferenceEl();
    };
    this.setEndWrapper = el => {
      this.endWrapper = el;
      this.setReferenceEl();
    };
    this.setDatePickerRef = el => {
      this.datePickerEl = el;
      (0,_focusTrapComponent_js__WEBPACK_IMPORTED_MODULE_13__.c)(this, {
        focusTrapEl: el,
        focusTrapOptions: {
          initialFocus: false,
          setReturnFocus: false
        }
      });
    };
    /**
     * Event handler for when the selected date changes
     *
     * @param event CalciteDatePicker custom change event
     */
    this.handleDateChange = event => {
      if (this.range) {
        return;
      }
      event.stopPropagation();
      this.setValue(event.target.valueAsDate);
      this.localizeInputValues();
      this.restoreInputFocus();
    };
    this.handleDateRangeChange = event => {
      if (!this.range) {
        return;
      }
      event.stopPropagation();
      const value = event.target.valueAsDate;
      this.setRangeValue(value);
      this.localizeInputValues();
      this.restoreInputFocus();
    };
    this.setInputValue = (newValue, input = "start") => {
      const inputEl = this[`${input}Input`];
      if (!inputEl) {
        return;
      }
      inputEl.value = newValue;
    };
    this.setRangeValue = valueAsDate => {
      if (!this.range) {
        return;
      }
      const {
        value: oldValue
      } = this;
      const oldValueIsArray = Array.isArray(oldValue);
      const valueIsArray = Array.isArray(valueAsDate);
      const newStartDate = valueIsArray ? valueAsDate[0] : null;
      let newStartDateISO = valueIsArray ? (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(newStartDate) : "";
      if (newStartDateISO) {
        newStartDateISO = this.getNormalizedDate(newStartDateISO);
      }
      const newEndDate = valueIsArray ? valueAsDate[1] : null;
      let newEndDateISO = valueIsArray ? (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(newEndDate) : "";
      if (newEndDateISO) {
        newEndDateISO = this.getNormalizedDate(newEndDateISO);
      }
      const newValue = newStartDateISO || newEndDateISO ? [newStartDateISO, newEndDateISO] : "";
      if (newValue === oldValue) {
        return;
      }
      this.userChangedValue = true;
      this.value = newValue;
      this.valueAsDate = newValue ? (0,_date_picker_js__WEBPACK_IMPORTED_MODULE_11__.g)(newValue) : undefined;
      const changeEvent = this.calciteInputDatePickerChange.emit();
      if (changeEvent && changeEvent.defaultPrevented) {
        this.value = oldValue;
        if (oldValueIsArray) {
          this.setInputValue(oldValue[0], "start");
          this.setInputValue(oldValue[1], "end");
        } else {
          this.value = oldValue;
          this.setInputValue(oldValue);
        }
      }
    };
    this.setValue = value => {
      if (this.range) {
        return;
      }
      const oldValue = this.value;
      let newValue = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(value);
      newValue = this.getNormalizedDate(newValue);
      if (newValue === oldValue) {
        return;
      }
      this.userChangedValue = true;
      this.valueAsDate = newValue ? (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(newValue) : undefined;
      this.value = newValue || "";
      const changeEvent = this.calciteInputDatePickerChange.emit();
      if (changeEvent.defaultPrevented) {
        this.value = oldValue;
        this.setInputValue(oldValue);
      }
    };
    this.commonDateSeparators = [".", "-", "/"];
    this.formatNumerals = value => value ? value.split("").map(char => this.commonDateSeparators?.includes(char) ? this.localeData?.separator : _key_js__WEBPACK_IMPORTED_MODULE_6__.n?.includes(char) ? _locale_js__WEBPACK_IMPORTED_MODULE_9__.n?.numberFormatter?.format(Number(char)) : char).join("") : "";
    this.parseNumerals = value => value ? value.split("").map(char => _key_js__WEBPACK_IMPORTED_MODULE_6__.n.includes(char) ? _locale_js__WEBPACK_IMPORTED_MODULE_9__.n.delocalize(char) : char).join("") : "";
    this.disabled = false;
    this.focusTrapDisabled = false;
    this.form = undefined;
    this.readOnly = false;
    this.value = "";
    this.flipPlacements = undefined;
    this.headingLevel = undefined;
    this.valueAsDate = undefined;
    this.messageOverrides = undefined;
    this.messages = undefined;
    this.minAsDate = undefined;
    this.maxAsDate = undefined;
    this.min = undefined;
    this.max = undefined;
    this.open = false;
    this.name = undefined;
    this.numberingSystem = undefined;
    this.scale = "m";
    this.status = "idle";
    this.placement = _floating_ui_js__WEBPACK_IMPORTED_MODULE_3__.d;
    this.range = false;
    this.required = false;
    this.overlayPositioning = "absolute";
    this.proximitySelectionDisabled = false;
    this.layout = "horizontal";
    this.datePickerActiveDate = undefined;
    this.defaultMessages = undefined;
    this.effectiveLocale = "";
    this.focusedInput = "start";
    this.localeData = undefined;
  }
  handleFocusTrapDisabled(focusTrapDisabled) {
    if (!this.open) {
      return;
    }
    focusTrapDisabled ? (0,_focusTrapComponent_js__WEBPACK_IMPORTED_MODULE_13__.d)(this) : (0,_focusTrapComponent_js__WEBPACK_IMPORTED_MODULE_13__.a)(this);
  }
  handleDisabledAndReadOnlyChange(value) {
    if (!value) {
      this.open = false;
    }
  }
  valueWatcher(newValue) {
    if (!this.userChangedValue) {
      let newValueAsDate;
      if (Array.isArray(newValue)) {
        newValueAsDate = (0,_date_picker_js__WEBPACK_IMPORTED_MODULE_11__.g)(newValue);
      } else if (newValue) {
        newValueAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(newValue);
      } else {
        newValueAsDate = undefined;
      }
      if (!this.valueAsDateChangedExternally && newValueAsDate !== this.valueAsDate) {
        this.valueAsDate = newValueAsDate;
      }
      this.localizeInputValues();
    }
    this.userChangedValue = false;
  }
  valueAsDateWatcher(valueAsDate) {
    this.datePickerActiveDate = valueAsDate;
    const newValue = this.range && Array.isArray(valueAsDate) ? [(0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(valueAsDate[0]), (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(valueAsDate[1])] : (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(valueAsDate);
    if (this.value !== newValue) {
      this.valueAsDateChangedExternally = true;
      this.value = newValue;
      this.valueAsDateChangedExternally = false;
    }
  }
  flipPlacementsHandler() {
    this.setFilteredPlacements();
    this.reposition(true);
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  onMinChanged(min) {
    if (min) {
      this.minAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(min);
    }
  }
  onMaxChanged(max) {
    if (max) {
      this.maxAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(max);
    }
  }
  openHandler(value) {
    (0,_openCloseComponent_js__WEBPACK_IMPORTED_MODULE_10__.o)(this);
    if (this.disabled || this.readOnly) {
      this.open = false;
      return;
    }
    if (value) {
      this.reposition(true);
    }
  }
  overlayPositioningHandler() {
    this.reposition(true);
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  calciteDaySelectHandler() {
    if (this.shouldFocusRangeStart() || this.shouldFocusRangeEnd()) {
      return;
    }
    this.open = false;
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  setFocus() {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield (0,_loadable_js__WEBPACK_IMPORTED_MODULE_8__.c)(_this);
      _this.el.focus();
    })();
  }
  /**
   * Updates the position of the component.
   *
   * @param delayed
   */
  reposition(delayed = false) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
        floatingEl,
        referenceEl,
        placement,
        overlayPositioning,
        filteredFlipPlacements
      } = _this2;
      return (0,_floating_ui_js__WEBPACK_IMPORTED_MODULE_3__.r)(_this2, {
        floatingEl,
        referenceEl,
        overlayPositioning,
        placement,
        flipPlacements: filteredFlipPlacements,
        type: "menu"
      }, delayed);
    })();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_5__.c)(this);
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_9__.c)(this);
    const {
      open
    } = this;
    open && this.openHandler(open);
    if (Array.isArray(this.value)) {
      this.valueAsDate = (0,_date_picker_js__WEBPACK_IMPORTED_MODULE_11__.g)(this.value);
    } else if (this.value) {
      try {
        this.valueAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(this.value);
      } catch (error) {
        this.warnAboutInvalidValue(this.value);
        this.value = "";
      }
    } else if (this.range && this.valueAsDate) {
      this.setRangeValue(this.valueAsDate);
    }
    if (this.min) {
      this.minAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(this.min);
    }
    if (this.max) {
      this.maxAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(this.max);
    }
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_7__.c)(this);
    (0,_form_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_12__.c)(this);
    this.setFilteredPlacements();
    this.reposition(true);
    _locale_js__WEBPACK_IMPORTED_MODULE_9__.n.numberFormatOptions = {
      numberingSystem: this.numberingSystem,
      locale: this.effectiveLocale,
      useGrouping: false
    };
    if (this.open) {
      (0,_openCloseComponent_js__WEBPACK_IMPORTED_MODULE_10__.o)(this);
    }
  }
  componentWillLoad() {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      (0,_loadable_js__WEBPACK_IMPORTED_MODULE_8__.a)(_this3);
      yield Promise.all([_this3.loadLocaleData(), (0,_t9n_js__WEBPACK_IMPORTED_MODULE_12__.s)(_this3)]);
      _this3.onMinChanged(_this3.min);
      _this3.onMaxChanged(_this3.max);
    })();
  }
  componentDidLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_8__.s)(this);
    this.localizeInputValues();
    this.reposition(true);
  }
  disconnectedCallback() {
    (0,_focusTrapComponent_js__WEBPACK_IMPORTED_MODULE_13__.d)(this);
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_5__.d)(this);
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_7__.d)(this);
    (0,_form_js__WEBPACK_IMPORTED_MODULE_4__.d)(this);
    (0,_floating_ui_js__WEBPACK_IMPORTED_MODULE_3__.a)(this, this.referenceEl, this.floatingEl);
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_9__.d)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_12__.d)(this);
  }
  componentDidRender() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_5__.u)(this);
  }
  render() {
    const {
      disabled,
      effectiveLocale,
      messages,
      numberingSystem,
      readOnly
    } = this;
    _locale_js__WEBPACK_IMPORTED_MODULE_9__.n.numberFormatOptions = {
      numberingSystem,
      locale: effectiveLocale,
      useGrouping: false
    };
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.Host, {
      onBlur: this.deactivate,
      onKeyDown: this.keyDownHandler
    }, this.localeData && (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("div", {
      class: "input-container"
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("div", {
      class: "input-wrapper",
      onClick: this.onInputWrapperClick,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setStartWrapper
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("calcite-input-text", {
      "aria-autocomplete": "none",
      "aria-controls": this.dialogId,
      "aria-describedby": this.placeholderTextId,
      "aria-expanded": (0,_dom_js__WEBPACK_IMPORTED_MODULE_2__.t)(this.open),
      "aria-haspopup": "dialog",
      class: `input ${this.layout === "vertical" && this.range ? `no-bottom-border` : ``}`,
      disabled: disabled,
      icon: "calendar",
      onCalciteInputTextInput: this.calciteInternalInputInputHandler,
      onCalciteInternalInputTextBlur: this.calciteInternalInputBlurHandler,
      onCalciteInternalInputTextFocus: this.startInputFocus,
      onFocus: this.startEndInputFocus,
      placeholder: this.localeData?.placeholder,
      readOnly: readOnly,
      role: "combobox",
      scale: this.scale,
      status: this.status,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setStartInput
    }), !this.readOnly && this.renderToggleIcon(this.open && this.focusedInput === "start"), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("span", {
      "aria-hidden": "true",
      class: CSS.assistiveText,
      id: this.placeholderTextId
    }, "Date Format: ", this.localeData?.placeholder)), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("div", {
      "aria-hidden": (0,_dom_js__WEBPACK_IMPORTED_MODULE_2__.t)(!this.open),
      "aria-label": messages.chooseDate,
      "aria-live": "polite",
      "aria-modal": "true",
      class: {
        [CSS.menu]: true,
        [CSS.menuActive]: this.open
      },
      id: this.dialogId,
      role: "dialog",
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setFloatingEl
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("div", {
      class: {
        ["calendar-picker-wrapper"]: true,
        ["calendar-picker-wrapper--end"]: this.focusedInput === "end",
        [_floating_ui_js__WEBPACK_IMPORTED_MODULE_3__.F.animation]: true,
        [_floating_ui_js__WEBPACK_IMPORTED_MODULE_3__.F.animationActive]: this.open
      },
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setTransitionEl
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("calcite-date-picker", {
      activeDate: this.datePickerActiveDate,
      activeRange: this.focusedInput,
      headingLevel: this.headingLevel,
      max: this.max,
      maxAsDate: this.maxAsDate,
      messageOverrides: this.messageOverrides,
      min: this.min,
      minAsDate: this.minAsDate,
      numberingSystem: numberingSystem,
      onCalciteDatePickerChange: this.handleDateChange,
      onCalciteDatePickerRangeChange: this.handleDateRangeChange,
      proximitySelectionDisabled: this.proximitySelectionDisabled,
      range: this.range,
      scale: this.scale,
      tabIndex: this.open ? undefined : -1,
      valueAsDate: this.valueAsDate,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setDatePickerRef
    }))), this.range && this.layout === "horizontal" && (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("div", {
      class: "horizontal-arrow-container"
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("calcite-icon", {
      flipRtl: true,
      icon: "arrow-right",
      scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_15__.g)(this.scale)
    })), this.range && this.layout === "vertical" && this.scale !== "s" && (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("div", {
      class: "vertical-arrow-container"
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("calcite-icon", {
      icon: "arrow-down",
      scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_15__.g)(this.scale)
    })), this.range && (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("div", {
      class: "input-wrapper",
      onClick: this.onInputWrapperClick,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setEndWrapper
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("calcite-input-text", {
      "aria-autocomplete": "none",
      "aria-controls": this.dialogId,
      "aria-expanded": (0,_dom_js__WEBPACK_IMPORTED_MODULE_2__.t)(this.open),
      "aria-haspopup": "dialog",
      class: {
        input: true,
        "border-top-color-one": this.layout === "vertical" && this.range
      },
      disabled: disabled,
      icon: "calendar",
      onCalciteInputTextInput: this.calciteInternalInputInputHandler,
      onCalciteInternalInputTextBlur: this.calciteInternalInputBlurHandler,
      onCalciteInternalInputTextFocus: this.endInputFocus,
      onFocus: this.startEndInputFocus,
      placeholder: this.localeData?.placeholder,
      readOnly: readOnly,
      role: "combobox",
      scale: this.scale,
      status: this.status,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setEndInput
    }), !this.readOnly && this.renderToggleIcon(this.open && this.focusedInput === "end"))), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)(_form_js__WEBPACK_IMPORTED_MODULE_4__.H, {
      component: this
    }));
  }
  renderToggleIcon(open) {
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("span", {
      class: CSS.toggleIcon
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.h)("calcite-icon", {
      icon: open ? "chevron-up" : "chevron-down",
      scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_15__.g)(this.scale)
    }));
  }
  setReferenceEl() {
    const {
      focusedInput,
      layout,
      endWrapper,
      startWrapper
    } = this;
    this.referenceEl = focusedInput === "end" || layout === "vertical" ? endWrapper || startWrapper : startWrapper || endWrapper;
    requestAnimationFrame(() => (0,_floating_ui_js__WEBPACK_IMPORTED_MODULE_3__.c)(this, this.referenceEl, this.floatingEl));
  }
  onLabelClick() {
    this.setFocus();
  }
  onBeforeOpen() {
    this.calciteInputDatePickerBeforeOpen.emit();
  }
  onOpen() {
    (0,_focusTrapComponent_js__WEBPACK_IMPORTED_MODULE_13__.a)(this, {
      onActivate: () => {
        if (this.focusOnOpen) {
          this.datePickerEl.setFocus();
          this.focusOnOpen = false;
        }
      }
    });
    this.calciteInputDatePickerOpen.emit();
  }
  onBeforeClose() {
    this.calciteInputDatePickerBeforeClose.emit();
  }
  onClose() {
    this.calciteInputDatePickerClose.emit();
    (0,_focusTrapComponent_js__WEBPACK_IMPORTED_MODULE_13__.d)(this);
    this.restoreInputFocus();
    this.focusOnOpen = false;
    this.datePickerEl.reset();
  }
  commitValue() {
    const {
      focusedInput,
      value
    } = this;
    const focusedInputName = `${focusedInput}Input`;
    const focusedInputValue = this[focusedInputName].value;
    const date = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.b)(focusedInputValue, this.localeData);
    const dateAsISO = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(date);
    const valueIsArray = Array.isArray(value);
    if (this.range) {
      const focusedInputValueIndex = focusedInput === "start" ? 0 : 1;
      if (valueIsArray) {
        if (dateAsISO === value[focusedInputValueIndex]) {
          return;
        }
        if (date) {
          this.setRangeValue([focusedInput === "start" ? date : (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(value[0]), focusedInput === "end" ? date : (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(value[1])]);
          this.localizeInputValues();
        } else {
          this.setRangeValue([focusedInput === "end" && (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(value[0]), focusedInput === "start" && (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(value[1])]);
        }
      } else {
        if (date) {
          this.setRangeValue([focusedInput === "start" ? date : (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(value[0]), focusedInput === "end" ? date : (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(value[1])]);
          this.localizeInputValues();
        }
      }
    } else {
      if (dateAsISO === value) {
        return;
      }
      this.setValue(date);
      this.localizeInputValues();
    }
  }
  loadLocaleData() {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (!_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_22__.Build.isBrowser) {
        return;
      }
      _locale_js__WEBPACK_IMPORTED_MODULE_9__.n.numberFormatOptions = {
        numberingSystem: _this4.numberingSystem,
        locale: _this4.effectiveLocale,
        useGrouping: false
      };
      _this4.localeData = yield (0,_date_picker_js__WEBPACK_IMPORTED_MODULE_11__.a)(_this4.effectiveLocale);
      _this4.localizeInputValues();
    })();
  }
  shouldFocusRangeStart() {
    const startValue = this.value[0];
    const endValue = this.value[1];
    return !!(endValue && !startValue && this.focusedInput === "end" && this.startInput);
  }
  shouldFocusRangeEnd() {
    const startValue = this.value[0];
    const endValue = this.value[1];
    return !!(startValue && !endValue && this.focusedInput === "start" && this.endInput);
  }
  restoreInputFocus() {
    if (!this.range) {
      this.startInput.setFocus();
      return;
    }
    const focusedInput = this.focusedInput === "start" ? this.startInput : this.endInput;
    focusedInput.setFocus();
  }
  localizeInputValues() {
    const date = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.f)(this.range ? Array.isArray(this.valueAsDate) && this.valueAsDate[0] || undefined : this.valueAsDate, this.minAsDate, this.maxAsDate);
    const endDate = this.range ? (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.f)(Array.isArray(this.valueAsDate) && this.valueAsDate[1] || undefined, this.minAsDate, this.maxAsDate) : null;
    const formattingOptions = {
      // we explicitly set numberingSystem to prevent the browser-inferred value
      // see https://github.com/Esri/calcite-design-system/issues/3079#issuecomment-1168964195 for more info
      numberingSystem: _locale_js__WEBPACK_IMPORTED_MODULE_9__.a
    };
    const localizedDate = date && this.formatNumerals(date.toLocaleDateString(this.effectiveLocale, formattingOptions));
    const localizedEndDate = endDate && this.formatNumerals(endDate.toLocaleDateString(this.effectiveLocale, formattingOptions));
    this.setInputValue(localizedDate ?? "", "start");
    this.setInputValue((this.range && localizedEndDate) ?? "", "end");
  }
  warnAboutInvalidValue(value) {
    console.warn(`The specified value "${value}" does not conform to the required format, "YYYY-MM-DD".`);
  }
  getNormalizedDate(value) {
    if (!value) {
      return "";
    }
    if (!isTwoDigitYear(value)) {
      return value;
    }
    const {
      day,
      month,
      year
    } = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.d)(value);
    const normalizedYear = normalizeToCurrentCentury(Number(year));
    return `${normalizedYear}-${month}-${day}`;
  }
  static get delegatesFocus() {
    return true;
  }
  static get assetsDirs() {
    return ["assets"];
  }
  get el() {
    return this;
  }
  static get watchers() {
    return {
      "focusTrapDisabled": ["handleFocusTrapDisabled"],
      "disabled": ["handleDisabledAndReadOnlyChange"],
      "readOnly": ["handleDisabledAndReadOnlyChange"],
      "value": ["valueWatcher"],
      "valueAsDate": ["valueAsDateWatcher"],
      "flipPlacements": ["flipPlacementsHandler"],
      "messageOverrides": ["onMessagesChange"],
      "min": ["onMinChanged"],
      "max": ["onMaxChanged"],
      "open": ["openHandler"],
      "overlayPositioning": ["overlayPositioningHandler"],
      "layout": ["setReferenceEl"],
      "focusedInput": ["setReferenceEl"],
      "effectiveLocale": ["loadLocaleData"]
    };
  }
  static get style() {
    return inputDatePickerCss;
  }
}, [17, "calcite-input-date-picker", {
  "disabled": [516],
  "focusTrapDisabled": [516, "focus-trap-disabled"],
  "form": [513],
  "readOnly": [516, "read-only"],
  "value": [1025],
  "flipPlacements": [16],
  "headingLevel": [514, "heading-level"],
  "valueAsDate": [1040],
  "messageOverrides": [1040],
  "messages": [1040],
  "minAsDate": [1040],
  "maxAsDate": [1040],
  "min": [1],
  "max": [1],
  "open": [1540],
  "name": [513],
  "numberingSystem": [513, "numbering-system"],
  "scale": [513],
  "status": [513],
  "placement": [513],
  "range": [516],
  "required": [516],
  "overlayPositioning": [513, "overlay-positioning"],
  "proximitySelectionDisabled": [4, "proximity-selection-disabled"],
  "layout": [513],
  "datePickerActiveDate": [32],
  "defaultMessages": [32],
  "effectiveLocale": [32],
  "focusedInput": [32],
  "localeData": [32],
  "setFocus": [64],
  "reposition": [64]
}, [[0, "calciteDaySelect", "calciteDaySelectHandler"]]]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-input-date-picker", "calcite-date-picker", "calcite-date-picker-day", "calcite-date-picker-month", "calcite-date-picker-month-header", "calcite-icon", "calcite-input-text", "calcite-progress"];
  components.forEach(tagName => {
    switch (tagName) {
      case "calcite-input-date-picker":
        if (!customElements.get(tagName)) {
          customElements.define(tagName, InputDatePicker);
        }
        break;
      case "calcite-date-picker":
        if (!customElements.get(tagName)) {
          (0,_date_picker_js__WEBPACK_IMPORTED_MODULE_11__.d)();
        }
        break;
      case "calcite-date-picker-day":
        if (!customElements.get(tagName)) {
          (0,_date_picker_day_js__WEBPACK_IMPORTED_MODULE_16__.d)();
        }
        break;
      case "calcite-date-picker-month":
        if (!customElements.get(tagName)) {
          (0,_date_picker_month_js__WEBPACK_IMPORTED_MODULE_17__.d)();
        }
        break;
      case "calcite-date-picker-month-header":
        if (!customElements.get(tagName)) {
          (0,_date_picker_month_header_js__WEBPACK_IMPORTED_MODULE_18__.d)();
        }
        break;
      case "calcite-icon":
        if (!customElements.get(tagName)) {
          (0,_icon_js__WEBPACK_IMPORTED_MODULE_19__.d)();
        }
        break;
      case "calcite-input-text":
        if (!customElements.get(tagName)) {
          (0,_input_text_js__WEBPACK_IMPORTED_MODULE_20__.d)();
        }
        break;
      case "calcite-progress":
        if (!customElements.get(tagName)) {
          (0,_progress_js__WEBPACK_IMPORTED_MODULE_21__.d)();
        }
        break;
    }
  });
}
defineCustomElement$1();
const CalciteInputDatePicker = InputDatePicker;
const defineCustomElement = defineCustomElement$1;


/***/ }),

/***/ 90662:
/*!****************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/component.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "g": () => (/* binding */ getIconScale)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */
function getIconScale(componentScale) {
  return componentScale === "l" ? "m" : "s";
}


/***/ }),

/***/ 97613:
/*!**********************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/date-picker-day.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => (/* binding */ DatePickerDay),
/* harmony export */   "d": () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ 40994);
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date.js */ 78952);
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom.js */ 7499);
/* harmony import */ var _interactive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interactive.js */ 59338);
/* harmony import */ var _key_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./key.js */ 78407);
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./locale.js */ 9333);
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */






const datePickerDayCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{position:relative;display:flex;cursor:pointer;color:var(--calcite-ui-text-3)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.day-v-wrapper{flex:1 1 auto}.day-wrapper{position:relative;display:flex;flex-direction:column;align-items:center}:host([range]) .day-wrapper:before,:host([range]) .day-wrapper:after,:host([range-hover]) .day-wrapper:before,:host([range-hover]) .day-wrapper:after{pointer-events:none;position:absolute;inset-block:0;content:\"\";block-size:var(--calcite-internal-day-size);inline-size:var(--calcite-internal-day-size)}.day{z-index:var(--calcite-app-z-index);display:flex;align-items:center;justify-content:center;border-radius:9999px;font-size:var(--calcite-font-size--2);line-height:1rem;line-height:1;color:var(--calcite-ui-text-3);outline-color:transparent;transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;background:none;box-shadow:0 0 0 2px transparent;block-size:var(--calcite-internal-day-size);inline-size:var(--calcite-internal-day-size)}.text{margin-block:1px 0px;margin-inline-start:0px}:host([scale=s]){--calcite-internal-day-size:27px}:host([scale=s]) .day-v-wrapper{padding-block:0.125rem}:host([scale=s]) .day-wrapper{padding:0px}:host([scale=s]) .day{font-size:var(--calcite-font-size--2)}:host([scale=m]){--calcite-internal-day-size:33px}:host([scale=m]) .day-v-wrapper{padding-block:0.25rem}:host([scale=m]) .day-wrapper{padding:0px}:host([scale=m]) .day{font-size:var(--calcite-font-size--1)}:host([scale=l]){--calcite-internal-day-size:43px}:host([scale=l]) .day-v-wrapper{padding-block:0.25rem}:host([scale=l]) .day-wrapper{padding-inline:0.25rem}:host([scale=l]) .day{font-size:var(--calcite-font-size-0)}:host(:not([current-month])) .day{opacity:var(--calcite-ui-opacity-disabled)}:host(:hover:not([disabled]):not([selected])) .day,:host([active]:not([range]):not([selected])) .day{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}:host(:focus),:host([active]){outline:2px solid transparent;outline-offset:2px}:host(:focus:not([disabled])) .day{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-ui-brand));outline-offset:calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-ui-focus-offset-invert),\n                1\n              )\n            )\n          )}:host([selected]) .day{font-weight:var(--calcite-font-weight-medium);background-color:var(--calcite-ui-brand);color:var(--calcite-ui-foreground-1)}:host(:focus:not([disabled])) .day,:host([start-of-range]:not(:focus)) .day,:host([end-of-range]:not(:focus)) .day{box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}:host([range-hover]:not([selected])) .day-wrapper:before,:host([highlighted]:not([selected])) .day-wrapper:before{inset-inline-end:50%;border-radius:0}:host([range-hover]:not([selected])) .day-wrapper:after,:host([highlighted]:not([selected])) .day-wrapper:after{inset-inline-start:50%;border-radius:0}:host([range-hover]:not([selected])) .day,:host([highlighted]:not([selected])) .day{color:var(--calcite-ui-text-1)}:host([highlighted]) .day-wrapper:before,:host([highlighted]) .day-wrapper:after,:host([selected]:not(.hover--outside-range)) .day-wrapper:before,:host([selected]:not(.hover--outside-range)) .day-wrapper:after{background-color:var(--calcite-ui-foreground-current)}:host([range-hover]:not([selected])) .day-wrapper:before,:host([range-hover]:not([selected])) .day-wrapper:after{background-color:var(--calcite-ui-foreground-2)}:host(:hover[range-hover]:not([selected]).focused--end) .day-wrapper:before,:host([highlighted][end-of-range]) .day-wrapper:before,:host([highlighted][range-edge=end]) .day-wrapper:before,:host([range-hover][range-edge=end]) .day-wrapper:before,:host(:hover[range-hover].focused--end.hover--outside-range) .day-wrapper:before{inset-inline-end:50%}:host(:hover[range-hover]:not([selected]).focused--end) .day-wrapper:after,:host([highlighted][end-of-range]) .day-wrapper:after,:host([highlighted][range-edge=end]) .day-wrapper:after,:host([range-hover][range-edge=end]) .day-wrapper:after,:host(:hover[range-hover].focused--end.hover--outside-range) .day-wrapper:after{inset-inline-start:50%;border-start-end-radius:var(--calcite-internal-day-size);border-end-end-radius:var(--calcite-internal-day-size);inline-size:calc(var(--calcite-internal-day-size) / 2)}:host([highlighted][start-of-range]) .day-wrapper:before,:host([highlighted][range-edge=start]) .day-wrapper:before,:host([range-hover][range-edge=start]) .day-wrapper:before,:host(:hover[range-hover]:not([selected]).focused--start) .day-wrapper:before,:host([start-of-range].hover--inside-range) .day-wrapper:before,:host(:hover[range-hover].focused--start.hover--outside-range) .day-wrapper:before{inset-inline-end:50%;border-start-start-radius:var(--calcite-internal-day-size);border-end-start-radius:var(--calcite-internal-day-size);inline-size:calc(var(--calcite-internal-day-size) / 2)}:host([highlighted][start-of-range]) .day-wrapper:after,:host([highlighted][range-edge=start]) .day-wrapper:after,:host([range-hover][range-edge=start]) .day-wrapper:after,:host(:hover[range-hover]:not([selected]).focused--start) .day-wrapper:after,:host([start-of-range].hover--inside-range) .day-wrapper:after,:host(:hover[range-hover].focused--start.hover--outside-range) .day-wrapper:after{inset-inline-start:50%}:host([range-hover][start-of-range][range-edge=end]) .day-wrapper:after,:host([range-hover][start-of-range][range-edge=end]) .day-wrapper:before,:host([range-hover][end-of-range][range-edge=start]) .day-wrapper:after,:host([range-hover][end-of-range][range-edge=start]) .day-wrapper:before,:host([start-of-range][range-edge=end].hover--inside-range) .day-wrapper:after,:host([start-of-range][range-edge=end].hover--inside-range) .day-wrapper:before,:host([end-of-range]) .day-wrapper:after,:host([end-of-range]) .day-wrapper:before{content:unset}:host(:hover[range-hover]:not([selected]).focused--start) .day,:host(:hover[range-hover]:not([selected]).focused--end) .day,:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range) .day,:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) .day{box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}@media (forced-colors: active){.day{border-radius:0px}:host([selected]){outline:2px solid canvasText}:host(:hover:not([selected])) .day{border-radius:50%}:host([range][selected]) .day-wrapper:before,:host([range][selected]) .day-wrapper:after,:host([highlighted]) .day-wrapper:before,:host([highlighted]) .day-wrapper:after,:host([range-hover]:not([selected])) .day-wrapper:before,:host([range-hover]:not([selected])) .day-wrapper:after{background-color:highlight}:host([range-hover]) .day-wrapper:before,:host([range-hover]) .day-wrapper:after,:host([range][selected][start-of-range]) .day-wrapper:before,:host([range][selected][start-of-range]) .day-wrapper:after,:host([range][selected][end-of-range]) .day-wrapper:before,:host([range][selected][end-of-range]) .day-wrapper:after{background-color:canvas}}:host([hidden]){display:none}[hidden]{display:none}";
const DatePickerDay = /*@__PURE__*/(0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteDaySelect = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.createEvent)(this, "calciteDaySelect", 6);
    this.calciteInternalDayHover = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.createEvent)(this, "calciteInternalDayHover", 6);
    //--------------------------------------------------------------------------
    //
    //  Event Listeners
    //
    //--------------------------------------------------------------------------
    this.onClick = () => {
      if (this.disabled) {
        return;
      }
      this.calciteDaySelect.emit();
    };
    this.keyDownHandler = event => {
      if ((0,_key_js__WEBPACK_IMPORTED_MODULE_3__.i)(event.key)) {
        !this.disabled && this.calciteDaySelect.emit();
        event.preventDefault();
      }
    };
    this.day = undefined;
    this.dateTimeFormat = undefined;
    this.disabled = false;
    this.currentMonth = false;
    this.selected = false;
    this.highlighted = false;
    this.range = false;
    this.rangeEdge = undefined;
    this.startOfRange = false;
    this.endOfRange = false;
    this.rangeHover = false;
    this.active = false;
    this.scale = undefined;
    this.value = undefined;
  }
  pointerOverHandler() {
    if (this.disabled) {
      return;
    }
    this.calciteInternalDayHover.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.parentDatePickerEl = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.el, "calcite-date-picker");
  }
  render() {
    const dayId = (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.c)(this.value).replaceAll("-", "");
    if (this.parentDatePickerEl) {
      const {
        numberingSystem,
        lang: locale
      } = this.parentDatePickerEl;
      _locale_js__WEBPACK_IMPORTED_MODULE_4__.n.numberFormatOptions = {
        useGrouping: false,
        ...(numberingSystem && {
          numberingSystem
        }),
        ...(locale && {
          locale
        })
      };
    }
    const formattedDay = _locale_js__WEBPACK_IMPORTED_MODULE_4__.n.localize(String(this.day));
    const dayLabel = this.dateTimeFormat.format(this.value);
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.Host, {
      "aria-disabled": (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.disabled),
      "aria-label": dayLabel,
      "aria-selected": (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.active),
      id: dayId,
      onClick: this.onClick,
      onKeyDown: this.keyDownHandler,
      role: "button"
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
      "aria-hidden": "true",
      class: {
        "day-v-wrapper": true
      }
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
      class: "day-wrapper"
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.h)("span", {
      class: "day"
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_5__.h)("span", {
      class: "text"
    }, formattedDay)))));
  }
  connectedCallback() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
  }
  componentDidRender() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.u)(this, this.isTabbable);
  }
  disconnectedCallback() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
  }
  isTabbable() {
    return this.active;
  }
  get el() {
    return this;
  }
  static get style() {
    return datePickerDayCss;
  }
}, [1, "calcite-date-picker-day", {
  "day": [2],
  "dateTimeFormat": [16],
  "disabled": [516],
  "currentMonth": [516, "current-month"],
  "selected": [516],
  "highlighted": [516],
  "range": [516],
  "rangeEdge": [513, "range-edge"],
  "startOfRange": [516, "start-of-range"],
  "endOfRange": [516, "end-of-range"],
  "rangeHover": [516, "range-hover"],
  "active": [516],
  "scale": [513],
  "value": [16]
}, [[1, "pointerover", "pointerOverHandler"]]]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-date-picker-day"];
  components.forEach(tagName => {
    switch (tagName) {
      case "calcite-date-picker-day":
        if (!customElements.get(tagName)) {
          customElements.define(tagName, DatePickerDay);
        }
        break;
    }
  });
}
defineCustomElement();


/***/ }),

/***/ 41898:
/*!*******************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/date-picker-month-header.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => (/* binding */ DatePickerMonthHeader),
/* harmony export */   "d": () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ 40994);
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date.js */ 78952);
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom.js */ 7499);
/* harmony import */ var _key_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./key.js */ 78407);
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locale.js */ 9333);
/* harmony import */ var _Heading_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Heading.js */ 70009);
/* harmony import */ var _component_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./component.js */ 90662);
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icon.js */ 2706);
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */








const CSS = {
  header: "header",
  month: "month",
  chevron: "chevron",
  suffix: "suffix",
  yearSuffix: "year--suffix",
  yearWrap: "year-wrap",
  textReverse: "text--reverse"
};
const ICON = {
  chevronLeft: "chevron-left",
  chevronRight: "chevron-right"
};
const datePickerMonthHeaderCss = ":host{display:block}.header{display:flex;justify-content:space-between;padding-block:0px;padding-inline:0.25rem}:host([scale=s]) .text{margin-block:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem}:host([scale=s]) .chevron{block-size:2.25rem}:host([scale=m]) .text{margin-block:0.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}:host([scale=m]) .chevron{block-size:3rem}:host([scale=l]) .text{margin-block:1rem;font-size:var(--calcite-font-size-1);line-height:1.5rem}:host([scale=l]) .chevron{block-size:3.5rem}.chevron{margin-inline:-0.25rem;box-sizing:content-box;display:flex;flex-grow:0;cursor:pointer;align-items:center;justify-content:center;border-style:none;background-color:var(--calcite-ui-foreground-1);padding-inline:0.25rem;color:var(--calcite-ui-text-3);outline:2px solid transparent;outline-offset:2px;outline-color:transparent;transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;inline-size:14.2857142857%}.chevron:focus{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-ui-brand));outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-ui-focus-offset-invert),\n                1\n              )\n            )\n          )}.chevron:hover,.chevron:focus{background-color:var(--calcite-ui-foreground-2);fill:var(--calcite-ui-text-1);color:var(--calcite-ui-text-1)}.chevron:active{background-color:var(--calcite-ui-foreground-3)}.chevron[aria-disabled=true]{pointer-events:none;opacity:0}.text{margin-block:auto;display:flex;inline-size:100%;flex:1 1 auto;align-items:center;justify-content:center;text-align:center;line-height:1}.text--reverse{flex-direction:row-reverse}.month,.year,.suffix{margin-inline:0.25rem;margin-block:auto;display:inline-block;background-color:var(--calcite-ui-foreground-1);font-weight:var(--calcite-font-weight-medium);line-height:1.25;color:var(--calcite-ui-text-1);font-size:inherit}.year{position:relative;inline-size:2.5rem;border-style:none;background-color:transparent;text-align:center;font-family:inherit;outline-color:transparent}.year:hover{transition-duration:100ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-property:outline-color;outline:2px solid var(--calcite-ui-border-2);outline-offset:2px}.year:focus{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-ui-brand));outline-offset:calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-ui-focus-offset-invert),\n                1\n              )\n            )\n          )}.year--suffix{text-align:start}.year-wrap{position:relative}.suffix{inset-block-start:0px;white-space:nowrap;text-align:start;inset-inline-start:0}:host([hidden]){display:none}[hidden]{display:none}";
const DatePickerMonthHeader = /*@__PURE__*/(0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteInternalDatePickerSelect = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.createEvent)(this, "calciteInternalDatePickerSelect", 6);
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    /**
     * Increment year on UP/DOWN keys
     *
     * @param event
     */
    this.onYearKey = event => {
      const localizedYear = this.parseCalendarYear(event.target.value);
      switch (event.key) {
        case "ArrowDown":
          event.preventDefault();
          this.setYear({
            localizedYear,
            offset: -1
          });
          break;
        case "ArrowUp":
          event.preventDefault();
          this.setYear({
            localizedYear,
            offset: 1
          });
          break;
      }
    };
    this.onYearChange = event => {
      this.setYear({
        localizedYear: this.parseCalendarYear(event.target.value)
      });
    };
    this.onYearInput = event => {
      this.setYear({
        localizedYear: this.parseCalendarYear(event.target.value),
        commit: false
      });
    };
    this.prevMonthClick = event => {
      this.handleArrowClick(event, this.prevMonthDate);
    };
    this.prevMonthKeydown = event => {
      if ((0,_key_js__WEBPACK_IMPORTED_MODULE_2__.i)(event.key)) {
        this.prevMonthClick(event);
      }
    };
    this.nextMonthClick = event => {
      this.handleArrowClick(event, this.nextMonthDate);
    };
    this.nextMonthKeydown = event => {
      if ((0,_key_js__WEBPACK_IMPORTED_MODULE_2__.i)(event.key)) {
        this.nextMonthClick(event);
      }
    };
    /*
     * Update active month on clicks of left/right arrows
     */
    this.handleArrowClick = (event, date) => {
      event.preventDefault();
      this.calciteInternalDatePickerSelect.emit(date);
    };
    this.selectedDate = undefined;
    this.activeDate = undefined;
    this.headingLevel = undefined;
    this.min = undefined;
    this.max = undefined;
    this.scale = undefined;
    this.localeData = undefined;
    this.messages = undefined;
    this.nextMonthDate = undefined;
    this.prevMonthDate = undefined;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.parentDatePickerEl = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.el, "calcite-date-picker");
  }
  connectedCallback() {
    this.setNextPrevMonthDates();
  }
  render() {
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("div", {
      class: CSS.header
    }, this.renderContent());
  }
  renderContent() {
    const {
      messages,
      localeData,
      activeDate
    } = this;
    if (!activeDate || !localeData) {
      return null;
    }
    if (this.parentDatePickerEl) {
      const {
        numberingSystem,
        lang: locale
      } = this.parentDatePickerEl;
      _locale_js__WEBPACK_IMPORTED_MODULE_3__.n.numberFormatOptions = {
        useGrouping: false,
        ...(numberingSystem && {
          numberingSystem
        }),
        ...(locale && {
          locale
        })
      };
    }
    const activeMonth = activeDate.getMonth();
    const {
      months,
      unitOrder
    } = localeData;
    const localizedMonth = (months.wide || months.narrow || months.abbreviated)[activeMonth];
    const localizedYear = this.formatCalendarYear(activeDate.getFullYear());
    const order = (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.j)(unitOrder);
    const reverse = order.indexOf("y") < order.indexOf("m");
    const suffix = localeData.year?.suffix;
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.Fragment, null, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("a", {
      "aria-disabled": `${this.prevMonthDate.getMonth() === activeMonth}`,
      "aria-label": messages.prevMonth,
      class: CSS.chevron,
      href: "#",
      onClick: this.prevMonthClick,
      onKeyDown: this.prevMonthKeydown,
      role: "button",
      tabindex: this.prevMonthDate.getMonth() === activeMonth ? -1 : 0
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", {
      "flip-rtl": true,
      icon: ICON.chevronLeft,
      scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.scale)
    })), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("div", {
      class: {
        text: true,
        [CSS.textReverse]: reverse
      }
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)(_Heading_js__WEBPACK_IMPORTED_MODULE_4__.H, {
      class: CSS.month,
      level: this.headingLevel
    }, localizedMonth), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("span", {
      class: CSS.yearWrap
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("input", {
      "aria-label": messages.year,
      class: {
        year: true,
        [CSS.yearSuffix]: !!suffix
      },
      inputmode: "numeric",
      maxlength: "4",
      minlength: "1",
      onChange: this.onYearChange,
      onInput: this.onYearInput,
      onKeyDown: this.onYearKey,
      pattern: "\\d*",
      type: "text",
      value: localizedYear,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: el => this.yearInput = el
    }), suffix && (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("span", {
      class: CSS.suffix
    }, suffix))), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("a", {
      "aria-disabled": `${this.nextMonthDate.getMonth() === activeMonth}`,
      "aria-label": messages.nextMonth,
      class: CSS.chevron,
      href: "#",
      onClick: this.nextMonthClick,
      onKeyDown: this.nextMonthKeydown,
      role: "button",
      tabindex: this.nextMonthDate.getMonth() === activeMonth ? -1 : 0
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", {
      "flip-rtl": true,
      icon: ICON.chevronRight,
      scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.scale)
    })));
  }
  setNextPrevMonthDates() {
    if (!this.activeDate) {
      return;
    }
    this.nextMonthDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.f)((0,_date_js__WEBPACK_IMPORTED_MODULE_0__.n)(this.activeDate), this.min, this.max);
    this.prevMonthDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.f)((0,_date_js__WEBPACK_IMPORTED_MODULE_0__.p)(this.activeDate), this.min, this.max);
  }
  formatCalendarYear(year) {
    return _locale_js__WEBPACK_IMPORTED_MODULE_3__.n.localize(`${(0,_date_js__WEBPACK_IMPORTED_MODULE_0__.k)(year, this.localeData)}`);
  }
  parseCalendarYear(year) {
    return _locale_js__WEBPACK_IMPORTED_MODULE_3__.n.localize(`${(0,_date_js__WEBPACK_IMPORTED_MODULE_0__.l)(Number(_locale_js__WEBPACK_IMPORTED_MODULE_3__.n.delocalize(year)), this.localeData)}`);
  }
  getInRangeDate({
    localizedYear,
    offset = 0
  }) {
    const {
      min,
      max,
      activeDate
    } = this;
    const parsedYear = Number(_locale_js__WEBPACK_IMPORTED_MODULE_3__.n.delocalize(localizedYear));
    const length = parsedYear.toString().length;
    const year = isNaN(parsedYear) ? false : parsedYear + offset;
    const inRange = year && (!min || min.getFullYear() <= year) && (!max || max.getFullYear() >= year);
    // if you've supplied a year and it's in range
    if (year && inRange && length === localizedYear.length) {
      const nextDate = new Date(activeDate);
      nextDate.setFullYear(year);
      return (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.f)(nextDate, min, max);
    }
  }
  /**
   * Parse localized year string from input,
   * set to active if in range
   *
   * @param root0
   * @param root0.localizedYear
   * @param root0.commit
   * @param root0.offset
   */
  setYear({
    localizedYear,
    commit = true,
    offset = 0
  }) {
    const {
      yearInput,
      activeDate
    } = this;
    const inRangeDate = this.getInRangeDate({
      localizedYear,
      offset
    });
    // if you've supplied a year and it's in range, update active date
    if (inRangeDate) {
      this.calciteInternalDatePickerSelect.emit(inRangeDate);
    }
    if (commit) {
      yearInput.value = this.formatCalendarYear((inRangeDate || activeDate).getFullYear());
    }
  }
  get el() {
    return this;
  }
  static get watchers() {
    return {
      "min": ["setNextPrevMonthDates"],
      "max": ["setNextPrevMonthDates"],
      "activeDate": ["setNextPrevMonthDates"]
    };
  }
  static get style() {
    return datePickerMonthHeaderCss;
  }
}, [1, "calcite-date-picker-month-header", {
  "selectedDate": [16],
  "activeDate": [16],
  "headingLevel": [2, "heading-level"],
  "min": [16],
  "max": [16],
  "scale": [513],
  "localeData": [16],
  "messages": [1040],
  "nextMonthDate": [32],
  "prevMonthDate": [32]
}]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-date-picker-month-header", "calcite-icon"];
  components.forEach(tagName => {
    switch (tagName) {
      case "calcite-date-picker-month-header":
        if (!customElements.get(tagName)) {
          customElements.define(tagName, DatePickerMonthHeader);
        }
        break;
      case "calcite-icon":
        if (!customElements.get(tagName)) {
          (0,_icon_js__WEBPACK_IMPORTED_MODULE_6__.d)();
        }
        break;
    }
  });
}
defineCustomElement();


/***/ }),

/***/ 40322:
/*!************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/date-picker-month.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => (/* binding */ DatePickerMonth),
/* harmony export */   "d": () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ 40994);
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date.js */ 78952);
/* harmony import */ var _date_picker_day_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date-picker-day.js */ 97613);
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */



const datePickerMonthCss = ":host([hidden]){display:none}[hidden]{display:none}.calendar{margin-block-end:0.25rem}.week-headers{display:flex;border-width:0px;border-block-start-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);padding-block:0px;padding-inline:0.25rem}.week-header{text-align:center;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-3);inline-size:14.2857142857%}.day{display:flex;min-inline-size:0px;justify-content:center;inline-size:14.2857142857%}.day calcite-date-picker-day{inline-size:100%}:host([scale=s]) .week-header{padding-inline:0px;padding-block:0.5rem 0.75rem;font-size:var(--calcite-font-size--2);line-height:1rem}:host([scale=m]) .week-header{padding-inline:0px;padding-block:0.75rem 1rem;font-size:var(--calcite-font-size--2);line-height:1rem}:host([scale=l]) .week-header{padding-inline:0px;padding-block:1rem 1.25rem;font-size:var(--calcite-font-size--1);line-height:1rem}.week-days{display:flex;flex-direction:row;padding-block:0px;padding-inline:6px}.week-days:focus{outline:2px solid transparent;outline-offset:2px}";
const DAYS_PER_WEEK = 7;
const DAYS_MAXIMUM_INDEX = 6;
const DatePickerMonth = /*@__PURE__*/(0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteInternalDatePickerSelect = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.createEvent)(this, "calciteInternalDatePickerSelect", 6);
    this.calciteInternalDatePickerHover = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.createEvent)(this, "calciteInternalDatePickerHover", 6);
    this.calciteInternalDatePickerActiveDateChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.createEvent)(this, "calciteInternalDatePickerActiveDateChange", 6);
    this.calciteInternalDatePickerMouseOut = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.createEvent)(this, "calciteInternalDatePickerMouseOut", 6);
    //--------------------------------------------------------------------------
    //
    //  Event Listeners
    //
    //--------------------------------------------------------------------------
    this.keyDownHandler = event => {
      if (event.defaultPrevented) {
        return;
      }
      const isRTL = this.el.dir === "rtl";
      switch (event.key) {
        case "ArrowUp":
          event.preventDefault();
          this.addDays(-7);
          break;
        case "ArrowRight":
          event.preventDefault();
          this.addDays(isRTL ? -1 : 1);
          break;
        case "ArrowDown":
          event.preventDefault();
          this.addDays(7);
          break;
        case "ArrowLeft":
          event.preventDefault();
          this.addDays(isRTL ? 1 : -1);
          break;
        case "PageUp":
          event.preventDefault();
          this.addMonths(-1);
          break;
        case "PageDown":
          event.preventDefault();
          this.addMonths(1);
          break;
        case "Home":
          event.preventDefault();
          this.activeDate.setDate(1);
          this.addDays();
          break;
        case "End":
          event.preventDefault();
          this.activeDate.setDate(new Date(this.activeDate.getFullYear(), this.activeDate.getMonth() + 1, 0).getDate());
          this.addDays();
          break;
        case "Enter":
        case " ":
          event.preventDefault();
          break;
        case "Tab":
          this.activeFocus = false;
      }
    };
    /**
     * Once user is not interacting via keyboard,
     * disable auto focusing of active date
     */
    this.disableActiveFocus = () => {
      this.activeFocus = false;
    };
    this.dayHover = event => {
      const target = event.target;
      if (target.disabled) {
        this.calciteInternalDatePickerMouseOut.emit();
      } else {
        this.calciteInternalDatePickerHover.emit(target.value);
      }
      event.stopPropagation();
    };
    this.daySelect = event => {
      const target = event.target;
      this.calciteInternalDatePickerSelect.emit(target.value);
    };
    this.dateTimeFormat = undefined;
    this.selectedDate = undefined;
    this.activeDate = new Date();
    this.startDate = undefined;
    this.endDate = undefined;
    this.min = undefined;
    this.max = undefined;
    this.scale = undefined;
    this.localeData = undefined;
    this.hoverRange = undefined;
  }
  pointerOutHandler() {
    this.calciteInternalDatePickerMouseOut.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    const month = this.activeDate.getMonth();
    const year = this.activeDate.getFullYear();
    const startOfWeek = this.localeData.weekStart % 7;
    const {
      abbreviated,
      short,
      narrow
    } = this.localeData.days;
    const weekDays = this.scale === "s" ? narrow || short || abbreviated : short || abbreviated || narrow;
    const adjustedWeekDays = [...weekDays.slice(startOfWeek, 7), ...weekDays.slice(0, startOfWeek)];
    const curMonDays = this.getCurrentMonthDays(month, year);
    const prevMonDays = this.getPreviousMonthDays(month, year, startOfWeek);
    const nextMonDays = this.getNextMonthDays(month, year, startOfWeek);
    let dayInWeek = 0;
    const getDayInWeek = () => dayInWeek++ % 7;
    const days = [...prevMonDays.map(day => {
      return {
        active: false,
        day,
        dayInWeek: getDayInWeek(),
        date: new Date(year, month - 1, day)
      };
    }), ...curMonDays.map(day => {
      const date = new Date(year, month, day);
      const active = (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, this.activeDate);
      return {
        active,
        currentMonth: true,
        day,
        dayInWeek: getDayInWeek(),
        date,
        ref: true
      };
    }), ...nextMonDays.map(day => {
      return {
        active: false,
        day,
        dayInWeek: getDayInWeek(),
        date: new Date(year, month + 1, day)
      };
    })];
    const weeks = [];
    for (let i = 0; i < days.length; i += 7) {
      weeks.push(days.slice(i, i + 7));
    }
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.Host, {
      onFocusOut: this.disableActiveFocus,
      onKeyDown: this.keyDownHandler
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.h)("div", {
      class: "calendar",
      role: "grid"
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.h)("div", {
      class: "week-headers",
      role: "row"
    }, adjustedWeekDays.map(weekday => (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.h)("span", {
      class: "week-header",
      role: "columnheader"
    }, weekday))), weeks.map(days => (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.h)("div", {
      class: "week-days",
      role: "row"
    }, days.map(day => this.renderDateDay(day))))));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Add n months to the current month
   *
   * @param step
   */
  addMonths(step) {
    const nextDate = new Date(this.activeDate);
    nextDate.setMonth(this.activeDate.getMonth() + step);
    this.calciteInternalDatePickerActiveDateChange.emit((0,_date_js__WEBPACK_IMPORTED_MODULE_0__.f)(nextDate, this.min, this.max));
    this.activeFocus = true;
  }
  /**
   * Add n days to the current date
   *
   * @param step
   */
  addDays(step = 0) {
    const nextDate = new Date(this.activeDate);
    nextDate.setDate(this.activeDate.getDate() + step);
    this.calciteInternalDatePickerActiveDateChange.emit((0,_date_js__WEBPACK_IMPORTED_MODULE_0__.f)(nextDate, this.min, this.max));
    this.activeFocus = true;
  }
  /**
   * Get dates for last days of the previous month
   *
   * @param month
   * @param year
   * @param startOfWeek
   */
  getPreviousMonthDays(month, year, startOfWeek) {
    const lastDate = new Date(year, month, 0);
    const date = lastDate.getDate();
    const startDay = lastDate.getDay();
    const days = [];
    if (startDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {
      return days;
    }
    if (startDay === startOfWeek) {
      return [date];
    }
    for (let i = (DAYS_PER_WEEK + startDay - startOfWeek) % DAYS_PER_WEEK; i >= 0; i--) {
      days.push(date - i);
    }
    return days;
  }
  /**
   * Get dates for the current month
   *
   * @param month
   * @param year
   */
  getCurrentMonthDays(month, year) {
    const num = new Date(year, month + 1, 0).getDate();
    const days = [];
    for (let i = 0; i < num; i++) {
      days.push(i + 1);
    }
    return days;
  }
  /**
   * Get dates for first days of the next month
   *
   * @param month
   * @param year
   * @param startOfWeek
   */
  getNextMonthDays(month, year, startOfWeek) {
    const endDay = new Date(year, month + 1, 0).getDay();
    const days = [];
    if (endDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {
      return days;
    }
    for (let i = 0; i < (DAYS_MAXIMUM_INDEX - (endDay - startOfWeek)) % DAYS_PER_WEEK; i++) {
      days.push(i + 1);
    }
    return days;
  }
  /**
   * Determine if the date is in between the start and end dates
   *
   * @param date
   */
  betweenSelectedRange(date) {
    return !!(this.startDate && this.endDate && date > this.startDate && date < this.endDate && !this.isRangeHover(date));
  }
  /**
   * Determine if the date should be in selected state
   *
   * @param date
   */
  isSelected(date) {
    return !!((0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, this.selectedDate) || this.startDate && (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, this.startDate) || this.endDate && (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, this.endDate));
  }
  /**
   * Determine if the date is the start of the date range
   *
   * @param date
   */
  isStartOfRange(date) {
    return !!(this.startDate && !(0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(this.startDate, this.endDate) && (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(this.startDate, date) && !this.isEndOfRange(date));
  }
  isEndOfRange(date) {
    return !!(this.endDate && !(0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(this.startDate, this.endDate) && (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(this.endDate, date) || !this.endDate && this.hoverRange && (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(this.startDate, this.hoverRange.end) && (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, this.hoverRange.end));
  }
  /**
   * Render calcite-date-picker-day
   *
   * @param active.active
   * @param active
   * @param day
   * @param dayInWeek
   * @param date
   * @param currentMonth
   * @param ref
   * @param active.currentMonth
   * @param active.date
   * @param active.day
   * @param active.dayInWeek
   * @param active.ref
   */
  renderDateDay({
    active,
    currentMonth,
    date,
    day,
    dayInWeek,
    ref
  }) {
    const isFocusedOnStart = this.isFocusedOnStart();
    const isHoverInRange = this.isHoverInRange() || !this.endDate && this.hoverRange && (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(this.hoverRange?.end, this.startDate);
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.h)("div", {
      class: "day",
      key: date.toDateString(),
      role: "gridcell"
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_2__.h)("calcite-date-picker-day", {
      active: active,
      class: {
        "hover--inside-range": this.startDate && isHoverInRange,
        "hover--outside-range": this.startDate && !isHoverInRange,
        "focused--start": isFocusedOnStart,
        "focused--end": !isFocusedOnStart
      },
      currentMonth: currentMonth,
      dateTimeFormat: this.dateTimeFormat,
      day: day,
      disabled: !(0,_date_js__WEBPACK_IMPORTED_MODULE_0__.i)(date, this.min, this.max),
      endOfRange: this.isEndOfRange(date),
      highlighted: this.betweenSelectedRange(date),
      onCalciteDaySelect: this.daySelect,
      onCalciteInternalDayHover: this.dayHover,
      range: !!this.startDate && !!this.endDate && !(0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(this.startDate, this.endDate),
      rangeEdge: dayInWeek === 0 ? "start" : dayInWeek === 6 ? "end" : undefined,
      rangeHover: this.isRangeHover(date),
      scale: this.scale,
      selected: this.isSelected(date),
      startOfRange: this.isStartOfRange(date),
      value: date,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: el => {
        // when moving via keyboard, focus must be updated on active date
        if (ref && active && this.activeFocus) {
          el?.focus();
        }
      }
    }));
  }
  isFocusedOnStart() {
    return this.hoverRange?.focused === "start";
  }
  isHoverInRange() {
    if (!this.hoverRange) {
      return false;
    }
    const {
      start,
      end
    } = this.hoverRange;
    return !!(!this.isFocusedOnStart() && this.startDate && (!this.endDate || end < this.endDate) || this.isFocusedOnStart() && this.startDate && start > this.startDate);
  }
  isRangeHover(date) {
    if (!this.hoverRange) {
      return false;
    }
    const {
      start,
      end
    } = this.hoverRange;
    const isStart = this.isFocusedOnStart();
    const insideRange = this.isHoverInRange();
    const cond1 = insideRange && (!isStart && date > this.startDate && (date < end || (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, end)) || isStart && date < this.endDate && (date > start || (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, start)));
    const cond2 = !insideRange && (!isStart && date >= this.endDate && (date < end || (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, end)) || isStart && (this.startDate && date < this.startDate || this.endDate && (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, this.startDate)) && (start && date > start || (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.h)(date, start)));
    return cond1 || cond2;
  }
  get el() {
    return this;
  }
  static get style() {
    return datePickerMonthCss;
  }
}, [1, "calcite-date-picker-month", {
  "dateTimeFormat": [16],
  "selectedDate": [16],
  "activeDate": [16],
  "startDate": [16],
  "endDate": [16],
  "min": [16],
  "max": [16],
  "scale": [513],
  "localeData": [16],
  "hoverRange": [16]
}, [[1, "pointerout", "pointerOutHandler"]]]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-date-picker-month", "calcite-date-picker-day"];
  components.forEach(tagName => {
    switch (tagName) {
      case "calcite-date-picker-month":
        if (!customElements.get(tagName)) {
          customElements.define(tagName, DatePickerMonth);
        }
        break;
      case "calcite-date-picker-day":
        if (!customElements.get(tagName)) {
          (0,_date_picker_day_js__WEBPACK_IMPORTED_MODULE_1__.d)();
        }
        break;
    }
  });
}
defineCustomElement();


/***/ }),

/***/ 49746:
/*!******************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/date-picker.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => (/* binding */ DatePicker),
/* harmony export */   "a": () => (/* binding */ getLocaleData),
/* harmony export */   "d": () => (/* binding */ defineCustomElement),
/* harmony export */   "g": () => (/* binding */ getValueAsDateRange)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ 40994);
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date.js */ 78952);
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loadable.js */ 80483);
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locale.js */ 9333);
/* harmony import */ var _t9n_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./t9n.js */ 75301);
/* harmony import */ var _date_picker_day_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./date-picker-day.js */ 97613);
/* harmony import */ var _date_picker_month_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./date-picker-month.js */ 40322);
/* harmony import */ var _date_picker_month_header_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./date-picker-month-header.js */ 41898);
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./icon.js */ 2706);

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */









const HEADING_LEVEL = 2;
const DATE_PICKER_FORMAT_OPTIONS = {
  dateStyle: "full"
};

/**
 * CLDR cache.
 * Exported for testing purposes.
 *
 * @private
 */
const translationCache = {};
/**
 * CLDR request cache.
 * Exported for testing purposes.
 *
 * @private
 */
const requestCache = {};
/**
 * Fetch calendar data for a given locale from list of supported languages
 *
 * @param lang
 * @public
 */
function getLocaleData(_x) {
  return _getLocaleData.apply(this, arguments);
}
/**
 *  Maps value to valueAsDate
 *
 * @param value
 */
function _getLocaleData() {
  _getLocaleData = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (lang) {
    const locale = (0,_locale_js__WEBPACK_IMPORTED_MODULE_3__.g)(lang);
    if (translationCache[locale]) {
      return translationCache[locale];
    }
    if (!requestCache[locale]) {
      requestCache[locale] = fetch((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.getAssetPath)(`./assets/date-picker/nls/${locale}.json`)).then(resp => resp.json()).catch(() => {
        console.error(`Translations for "${locale}" not found or invalid, falling back to english`);
        return getLocaleData("en");
      });
    }
    const data = yield requestCache[locale];
    translationCache[locale] = data;
    return data;
  });
  return _getLocaleData.apply(this, arguments);
}
function getValueAsDateRange(value) {
  return value.map((v, index) => (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(v, index === 1));
}
const datePickerCss = ":host{box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}:host *{box-sizing:border-box}:host{display:inline-block;inline-size:auto;overflow:visible;border-radius:0px;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-1);vertical-align:top}:host([scale=s]){inline-size:234px;min-inline-size:216px;max-inline-size:380px}:host([scale=m]){inline-size:304px;min-inline-size:272px;max-inline-size:480px}:host([scale=l]){inline-size:370px;min-inline-size:320px;max-inline-size:600px}:host([hidden]){display:none}[hidden]{display:none}";
const DatePicker = /*@__PURE__*/(0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteDatePickerChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.createEvent)(this, "calciteDatePickerChange", 6);
    this.calciteDatePickerRangeChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.createEvent)(this, "calciteDatePickerRangeChange", 6);
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.keyDownHandler = event => {
      if (event.key === "Escape") {
        this.resetActiveDates();
      }
    };
    this.monthHeaderSelectChange = event => {
      const date = new Date(event.detail);
      if (!this.range) {
        this.activeDate = date;
      } else {
        if (this.activeRange === "end") {
          this.activeEndDate = date;
        } else {
          this.activeStartDate = date;
        }
        this.mostRecentRangeValue = date;
      }
    };
    this.monthActiveDateChange = event => {
      const date = new Date(event.detail);
      if (!this.range) {
        this.activeDate = date;
      } else {
        if (this.activeRange === "end") {
          this.activeEndDate = date;
        } else {
          this.activeStartDate = date;
        }
        this.mostRecentRangeValue = date;
      }
    };
    this.monthHoverChange = event => {
      if (!this.range) {
        this.hoverRange = undefined;
        return;
      }
      const {
        valueAsDate
      } = this;
      const start = Array.isArray(valueAsDate) && valueAsDate[0];
      const end = Array.isArray(valueAsDate) && valueAsDate[1];
      const date = new Date(event.detail);
      this.hoverRange = {
        focused: this.activeRange || "start",
        start,
        end
      };
      if (!this.proximitySelectionDisabled) {
        if (end) {
          const startDiff = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.g)(date, start);
          const endDiff = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.g)(date, end);
          if (endDiff > 0) {
            this.hoverRange.end = date;
            this.hoverRange.focused = "end";
          } else if (startDiff < 0) {
            this.hoverRange.start = date;
            this.hoverRange.focused = "start";
          } else if (startDiff > endDiff) {
            this.hoverRange.start = date;
            this.hoverRange.focused = "start";
          } else {
            this.hoverRange.end = date;
            this.hoverRange.focused = "end";
          }
        } else {
          if (start) {
            if (date < start) {
              this.hoverRange = {
                focused: "start",
                start: date,
                end: start
              };
            } else {
              this.hoverRange.end = date;
              this.hoverRange.focused = "end";
            }
          }
        }
      } else {
        if (!end) {
          if (date < start) {
            this.hoverRange = {
              focused: "start",
              start: date,
              end: start
            };
          } else {
            this.hoverRange.end = date;
            this.hoverRange.focused = "end";
          }
        } else {
          this.hoverRange = undefined;
        }
      }
      event.stopPropagation();
    };
    this.monthMouseOutChange = () => {
      if (this.hoverRange) {
        this.hoverRange = undefined;
      }
    };
    this.resetActiveDates = () => {
      const {
        valueAsDate
      } = this;
      if (!Array.isArray(valueAsDate) && valueAsDate && valueAsDate !== this.activeDate) {
        this.activeDate = new Date(valueAsDate);
      }
      if (Array.isArray(valueAsDate)) {
        if (valueAsDate[0] && valueAsDate[0] !== this.activeStartDate) {
          this.activeStartDate = new Date(valueAsDate[0]);
        }
        if (valueAsDate[1] && valueAsDate[1] !== this.activeEndDate) {
          this.activeEndDate = new Date(valueAsDate[1]);
        }
      }
    };
    /**
     * Event handler for when the selected date changes
     *
     * @param event
     */
    this.monthDateChange = event => {
      const date = new Date(event.detail);
      const isoDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(date);
      if (!this.range && isoDate === (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.valueAsDate)) {
        return;
      }
      if (!this.range) {
        this.value = isoDate || "";
        this.valueAsDate = date || null;
        this.activeDate = date || null;
        this.calciteDatePickerChange.emit();
        return;
      }
      const start = this.getStartDate();
      const end = this.getEndDate();
      if (!start || !end && date < start) {
        if (start) {
          this.setEndDate(new Date(start));
        }
        if (this.activeRange == "end") {
          this.setEndDate(date);
        } else {
          this.setStartDate(date);
        }
      } else if (!end) {
        this.setEndDate(date);
      } else {
        if (!this.proximitySelectionDisabled) {
          if (this.activeRange) {
            if (this.activeRange == "end") {
              this.setEndDate(date);
            } else {
              this.setStartDate(date);
            }
          } else {
            const startDiff = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.g)(date, start);
            const endDiff = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.g)(date, end);
            if (endDiff === 0 || startDiff < 0) {
              this.setStartDate(date);
            } else if (startDiff === 0 || endDiff < 0) {
              this.setEndDate(date);
            } else if (startDiff < endDiff) {
              this.setStartDate(date);
            } else {
              this.setEndDate(date);
            }
          }
        } else {
          this.setStartDate(date);
        }
      }
      this.calciteDatePickerChange.emit();
    };
    this.activeDate = undefined;
    this.activeRange = undefined;
    this.value = undefined;
    this.headingLevel = undefined;
    this.valueAsDate = undefined;
    this.minAsDate = undefined;
    this.maxAsDate = undefined;
    this.min = undefined;
    this.max = undefined;
    this.numberingSystem = undefined;
    this.scale = "m";
    this.range = false;
    this.proximitySelectionDisabled = false;
    this.messageOverrides = undefined;
    this.messages = undefined;
    this.activeEndDate = undefined;
    this.activeStartDate = undefined;
    this.dateTimeFormat = undefined;
    this.defaultMessages = undefined;
    this.effectiveLocale = "";
    this.endAsDate = undefined;
    this.hoverRange = undefined;
    this.localeData = undefined;
    this.mostRecentRangeValue = undefined;
    this.startAsDate = undefined;
  }
  activeDateWatcher(newActiveDate) {
    if (this.activeRange === "end") {
      this.activeEndDate = newActiveDate;
    }
  }
  valueAsDateWatcher(newValueAsDate) {
    if (this.range && Array.isArray(newValueAsDate)) {
      const {
        activeStartDate,
        activeEndDate
      } = this;
      const newActiveStartDate = newValueAsDate[0];
      const newActiveEndDate = newValueAsDate[1];
      this.activeStartDate = activeStartDate !== newActiveStartDate && newActiveStartDate;
      this.activeEndDate = activeEndDate !== newActiveEndDate && newActiveEndDate;
    } else if (newValueAsDate && newValueAsDate !== this.activeDate) {
      this.activeDate = newValueAsDate;
    }
  }
  onMinChanged(min) {
    if (min) {
      this.minAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(min);
    }
  }
  onMaxChanged(max) {
    if (max) {
      this.maxAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(max);
    }
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component's first focusable element. */
  setFocus() {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield (0,_loadable_js__WEBPACK_IMPORTED_MODULE_2__.c)(_this);
      _this.el.focus();
    })();
  }
  /**
   * Resets active date state.
   * @internal
   */
  reset() {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this2.resetActiveDates();
      _this2.mostRecentRangeValue = undefined;
    })();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
    if (Array.isArray(this.value)) {
      this.valueAsDate = getValueAsDateRange(this.value);
    } else if (this.value) {
      this.valueAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(this.value);
    }
    if (this.min) {
      this.minAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(this.min);
    }
    if (this.max) {
      this.maxAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(this.max);
    }
  }
  disconnectedCallback() {
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_4__.d)(this);
  }
  componentWillLoad() {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      (0,_loadable_js__WEBPACK_IMPORTED_MODULE_2__.a)(_this3);
      yield _this3.loadLocaleData();
      _this3.onMinChanged(_this3.min);
      _this3.onMaxChanged(_this3.max);
      yield (0,_t9n_js__WEBPACK_IMPORTED_MODULE_4__.s)(_this3);
    })();
  }
  componentDidLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_2__.s)(this);
  }
  render() {
    const date = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.f)(this.range && Array.isArray(this.valueAsDate) ? this.valueAsDate[0] : this.valueAsDate, this.minAsDate, this.maxAsDate);
    let activeDate = this.getActiveDate(date, this.minAsDate, this.maxAsDate);
    const endDate = this.range && Array.isArray(this.valueAsDate) ? (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.f)(this.valueAsDate[1], this.minAsDate, this.maxAsDate) : null;
    const activeEndDate = this.getActiveEndDate(endDate, this.minAsDate, this.maxAsDate);
    if ((this.activeRange === "end" || this.hoverRange?.focused === "end" && (!this.proximitySelectionDisabled || endDate)) && activeEndDate) {
      activeDate = activeEndDate;
    }
    if (this.range && this.mostRecentRangeValue) {
      activeDate = this.mostRecentRangeValue;
    }
    const minDate = this.range && this.activeRange ? this.activeRange === "start" ? this.minAsDate : date || this.minAsDate : this.minAsDate;
    const maxDate = this.range && this.activeRange ? this.activeRange === "start" ? endDate || this.maxAsDate : this.maxAsDate : this.maxAsDate;
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.Host, {
      onBlur: this.resetActiveDates,
      onKeyDown: this.keyDownHandler
    }, this.renderCalendar(activeDate, maxDate, minDate, date, endDate));
  }
  effectiveLocaleChange() {
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_4__.u)(this, this.effectiveLocale);
  }
  valueHandler(value) {
    if (Array.isArray(value)) {
      this.valueAsDate = getValueAsDateRange(value);
    } else if (value) {
      this.valueAsDate = (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.e)(value);
    }
  }
  loadLocaleData() {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (!_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.Build.isBrowser) {
        return;
      }
      _locale_js__WEBPACK_IMPORTED_MODULE_3__.n.numberFormatOptions = {
        numberingSystem: _this4.numberingSystem,
        locale: _this4.effectiveLocale,
        useGrouping: false
      };
      _this4.localeData = yield getLocaleData(_this4.effectiveLocale);
      _this4.dateTimeFormat = (0,_locale_js__WEBPACK_IMPORTED_MODULE_3__.b)(_this4.effectiveLocale, DATE_PICKER_FORMAT_OPTIONS);
    })();
  }
  /**
   * Render calcite-date-picker-month-header and calcite-date-picker-month
   *
   * @param activeDate
   * @param maxDate
   * @param minDate
   * @param date
   * @param endDate
   */
  renderCalendar(activeDate, maxDate, minDate, date, endDate) {
    return this.localeData && [(0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.h)("calcite-date-picker-month-header", {
      activeDate: activeDate,
      headingLevel: this.headingLevel || HEADING_LEVEL,
      localeData: this.localeData,
      max: maxDate,
      messages: this.messages,
      min: minDate,
      onCalciteInternalDatePickerSelect: this.monthHeaderSelectChange,
      scale: this.scale,
      selectedDate: this.activeRange === "end" ? endDate : date || new Date()
    }), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_9__.h)("calcite-date-picker-month", {
      activeDate: activeDate,
      dateTimeFormat: this.dateTimeFormat,
      endDate: this.range ? endDate : undefined,
      hoverRange: this.hoverRange,
      localeData: this.localeData,
      max: maxDate,
      min: minDate,
      onCalciteInternalDatePickerActiveDateChange: this.monthActiveDateChange,
      onCalciteInternalDatePickerHover: this.monthHoverChange,
      onCalciteInternalDatePickerMouseOut: this.monthMouseOutChange,
      onCalciteInternalDatePickerSelect: this.monthDateChange,
      scale: this.scale,
      selectedDate: this.activeRange === "end" ? endDate : date,
      startDate: this.range ? date : undefined
    })];
  }
  getEndDate() {
    return Array.isArray(this.valueAsDate) && this.valueAsDate[1] || undefined;
  }
  setEndDate(date) {
    const startDate = this.getStartDate();
    const newEndDate = date ? (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.s)(date) : date;
    this.value = [(0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(startDate), (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(date)];
    this.valueAsDate = [startDate, date];
    this.mostRecentRangeValue = newEndDate;
    this.calciteDatePickerRangeChange.emit();
    this.activeEndDate = date || null;
  }
  getStartDate() {
    return Array.isArray(this.valueAsDate) && this.valueAsDate[0];
  }
  setStartDate(date) {
    const endDate = this.getEndDate();
    this.value = [(0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(date), (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.c)(endDate)];
    this.valueAsDate = [date, endDate];
    this.mostRecentRangeValue = date;
    this.calciteDatePickerRangeChange.emit();
    this.activeStartDate = date || null;
  }
  /**
   * Get an active date using the value, or current date as default
   *
   * @param value
   * @param min
   * @param max
   */
  getActiveDate(value, min, max) {
    return (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.f)(this.activeDate, min, max) || value || (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.f)(new Date(), min, max);
  }
  getActiveEndDate(value, min, max) {
    return (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.f)(this.activeEndDate, min, max) || value || (0,_date_js__WEBPACK_IMPORTED_MODULE_1__.f)(new Date(), min, max);
  }
  static get delegatesFocus() {
    return true;
  }
  static get assetsDirs() {
    return ["assets"];
  }
  get el() {
    return this;
  }
  static get watchers() {
    return {
      "activeDate": ["activeDateWatcher"],
      "valueAsDate": ["valueAsDateWatcher"],
      "min": ["onMinChanged"],
      "max": ["onMaxChanged"],
      "messageOverrides": ["onMessagesChange"],
      "effectiveLocale": ["effectiveLocaleChange", "loadLocaleData"],
      "value": ["valueHandler"]
    };
  }
  static get style() {
    return datePickerCss;
  }
}, [17, "calcite-date-picker", {
  "activeDate": [1040],
  "activeRange": [513, "active-range"],
  "value": [1025],
  "headingLevel": [514, "heading-level"],
  "valueAsDate": [1040],
  "minAsDate": [1040],
  "maxAsDate": [1040],
  "min": [513],
  "max": [513],
  "numberingSystem": [513, "numbering-system"],
  "scale": [513],
  "range": [516],
  "proximitySelectionDisabled": [516, "proximity-selection-disabled"],
  "messageOverrides": [1040],
  "messages": [1040],
  "activeEndDate": [32],
  "activeStartDate": [32],
  "dateTimeFormat": [32],
  "defaultMessages": [32],
  "effectiveLocale": [32],
  "endAsDate": [32],
  "hoverRange": [32],
  "localeData": [32],
  "mostRecentRangeValue": [32],
  "startAsDate": [32],
  "setFocus": [64],
  "reset": [64]
}]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-date-picker", "calcite-date-picker-day", "calcite-date-picker-month", "calcite-date-picker-month-header", "calcite-icon"];
  components.forEach(tagName => {
    switch (tagName) {
      case "calcite-date-picker":
        if (!customElements.get(tagName)) {
          customElements.define(tagName, DatePicker);
        }
        break;
      case "calcite-date-picker-day":
        if (!customElements.get(tagName)) {
          (0,_date_picker_day_js__WEBPACK_IMPORTED_MODULE_5__.d)();
        }
        break;
      case "calcite-date-picker-month":
        if (!customElements.get(tagName)) {
          (0,_date_picker_month_js__WEBPACK_IMPORTED_MODULE_6__.d)();
        }
        break;
      case "calcite-date-picker-month-header":
        if (!customElements.get(tagName)) {
          (0,_date_picker_month_header_js__WEBPACK_IMPORTED_MODULE_7__.d)();
        }
        break;
      case "calcite-icon":
        if (!customElements.get(tagName)) {
          (0,_icon_js__WEBPACK_IMPORTED_MODULE_8__.d)();
        }
        break;
    }
  });
}
defineCustomElement();


/***/ }),

/***/ 78952:
/*!***********************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/date.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ datePartsFromLocalizedString),
/* harmony export */   "b": () => (/* binding */ dateFromLocalizedString),
/* harmony export */   "c": () => (/* binding */ dateToISO),
/* harmony export */   "d": () => (/* binding */ datePartsFromISO),
/* harmony export */   "e": () => (/* binding */ dateFromISO),
/* harmony export */   "f": () => (/* binding */ dateFromRange),
/* harmony export */   "g": () => (/* binding */ getDaysDiff),
/* harmony export */   "h": () => (/* binding */ sameDate),
/* harmony export */   "i": () => (/* binding */ inRange),
/* harmony export */   "j": () => (/* binding */ getOrder),
/* harmony export */   "k": () => (/* binding */ formatCalendarYear),
/* harmony export */   "l": () => (/* binding */ parseCalendarYear),
/* harmony export */   "n": () => (/* binding */ nextMonth),
/* harmony export */   "p": () => (/* binding */ prevMonth),
/* harmony export */   "s": () => (/* binding */ setEndOfDay)
/* harmony export */ });
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale.js */ 9333);
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */


/**
 * Check if date is within a min and max
 *
 * @param date
 * @param min
 * @param max
 */
function inRange(date, min, max) {
  if (!date) {
    return;
  }
  const time = date.getTime();
  const afterMin = !(min instanceof Date) || time >= min.getTime();
  const beforeMax = !(max instanceof Date) || time <= max.getTime();
  return afterMin && beforeMax;
}
/**
 * Ensures date is within range,
 * returns min or max if out of bounds
 *
 * @param date
 * @param min
 * @param max
 */
function dateFromRange(date, min, max) {
  if (!(date instanceof Date)) {
    return null;
  }
  const time = date.getTime();
  const beforeMin = min instanceof Date && time < min.getTime();
  const afterMax = max instanceof Date && time > max.getTime();
  if (beforeMin) {
    return min;
  }
  if (afterMax) {
    return max;
  }
  return date;
}
/**
 * Parse an iso8601 string (YYYY-mm-dd) into a valid date.
 * TODO: handle time when time of day UI is added
 *
 * @param iso8601
 * @param isEndDate
 */
function dateFromISO(iso8601, isEndDate = false) {
  if (iso8601 instanceof Date) {
    return iso8601;
  }
  if (!iso8601 || typeof iso8601 !== "string") {
    return null;
  }
  const d = iso8601.split(/[: T-]/).map(parseFloat);
  const date = new Date(d[0], (d[1] || 1) - 1, d[2] || 1);
  date.setFullYear(d[0]);
  if (isNaN(date.getTime())) {
    throw new Error(`Invalid ISO 8601 date: "${iso8601}"`);
  }
  if (isEndDate) {
    return setEndOfDay(date);
  }
  return date;
}
/**
 * Parse a localized date string into a valid Date.
 * return false if date is invalid, or out of range
 *
 * @param value
 * @param localeData
 */
function dateFromLocalizedString(value, localeData) {
  if (!localeData) {
    return null;
  }
  const {
    separator
  } = localeData;
  const parts = parseDateString(value, localeData);
  const {
    day,
    month
  } = parts;
  const year = parseCalendarYear(parts.year, localeData);
  const date = new Date(year, month, day);
  date.setFullYear(year);
  const validDay = day > 0;
  const validMonth = month > -1;
  const validDate = !isNaN(date.getTime());
  const validLength = value.split(separator).filter(c => c).length > 2;
  const validYear = year.toString().length > 0;
  if (validDay && validMonth && validDate && validLength && validYear) {
    return date;
  }
  return null;
}
function parseCalendarYear(year, localeData) {
  return processCalendarYear(year, localeData, "read");
}
function formatCalendarYear(year, localeData) {
  return processCalendarYear(year, localeData, "write");
}
function processCalendarYear(year, localeData, mode) {
  if (localeData["default-calendar"] !== "buddhist") {
    return year;
  }
  const BUDDHIST_CALENDAR_YEAR_OFFSET = 543;
  const yearOffset = BUDDHIST_CALENDAR_YEAR_OFFSET * (mode === "read" ? -1 : 1);
  return year + yearOffset;
}
/**
 * Retrieve day, month, and year strings from a localized string
 *
 * @param string
 * @param localeData
 */
function datePartsFromLocalizedString(string, localeData) {
  const {
    separator,
    unitOrder
  } = localeData;
  const order = getOrder(unitOrder);
  const values = string.split(separator).map(part => _locale_js__WEBPACK_IMPORTED_MODULE_0__.n.delocalize(part));
  const day = values[order.indexOf("d")];
  const month = values[order.indexOf("m")];
  const year = values[order.indexOf("y")];
  return {
    day,
    month,
    year
  };
}
/**
 * Return first portion of ISO string (YYYY-mm-dd)
 *
 * @param date
 */
function dateToISO(date) {
  if (date instanceof Date) {
    return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split("T")[0];
  }
  return "";
}
/**
 * Retrieve day, month, and year strings from a ISO string (YYYY-mm-dd)
 *
 * @param string
 * @param isoDate
 */
function datePartsFromISO(isoDate) {
  const dateParts = isoDate.split("-");
  return {
    day: dateParts[2],
    month: dateParts[1],
    year: dateParts[0]
  };
}
/**
 * Check if two dates are the same day, month, year
 *
 * @param d1
 * @param d2
 */
function sameDate(d1, d2) {
  return d1 instanceof Date && d2 instanceof Date && d1.getDate() === d2.getDate() && d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear();
}
/**
 * Get a date one month in the past
 *
 * @param date
 */
function prevMonth(date) {
  const month = date.getMonth();
  const nextDate = new Date(date);
  nextDate.setMonth(month - 1);
  // date doesn't exist in new month, use last day
  if (month === nextDate.getMonth()) {
    return new Date(date.getFullYear(), month, 0);
  }
  return nextDate;
}
/**
 * Get a date one month in the future
 *
 * @param date
 */
function nextMonth(date) {
  const month = date.getMonth();
  const nextDate = new Date(date);
  nextDate.setMonth(month + 1);
  // date doesn't exist in new month, use last day
  if ((month + 2) % 7 === nextDate.getMonth() % 7) {
    return new Date(date.getFullYear(), month + 2, 0);
  }
  return nextDate;
}
/**
 * Parse numeric units for day, month, and year from a localized string
 * month starts at 0 (can pass to date constructor)
 * can return values as number or string
 *
 * @param string
 * @param localeData
 */
function parseDateString(string, localeData) {
  const {
    day,
    month,
    year
  } = datePartsFromLocalizedString(string, localeData);
  return {
    day: parseInt(day),
    month: parseInt(month) - 1,
    year: parseInt(year)
  };
}
/**
 * Based on the unitOrder string, find order of month, day, and year for locale
 *
 * @param unitOrder
 */
function getOrder(unitOrder) {
  const signifiers = ["d", "m", "y"];
  const order = unitOrder.toLowerCase();
  return signifiers.sort((a, b) => order.indexOf(a) - order.indexOf(b));
}
/**
 * Get number of days between two dates
 *
 * @param date1
 * @param date2
 */
function getDaysDiff(date1, date2) {
  const ts1 = date1.getTime();
  const ts2 = date2.getTime();
  return (ts1 - ts2) / (1000 * 3600 * 24);
}
/**
 * Set time of the day to the end.
 *
 * @param {Date} date Date.
 * @returns {Date} Date with time set to end of day .
 */
function setEndOfDay(date) {
  date.setHours(23, 59, 59, 999);
  return date;
}


/***/ }),

/***/ 2706:
/*!***********************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/icon.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "I": () => (/* binding */ Icon),
/* harmony export */   "d": () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ 40994);
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom.js */ 7499);
/* harmony import */ var _observers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observers.js */ 80709);

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */



const CSS = {
  icon: "icon",
  flipRtl: "flip-rtl"
};

/**
 * Icon data cache.
 * Exported for testing purposes.
 *
 * @private
 */
const iconCache = {};
/**
 * Icon request cache.
 * Exported for testing purposes.
 *
 * @private
 */
const requestCache = {};
const scaleToPx = {
  s: 16,
  m: 24,
  l: 32
};
function fetchIcon(_x) {
  return _fetchIcon.apply(this, arguments);
}
/**
 * Normalize the icon name to match the path data module exports.
 * Exported for testing purposes.
 *
 * @param name – an icon name that can be either kebab or camel-cased
 * @private
 */
function _fetchIcon() {
  _fetchIcon = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* ({
    icon,
    scale
  }) {
    const size = scaleToPx[scale];
    const name = normalizeIconName(icon);
    const filled = name.charAt(name.length - 1) === "F";
    const iconName = filled ? name.substring(0, name.length - 1) : name;
    const id = `${iconName}${size}${filled ? "F" : ""}`;
    if (iconCache[id]) {
      return iconCache[id];
    }
    if (!requestCache[id]) {
      requestCache[id] = fetch((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.getAssetPath)(`./assets/icon/${id}.json`)).then(resp => resp.json()).catch(() => {
        console.error(`"${id}" is not a valid calcite-ui-icon name`);
        return "";
      });
    }
    const path = yield requestCache[id];
    iconCache[id] = path;
    return path;
  });
  return _fetchIcon.apply(this, arguments);
}
function normalizeIconName(name) {
  const numberLeadingName = !isNaN(Number(name.charAt(0)));
  const parts = name.split("-");
  const kebabCased = parts.length > 0;
  if (kebabCased) {
    const firstNonDigitInPartPattern = /[a-z]/i;
    name = parts.map((part, partIndex) => {
      return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {
        const isFirstCharInName = partIndex === 0 && offset === 0;
        if (isFirstCharInName) {
          return match;
        }
        return match.toUpperCase();
      });
    }).join("");
  }
  return numberLeadingName ? `i${name}` : name;
}
const iconCss = ":host{display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}";
const Icon = /*@__PURE__*/(0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.icon = null;
    this.flipRtl = false;
    this.scale = "m";
    this.textLabel = undefined;
    this.pathData = undefined;
    this.visible = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.waitUntilVisible(() => {
      this.visible = true;
      this.loadIconPathData();
    });
  }
  disconnectedCallback() {
    this.intersectionObserver?.disconnect();
    this.intersectionObserver = null;
  }
  componentWillLoad() {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this.loadIconPathData();
    })();
  }
  render() {
    const {
      el,
      flipRtl,
      pathData,
      scale,
      textLabel
    } = this;
    const dir = (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.b)(el);
    const size = scaleToPx[scale];
    const semantic = !!textLabel;
    const paths = [].concat(pathData || "");
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.Host, {
      "aria-hidden": (0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.t)(!semantic),
      "aria-label": semantic ? textLabel : null,
      role: semantic ? "img" : null
    }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.h)("svg", {
      "aria-hidden": "true",
      class: {
        [CSS.flipRtl]: dir === "rtl" && flipRtl,
        svg: true
      },
      fill: "currentColor",
      height: "100%",
      viewBox: `0 0 ${size} ${size}`,
      width: "100%",
      xmlns: "http://www.w3.org/2000/svg"
    }, paths.map(path => typeof path === "string" ? (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.h)("path", {
      d: path
    }) : (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.h)("path", {
      d: path.d,
      opacity: "opacity" in path ? path.opacity : 1
    }))));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  loadIconPathData() {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
        icon,
        scale,
        visible
      } = _this2;
      if (!_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.Build.isBrowser || !icon || !visible) {
        return;
      }
      const pathData = yield fetchIcon({
        icon,
        scale
      });
      // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.
      if (icon !== _this2.icon) {
        return;
      }
      _this2.pathData = pathData;
    })();
  }
  waitUntilVisible(callback) {
    this.intersectionObserver = (0,_observers_js__WEBPACK_IMPORTED_MODULE_2__.c)("intersection", entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          this.intersectionObserver.disconnect();
          this.intersectionObserver = null;
          callback();
        }
      });
    }, {
      rootMargin: "50px"
    });
    if (!this.intersectionObserver) {
      callback();
      return;
    }
    this.intersectionObserver.observe(this.el);
  }
  static get assetsDirs() {
    return ["assets"];
  }
  get el() {
    return this;
  }
  static get watchers() {
    return {
      "icon": ["loadIconPathData"],
      "scale": ["loadIconPathData"]
    };
  }
  static get style() {
    return iconCss;
  }
}, [1, "calcite-icon", {
  "icon": [513],
  "flipRtl": [516, "flip-rtl"],
  "scale": [513],
  "textLabel": [1, "text-label"],
  "pathData": [32],
  "visible": [32]
}]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-icon"];
  components.forEach(tagName => {
    switch (tagName) {
      case "calcite-icon":
        if (!customElements.get(tagName)) {
          customElements.define(tagName, Icon);
        }
        break;
    }
  });
}
defineCustomElement();


/***/ })

}]);
//# sourceMappingURL=node_modules_esri_calcite-components_dist_components_calcite-input-date-picker_js.js.map