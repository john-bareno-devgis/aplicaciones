"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["node_modules_esri_calcite-components_dist_components_calcite-input-time-zone_js"],{

/***/ 9834:
/*!******************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/calcite-input-time-zone.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CalciteInputTimeZone": () => (/* binding */ CalciteInputTimeZone),
/* harmony export */   "defineCustomElement": () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ 40994);
/* harmony import */ var _label2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./label2.js */ 9873);
/* harmony import */ var _interactive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interactive.js */ 59338);
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locale.js */ 9333);
/* harmony import */ var _t9n_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./t9n.js */ 75301);
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./loadable.js */ 80483);
/* harmony import */ var _form_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./form.js */ 2015);
/* harmony import */ var _chip_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chip.js */ 70713);
/* harmony import */ var _combobox_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./combobox.js */ 93835);
/* harmony import */ var _combobox_item_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./combobox-item.js */ 97584);
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./icon.js */ 2706);

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */











const hourToMinutes = 60;
const timeZoneNameBlockList = ["CET", "CST6CDT", "EET", "EST", "EST5EDT", "Factory", "HST", "MET", "MST", "MST7MDT", "PST8PDT", "UTC", "WET"];
function timeZoneOffsetToDecimal(shortOffsetTimeZoneName) {
  const minusSign = "âˆ’";
  const hyphen = "-";
  return shortOffsetTimeZoneName.replace(":15", ".25").replace(":30", ".5").replace(":45", ".75")
  // ensures decimal string representation is parseable
  .replace(minusSign, hyphen);
}
function toOffsetValue(timeZoneName, referenceDateInMs) {
  // we use "en-US" to allow us to reliably remove the standard time token
  const offset = getTimeZoneShortOffset(timeZoneName, "en-US", referenceDateInMs).replace("GMT", "");
  if (offset === "") {
    return 0;
  }
  return Number(timeZoneOffsetToDecimal(offset)) * hourToMinutes;
}
function getUserTimeZoneOffset() {
  const localDate = new Date();
  return localDate.getTimezoneOffset() * -1;
}
function getUserTimeZoneName() {
  const dateFormatter = new Intl.DateTimeFormat();
  return dateFormatter.resolvedOptions().timeZone;
}
/**
 * The lazy-loaded timezone-groups lib to be used across instances.
 */
let timeZoneGroups;
function createTimeZoneItems(_x, _x2, _x3, _x4) {
  return _createTimeZoneItems.apply(this, arguments);
}
/**
 * Exported for testing purposes only
 *
 * @internal
 */
function _createTimeZoneItems() {
  _createTimeZoneItems = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (locale, messages, mode, referenceDate) {
    const referenceDateInMs = referenceDate.getTime();
    const timeZoneNames = Intl.supportedValuesOf("timeZone");
    if (mode === "offset") {
      if (!timeZoneGroups) {
        timeZoneGroups = Promise.all([__webpack_require__.e(/*! import() */ "node_modules_esri_calcite-components_dist_components_index3_js").then(__webpack_require__.bind(__webpack_require__, /*! ./index3.js */ 89934)), __webpack_require__.e(/*! import() */ "node_modules_esri_calcite-components_dist_components_index4_js").then(__webpack_require__.bind(__webpack_require__, /*! ./index4.js */ 83788))]);
      }
      return timeZoneGroups.then( /*#__PURE__*/function () {
        var _ref = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* ([{
          groupTimeZones
        }, {
          DateEngine
        }]) {
          const timeZoneGroups = yield groupTimeZones({
            dateEngine: new DateEngine(),
            groupDateRange: 1,
            startDate: new Date(referenceDateInMs).toISOString()
          });
          const listFormatter = new Intl.ListFormat(locale, {
            style: "long",
            type: "conjunction"
          });
          // we remove blocked entries from tzs and adjust label indices accordingly
          timeZoneGroups.forEach(group => {
            const indexOffsets = [];
            let removedSoFar = 0;
            group.tzs.forEach((tz, index) => {
              if (timeZoneNameBlockList.includes(tz)) {
                removedSoFar++;
              }
              indexOffsets[index] = removedSoFar;
            });
            group.tzs = group.tzs.filter(tz => !timeZoneNameBlockList.includes(tz));
            group.labelTzIndices = group.labelTzIndices.map(index => index - indexOffsets[index]).filter(index => index >= 0 && index < group.tzs.length);
          });
          return timeZoneGroups.map(({
            labelTzIndices,
            tzs
          }) => {
            const groupRepTz = tzs[0];
            const decimalOffset = timeZoneOffsetToDecimal(getTimeZoneShortOffset(groupRepTz, locale, referenceDateInMs));
            const value = toOffsetValue(groupRepTz, referenceDateInMs);
            const tzLabels = labelTzIndices.map(index => {
              const timeZone = tzs[index];
              const timeZoneLabel = messages[timeZone];
              return timeZoneLabel ||
              // get city token
              timeZone.split("/").pop();
            });
            const label = createTimeZoneOffsetLabel(messages, decimalOffset, listFormatter.format(tzLabels));
            return {
              label,
              value,
              filterValue: tzs.map(tz => toUserFriendlyName(tz))
            };
          }).filter(group => !!group).sort((groupA, groupB) => groupA.value - groupB.value);
        });
        return function (_x5) {
          return _ref.apply(this, arguments);
        };
      }());
    }
    return timeZoneNames.map(timeZone => {
      const label = toUserFriendlyName(timeZone);
      const value = timeZone;
      return {
        label,
        value,
        filterValue: timeZone
      };
    }).filter(group => !!group).sort();
  });
  return _createTimeZoneItems.apply(this, arguments);
}
function toUserFriendlyName(timeZoneName) {
  return timeZoneName.replace(/_/g, " ");
}
function createTimeZoneOffsetLabel(messages, offsetLabel, groupLabel) {
  return messages.timeZoneLabel.replace("{offset}", offsetLabel).replace("{cities}", groupLabel);
}
function getTimeZoneShortOffset(timeZone, locale, referenceDateInMs = Date.now()) {
  const dateTimeFormat = (0,_locale_js__WEBPACK_IMPORTED_MODULE_3__.b)(locale, {
    timeZone,
    timeZoneName: "shortOffset"
  });
  const parts = dateTimeFormat.formatToParts(referenceDateInMs);
  return parts.find(({
    type
  }) => type === "timeZoneName").value;
}
const inputTimeZoneCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:block}:host([hidden]){display:none}[hidden]{display:none}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";
const InputTimeZone = /*@__PURE__*/(0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteInputTimeZoneBeforeClose = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.createEvent)(this, "calciteInputTimeZoneBeforeClose", 6);
    this.calciteInputTimeZoneBeforeOpen = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.createEvent)(this, "calciteInputTimeZoneBeforeOpen", 6);
    this.calciteInputTimeZoneChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.createEvent)(this, "calciteInputTimeZoneChange", 6);
    this.calciteInputTimeZoneClose = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.createEvent)(this, "calciteInputTimeZoneClose", 6);
    this.calciteInputTimeZoneOpen = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.createEvent)(this, "calciteInputTimeZoneOpen", 6);
    this.setComboboxRef = el => {
      this.comboboxEl = el;
    };
    this.onComboboxBeforeClose = event => {
      event.stopPropagation();
      this.calciteInputTimeZoneBeforeClose.emit();
    };
    this.onComboboxBeforeOpen = event => {
      event.stopPropagation();
      this.calciteInputTimeZoneBeforeOpen.emit();
    };
    this.onComboboxChange = event => {
      event.stopPropagation();
      const combobox = event.target;
      const selected = this.findTimeZoneItem(combobox.selectedItems[0].getAttribute("data-value"));
      const selectedValue = `${selected.value}`;
      if (this.value === selectedValue) {
        return;
      }
      this.value = selectedValue;
      this.selectedTimeZoneItem = selected;
      this.calciteInputTimeZoneChange.emit();
    };
    this.onComboboxClose = event => {
      event.stopPropagation();
      this.open = false;
      this.calciteInputTimeZoneClose.emit();
    };
    this.onComboboxOpen = event => {
      this.open = true;
      event.stopPropagation();
      this.calciteInputTimeZoneOpen.emit();
    };
    this.disabled = false;
    this.form = undefined;
    this.maxItems = 0;
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.mode = "offset";
    this.name = undefined;
    this.open = false;
    this.overlayPositioning = "absolute";
    this.referenceDate = undefined;
    this.required = false;
    this.scale = "m";
    this.value = undefined;
    this.defaultMessages = undefined;
    this.effectiveLocale = "";
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  handleTimeZoneItemPropsChange() {
    this.createTimeZoneItems();
  }
  handleValueChange(value, oldValue) {
    const timeZoneItem = this.findTimeZoneItem(value);
    if (!timeZoneItem) {
      this.value = oldValue;
      return;
    }
    this.selectedTimeZoneItem = timeZoneItem;
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  setFocus() {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield (0,_loadable_js__WEBPACK_IMPORTED_MODULE_5__.c)(_this);
      yield _this.comboboxEl.setFocus();
    })();
  }
  effectiveLocaleWatcher() {
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_4__.u)(this, this.effectiveLocale);
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  findTimeZoneItem(value) {
    const valueToMatch = value;
    return this.timeZoneItems.find(({
      value
    }) =>
    // intentional == to match string to number
    value == valueToMatch);
  }
  createTimeZoneItems() {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (!_this2.effectiveLocale || !_this2.messages) {
        return [];
      }
      return createTimeZoneItems(_this2.effectiveLocale, _this2.messages, _this2.mode, _this2.referenceDate instanceof Date ? _this2.referenceDate : new Date(_this2.referenceDate ?? Date.now()));
    })();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    (0,_form_js__WEBPACK_IMPORTED_MODULE_6__.c)(this);
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_1__.c)(this);
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
  }
  disconnectedCallback() {
    (0,_form_js__WEBPACK_IMPORTED_MODULE_6__.d)(this);
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_4__.d)(this);
  }
  componentWillLoad() {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      (0,_loadable_js__WEBPACK_IMPORTED_MODULE_5__.a)(_this3);
      yield (0,_t9n_js__WEBPACK_IMPORTED_MODULE_4__.s)(_this3);
      _this3.timeZoneItems = yield _this3.createTimeZoneItems();
      const fallbackValue = _this3.mode === "offset" ? getUserTimeZoneOffset() : getUserTimeZoneName();
      const valueToMatch = _this3.value ?? fallbackValue;
      _this3.selectedTimeZoneItem = _this3.findTimeZoneItem(valueToMatch);
      if (!_this3.selectedTimeZoneItem) {
        _this3.selectedTimeZoneItem = _this3.findTimeZoneItem(fallbackValue);
      }
      const selectedValue = `${_this3.selectedTimeZoneItem.value}`;
      (0,_form_js__WEBPACK_IMPORTED_MODULE_6__.a)(_this3, selectedValue);
      _this3.value = selectedValue;
    })();
  }
  componentDidLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_5__.s)(this);
  }
  componentDidRender() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.u)(this);
  }
  render() {
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.Host, null, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.h)("calcite-combobox", {
      clearDisabled: true,
      disabled: this.disabled,
      label: this.messages.chooseTimeZone,
      lang: this.effectiveLocale,
      maxItems: this.maxItems,
      onCalciteComboboxBeforeClose: this.onComboboxBeforeClose,
      onCalciteComboboxBeforeOpen: this.onComboboxBeforeOpen,
      onCalciteComboboxChange: this.onComboboxChange,
      onCalciteComboboxClose: this.onComboboxClose,
      onCalciteComboboxOpen: this.onComboboxOpen,
      open: this.open,
      overlayPositioning: this.overlayPositioning,
      scale: this.scale,
      selectionMode: "single-persist",
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setComboboxRef
    }, this.timeZoneItems.map(group => {
      const selected = this.selectedTimeZoneItem === group;
      const {
        label,
        value
      } = group;
      return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.h)("calcite-combobox-item", {
        "data-value": value,
        key: label,
        selected: selected,
        textLabel: label,
        value: `${group.filterValue}`
      });
    })), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_11__.h)(_form_js__WEBPACK_IMPORTED_MODULE_6__.H, {
      component: this
    }));
  }
  static get delegatesFocus() {
    return true;
  }
  static get assetsDirs() {
    return ["assets"];
  }
  get el() {
    return this;
  }
  static get watchers() {
    return {
      "messageOverrides": ["onMessagesChange"],
      "effectiveLocale": ["handleTimeZoneItemPropsChange", "effectiveLocaleWatcher"],
      "messages": ["handleTimeZoneItemPropsChange"],
      "mode": ["handleTimeZoneItemPropsChange"],
      "referenceDate": ["handleTimeZoneItemPropsChange"],
      "value": ["handleValueChange"]
    };
  }
  static get style() {
    return inputTimeZoneCss;
  }
}, [17, "calcite-input-time-zone", {
  "disabled": [516],
  "form": [513],
  "maxItems": [514, "max-items"],
  "messages": [1040],
  "messageOverrides": [1040],
  "mode": [513],
  "name": [513],
  "open": [1540],
  "overlayPositioning": [513, "overlay-positioning"],
  "referenceDate": [1, "reference-date"],
  "required": [516],
  "scale": [513],
  "value": [1025],
  "defaultMessages": [32],
  "effectiveLocale": [32],
  "setFocus": [64]
}]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-input-time-zone", "calcite-chip", "calcite-combobox", "calcite-combobox-item", "calcite-icon"];
  components.forEach(tagName => {
    switch (tagName) {
      case "calcite-input-time-zone":
        if (!customElements.get(tagName)) {
          customElements.define(tagName, InputTimeZone);
        }
        break;
      case "calcite-chip":
        if (!customElements.get(tagName)) {
          (0,_chip_js__WEBPACK_IMPORTED_MODULE_7__.d)();
        }
        break;
      case "calcite-combobox":
        if (!customElements.get(tagName)) {
          (0,_combobox_js__WEBPACK_IMPORTED_MODULE_8__.d)();
        }
        break;
      case "calcite-combobox-item":
        if (!customElements.get(tagName)) {
          (0,_combobox_item_js__WEBPACK_IMPORTED_MODULE_9__.d)();
        }
        break;
      case "calcite-icon":
        if (!customElements.get(tagName)) {
          (0,_icon_js__WEBPACK_IMPORTED_MODULE_10__.d)();
        }
        break;
    }
  });
}
defineCustomElement$1();
const CalciteInputTimeZone = InputTimeZone;
const defineCustomElement = defineCustomElement$1;


/***/ })

}]);
//# sourceMappingURL=node_modules_esri_calcite-components_dist_components_calcite-input-time-zone_js.js.map