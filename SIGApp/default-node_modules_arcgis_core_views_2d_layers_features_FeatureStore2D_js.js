"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["default-node_modules_arcgis_core_views_2d_layers_features_FeatureStore2D_js"],{

/***/ 30248:
/*!*********************************************************!*\
  !*** ./node_modules/@arcgis/core/core/CircularArray.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class t {
  constructor(t) {
    this.size = 0, this._start = 0, this.maxSize = t, this._buffer = new Array(t);
  }
  get entries() {
    return this._buffer;
  }
  enqueue(t) {
    if (this.size === this.maxSize) {
      const s = this._buffer[this._start];
      return this._buffer[this._start] = t, this._start = (this._start + 1) % this.maxSize, s;
    }
    return this._buffer[(this._start + this.size++) % this.maxSize] = t, null;
  }
  dequeue() {
    if (0 === this.size) return null;
    const t = this._buffer[this._start];
    return this._buffer[this._start] = null, this.size--, this._start = (this._start + 1) % this.maxSize, t;
  }
  peek() {
    return 0 === this.size ? null : this._buffer[this._start];
  }
  find(t) {
    if (0 === this.size) return null;
    for (const s of this._buffer) if (null != s && t(s)) return s;
    return null;
  }
  clear(t) {
    let s = this.dequeue();
    for (; null != s;) t && t(s), s = this.dequeue();
  }
}


/***/ }),

/***/ 58553:
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/arcade/callExpressionWithCursor.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/Logger.js */ 28191);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/

function r(r, t, a) {
  if (null == r) return null;
  const n = t.readArcadeFeature();
  t.contextTimeZone = a.$view?.timeZone;
  try {
    return r.evaluate({
      ...a,
      $feature: n
    }, r.services);
  } catch (u) {
    return _core_Logger_js__WEBPACK_IMPORTED_MODULE_0__["default"].getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:", u), null;
  }
}


/***/ }),

/***/ 59690:
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/FeatureStore2D.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FeatureStore2D": () => (/* binding */ u),
/* harmony export */   "featureAdapter": () => (/* binding */ I)
/* harmony export */ });
/* harmony import */ var _core_CircularArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/CircularArray.js */ 30248);
/* harmony import */ var _core_Evented_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Evented.js */ 95442);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/has.js */ 67087);
/* harmony import */ var _chunks_rbush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../chunks/rbush.js */ 34662);
/* harmony import */ var _geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../geometry/support/aaBoundingBox.js */ 73327);
/* harmony import */ var _Store2D_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Store2D.js */ 98052);
/* harmony import */ var _support_FeatureSetReaderPBFIndirect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./support/FeatureSetReaderPBFIndirect.js */ 10002);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/







const o = (0,_geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_4__.create)();
function d(t, e) {
  return t << 16 | e;
}
function h(t) {
  return (4294901760 & t) >>> 16;
}
function c(t) {
  return 65535 & t;
}
const I = {
  getObjectId: t => t.getObjectId(),
  getAttributes: t => t.readAttributes(),
  getAttribute: (t, e) => t.readAttribute(e),
  getAttributeAsTimestamp: (t, e) => t.readAttributeAsTimestamp(e),
  cloneWithGeometry: (t, e) => t,
  getGeometry: t => t.readHydratedGeometry(),
  getCentroid: (t, e) => t.readCentroid()
};
class u extends _Store2D_js__WEBPACK_IMPORTED_MODULE_5__.Store2D {
  constructor(a, r, n) {
    super(a, r), this.featureAdapter = I, this.events = new _core_Evented_js__WEBPACK_IMPORTED_MODULE_1__["default"](), this._featureSetsByInstance = new Map(), this._objectIdToDisplayId = new Map(), this._spatialIndexInvalid = !0, this._indexSearchCache = new _core_CircularArray_js__WEBPACK_IMPORTED_MODULE_0__["default"](50), this._index = (0,_chunks_rbush_js__WEBPACK_IMPORTED_MODULE_3__.r)(9, t => ({
      minX: this._storage.getXMin(t),
      minY: this._storage.getYMin(t),
      maxX: this._storage.getXMax(t),
      maxY: this._storage.getYMax(t)
    })), this.mode = n;
  }
  get storeStatistics() {
    let t = 0,
      e = 0,
      s = 0;
    return this.forEach(a => {
      const r = a.readGeometry();
      r && (e += r.isPoint ? 1 : r.lengths.reduce((t, e) => t + e, 0), s += r.isPoint ? 1 : r.lengths.length, t += 1);
    }), {
      featureCount: t,
      vertexCount: e,
      ringCount: s
    };
  }
  hasInstance(t) {
    return this._featureSetsByInstance.has(t);
  }
  onTileData(t, e, s) {
    if (null == e.addOrUpdate) return e;
    if (e.addOrUpdate.attachStorage(this._storage), "snapshot" === this.mode) {
      const a = e.addOrUpdate.getCursor();
      for (; a.next();) {
        const e = a.getDisplayId();
        this.setComputedAttributes(this._storage, a, e, t.scale, s);
      }
      return e;
    }
    this._featureSetsByInstance.set(e.addOrUpdate.instance, e.addOrUpdate);
    const a = e.addOrUpdate.getCursor();
    for (; a.next();) this._insertFeature(a, t.scale, s);
    return this._spatialIndexInvalid = !0, this.events.emit("changed"), e;
  }
  search(t) {
    this._rebuildIndex();
    const e = t.id,
      s = this._indexSearchCache.find(t => t.tileId === e);
    if (null != s) return s.readers;
    const a = new Map(),
      r = this._searchIndex(t.bounds),
      n = [];
    for (const i of r) {
      const t = this._storage.getInstanceId(i),
        e = h(t),
        s = c(t);
      a.has(e) || a.set(e, []);
      a.get(e).push(s);
    }
    return a.forEach((t, e) => {
      const s = this._featureSetsByInstance.get(e);
      n.push(_support_FeatureSetReaderPBFIndirect_js__WEBPACK_IMPORTED_MODULE_6__.FeatureSetReaderIndirect.from(s, t));
    }), this._indexSearchCache.enqueue({
      tileId: e,
      readers: n
    }), n;
  }
  insert(t) {
    const e = t.getCursor(),
      s = this._storage;
    for (; e.next();) {
      const t = d(e.instance, e.getIndex()),
        a = e.getObjectId(),
        r = this._objectIdToDisplayId.get(a) ?? this._storage.createDisplayId();
      e.setDisplayId(r), s.setInstanceId(r, t), this._objectIdToDisplayId.set(a, r);
    }
    this._featureSetsByInstance.set(t.instance, t), this._spatialIndexInvalid = !0;
  }
  remove(t) {
    const e = this._objectIdToDisplayId.get(t);
    if (!e) return;
    const s = this._storage.getInstanceId(e),
      a = c(s),
      r = h(s),
      n = this._featureSetsByInstance.get(r);
    this._objectIdToDisplayId.delete(t), this._storage.releaseDisplayId(e), n.removeAtIndex(a), n.isEmpty && this._featureSetsByInstance.delete(r), this._spatialIndexInvalid = !0;
  }
  forEach(t) {
    this._objectIdToDisplayId.forEach(e => {
      const s = this._storage.getInstanceId(e),
        a = this._lookupFeature(s);
      t(a);
    });
  }
  forEachUnsafe(t) {
    this._objectIdToDisplayId.forEach(e => {
      const s = this._storage.getInstanceId(e),
        a = h(s),
        r = c(s),
        n = this._getFeatureSet(a);
      n.setIndex(r), t(n);
    });
  }
  forEachInBounds(t, e) {
    const s = this._searchIndex(t);
    for (const a of s) {
      e(this.lookupFeatureByDisplayId(a, this._storage));
    }
  }
  forEachBounds(t, e) {
    this._rebuildIndex();
    for (const s of t) {
      if (!s.readGeometry()) continue;
      const t = s.getDisplayId();
      (0,_geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_4__.fromRectValues)(o, this._storage.getXMin(t), this._storage.getYMin(t), this._storage.getXMax(t), this._storage.getYMax(t)), e(o);
    }
  }
  sweepFeatures(t, e, s) {
    this._spatialIndexInvalid = !0, this._objectIdToDisplayId.forEach((a, r) => {
      t.has(a) || (e.releaseDisplayId(a), s && s.unsetAttributeData(a), this._objectIdToDisplayId.delete(r));
    }), this.events.emit("changed");
  }
  sweepFeatureSets(t) {
    this._spatialIndexInvalid = !0, this._featureSetsByInstance.forEach((e, s) => {
      t.has(s) || this._featureSetsByInstance.delete(s);
    });
  }
  lookupObjectId(t, e) {
    const s = this.lookupFeatureByDisplayId(t, e);
    return null == s ? null : s.getObjectId();
  }
  lookupDisplayId(t) {
    return this._objectIdToDisplayId.get(t);
  }
  lookupFeatureByDisplayId(t, e) {
    const s = e.getInstanceId(t);
    return this._lookupFeature(s);
  }
  lookupByDisplayIdUnsafe(t) {
    const e = this._storage.getInstanceId(t),
      s = h(e),
      a = c(e),
      r = this._getFeatureSet(s);
    return r ? (r.setIndex(a), r) : null;
  }
  _insertFeature(t, e, s) {
    const a = this._storage,
      r = t.getObjectId(),
      n = d(t.instance, t.getIndex());
    a.getInstanceId(t.getDisplayId());
    let i = this._objectIdToDisplayId.get(r);
    i || (i = a.createDisplayId(), this._objectIdToDisplayId.set(r, i), this._spatialIndexInvalid = !0), t.setDisplayId(i), a.setInstanceId(i, n), this.setComputedAttributes(a, t, i, e, s);
  }
  _searchIndex(t) {
    this._rebuildIndex();
    const e = {
      minX: t[0],
      minY: t[1],
      maxX: t[2],
      maxY: t[3]
    };
    return this._index.search(e);
  }
  _rebuildIndex() {
    if (!this._spatialIndexInvalid) return;
    const t = [];
    "snapshot" === this.mode ? this._featureSetsByInstance.forEach(e => {
      const s = e.getCursor();
      for (; s.next();) {
        const e = s.getDisplayId();
        this._storage.setBounds(e, s) && t.push(e);
      }
    }) : this._objectIdToDisplayId.forEach(e => {
      const s = this._storage.getInstanceId(e);
      this._storage.setBounds(e, this._lookupFeature(s)) && t.push(e);
    }), this._index.clear(), this._index.load(t), this._indexSearchCache.clear(), this._spatialIndexInvalid = !1;
  }
  _lookupFeature(t) {
    const e = h(t),
      s = this._getFeatureSet(e);
    if (!s) return;
    const a = s.getCursor(),
      r = c(t);
    return a.setIndex(r), a;
  }
  _getFeatureSet(t) {
    return this._featureSetsByInstance.get(t);
  }
}


/***/ }),

/***/ 98052:
/*!***********************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/Store2D.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Store2D": () => (/* binding */ a)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/has.js */ 67087);
/* harmony import */ var _core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/accessorSupport/diffUtils.js */ 51118);
/* harmony import */ var _support_arcadeOnDemand_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../support/arcadeOnDemand.js */ 77238);
/* harmony import */ var _arcade_callExpressionWithCursor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../arcade/callExpressionWithCursor.js */ 58553);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/




class a {
  constructor(e, s) {
    this._canCacheExpressionValue = !1, this._sourceInfo = e, this._storage = s, this._bitsets = {
      computed: s.getBitset(s.createBitset())
    };
  }
  get storage() {
    return this._storage;
  }
  invalidate() {
    this._bitsets.computed.clear();
  }
  updateSchema(t, i) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const a = (0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_2__.diff)(_this._schema, i);
      if (_this._schema = i, !i || null == a || !(0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_2__.hasDiff)(a, "attributes")) return;
      (0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("esri-2d-update-debug") && console.debug("Applying Update - Store:", a), _this._bitsets.computed.clear(), t.targets[i.name] = !0;
      const r = i.attributes,
        o = [],
        c = [];
      for (const e in r) {
        const s = r[e];
        switch (s.type) {
          case "field":
            break;
          case "expression":
            o.push(_this._createArcadeComputedField(s));
            break;
          case "label-expression":
            o.push(_this._createLabelArcadeComputedField(s));
            break;
          case "statistic":
            c.push(s);
        }
      }
      _this._computedFields = yield Promise.all(o), _this._canCacheExpressionValue = !_this._computedFields.some(e => "expression" === e.type && null != e.expression && e.expression.referencesScale()), _this._statisticFields = c;
    })();
  }
  setComputedAttributes(e, s, t, i, a) {
    const r = this._bitsets.computed;
    if (!this._canCacheExpressionValue || !r.has(t)) {
      r.set(t);
      for (const r of this._computedFields) {
        const o = this._evaluateField(s, r, i, a);
        switch (r.resultType) {
          case "numeric":
            e.setComputedNumericAtIndex(t, r.fieldIndex, o);
            break;
          case "string":
            e.setComputedStringAtIndex(t, r.fieldIndex, o);
        }
      }
    }
  }
  _createArcadeComputedField(e) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const s = _this2._sourceInfo.spatialReference,
        i = _this2._sourceInfo.fieldsIndex;
      return {
        ...e,
        expression: yield (0,_support_arcadeOnDemand_js__WEBPACK_IMPORTED_MODULE_3__.createRendererExpression)(e.valueExpression, s, i)
      };
    })();
  }
  _createLabelArcadeComputedField(e) {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const s = _this3._sourceInfo.spatialReference,
        t = _this3._sourceInfo.fieldsIndex,
        {
          createLabelFunction: i
        } = yield __webpack_require__.e(/*! import() */ "node_modules_arcgis_core_layers_support_labelFormatUtils_js").then(__webpack_require__.bind(__webpack_require__, /*! ../../../../layers/support/labelFormatUtils.js */ 16674)),
        a = yield i(e.label, t, s);
      return {
        ...e,
        builder: a
      };
    })();
  }
  _evaluateField(e, s, t, a) {
    switch (s.type) {
      case "label-expression":
        {
          const t = e.readArcadeFeature();
          return s.builder.evaluate(t, a) || "";
        }
      case "expression":
        {
          const {
            expression: r
          } = s;
          return (0,_arcade_callExpressionWithCursor_js__WEBPACK_IMPORTED_MODULE_4__["default"])(r, e, {
            $view: {
              scale: t,
              timeZone: a
            }
          });
        }
    }
  }
}


/***/ }),

/***/ 10002:
/*!***************************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/FeatureSetReaderPBFIndirect.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FeatureSetReaderIndirect": () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _FeatureSetReader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FeatureSetReader.js */ 80074);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/

class r extends _FeatureSetReader_js__WEBPACK_IMPORTED_MODULE_0__.FeatureSetReader {
  static from(e, t) {
    return new r(e.copy(), t);
  }
  constructor(r, t) {
    super(_FeatureSetReader_js__WEBPACK_IMPORTED_MODULE_0__.FeatureSetReader.createInstance(), r.fullSchema()), this._currentIndex = -1, this._reader = r, this._indices = t;
  }
  get fields() {
    return this._reader.fields;
  }
  get hasNext() {
    return this._currentIndex + 1 < this._indices.length;
  }
  getSize() {
    return this._indices.length;
  }
  getCursor() {
    return this.copy();
  }
  copy() {
    const e = new r(this._reader.copy(), this._indices);
    return e._currentIndex = this._currentIndex, e;
  }
  next() {
    for (; this._nextIndex() && !this._reader._getExists(););
    return this._currentIndex < this._indices.length;
  }
  _nextIndex() {
    return ++this._currentIndex < this._indices.length && (this._reader.setIndex(this._indices[this._currentIndex]), !0);
  }
  setArcadeSpatialReference(e) {
    this._reader.setArcadeSpatialReference(e);
  }
  attachStorage(e) {
    this._reader.attachStorage(e);
  }
  get geometryType() {
    return this._reader.geometryType;
  }
  get hasFeatures() {
    return this._reader.hasFeatures;
  }
  get exceededTransferLimit() {
    return this._reader.exceededTransferLimit;
  }
  get hasZ() {
    return this._reader.hasZ;
  }
  get hasM() {
    return this._reader.hasM;
  }
  get contextTimeZone() {
    return this._reader.contextTimeZone;
  }
  set contextTimeZone(e) {
    this._reader.contextTimeZone = e;
  }
  getStorage() {
    return this._reader.getStorage();
  }
  getComputedNumeric(e) {
    return this._reader.getComputedNumericAtIndex(0);
  }
  setComputedNumeric(e, r) {
    return this._reader.setComputedNumericAtIndex(r, 0);
  }
  getComputedString(e) {
    return this._reader.getComputedStringAtIndex(0);
  }
  setComputedString(e, r) {
    return this._reader.setComputedStringAtIndex(0, r);
  }
  getComputedNumericAtIndex(e) {
    return this._reader.getComputedNumericAtIndex(e);
  }
  setComputedNumericAtIndex(e, r) {
    this._reader.setComputedNumericAtIndex(e, r);
  }
  getComputedStringAtIndex(e) {
    return this._reader.getComputedStringAtIndex(e);
  }
  setComputedStringAtIndex(e, r) {
    return this._reader.setComputedStringAtIndex(e, r);
  }
  transform(e, r, t, d) {
    const a = this.copy();
    return a._reader = this._reader.transform(e, r, t, d), a;
  }
  readAttribute(e, r = !1) {
    return this._reader.readAttribute(e, r);
  }
  readAttributes() {
    return this._reader.readAttributes();
  }
  joinAttributes(e) {
    return this._reader.joinAttributes(e);
  }
  readArcadeFeature() {
    return this._reader.readArcadeFeature();
  }
  geometry() {
    return this._reader.geometry();
  }
  field(e) {
    return this.readAttribute(e, !0);
  }
  hasField(e) {
    return this._reader.hasField(e);
  }
  setField(e, r) {
    return this._reader.setField(e, r);
  }
  keys() {
    return this._reader.keys();
  }
  castToText(e = !1) {
    return this._reader.castToText(e);
  }
  getQuantizationTransform() {
    return this._reader.getQuantizationTransform();
  }
  getAttributeHash() {
    return this._reader.getAttributeHash();
  }
  getObjectId() {
    return this._reader.getObjectId();
  }
  getDisplayId() {
    return this._reader.getDisplayId();
  }
  setDisplayId(e) {
    return this._reader.setDisplayId(e);
  }
  getGroupId() {
    return this._reader.getGroupId();
  }
  setGroupId(e) {
    return this._reader.setGroupId(e);
  }
  getXHydrated() {
    return this._reader.getXHydrated();
  }
  getYHydrated() {
    return this._reader.getYHydrated();
  }
  getX() {
    return this._reader.getX();
  }
  getY() {
    return this._reader.getY();
  }
  setIndex(e) {
    return this._reader.setIndex(e);
  }
  getIndex() {
    return this._reader.getIndex();
  }
  readLegacyFeature() {
    return this._reader.readLegacyFeature();
  }
  readOptimizedFeature() {
    return this._reader.readOptimizedFeature();
  }
  readLegacyPointGeometry() {
    return this._reader.readLegacyPointGeometry();
  }
  readLegacyGeometry() {
    return this._reader.readLegacyGeometry();
  }
  readLegacyCentroid() {
    return this._reader.readLegacyCentroid();
  }
  readGeometryArea() {
    return this._reader.readGeometryArea();
  }
  readUnquantizedGeometry() {
    return this._reader.readUnquantizedGeometry();
  }
  readHydratedGeometry() {
    return this._reader.readHydratedGeometry();
  }
  readGeometry() {
    return this._reader.readGeometry();
  }
  readCentroid() {
    return this._reader.readCentroid();
  }
  _readAttribute(e, r) {
    throw new Error("Error: Should not be called. Underlying _reader should be used instead");
  }
  _readAttributes() {
    throw new Error("Error: Should not be called. Underlying _reader should be used instead");
  }
}


/***/ })

}]);
//# sourceMappingURL=default-node_modules_arcgis_core_views_2d_layers_features_FeatureStore2D_js.js.map