"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["default-node_modules_arcgis_core_views_webgl_FramebufferObject_js"],{

/***/ 10615:
/*!***************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/BufferObject.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BufferObject": () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/arrayUtils.js */ 19420);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Logger.js */ 28191);
/* harmony import */ var _core_typedArrayUtil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/typedArrayUtil.js */ 13878);
/* harmony import */ var _checkWebGLError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./checkWebGLError.js */ 4907);
/* harmony import */ var _contextUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contextUtils.js */ 40331);
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./enums.js */ 69923);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/






const _ = _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.views.webgl.BufferObject");
class h {
  static createIndex(e, t, r) {
    return new h(e, _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.ELEMENT_ARRAY_BUFFER, t, r);
  }
  static createVertex(e, t, r) {
    return new h(e, _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.ARRAY_BUFFER, t, r);
  }
  static createUniform(e, t, r) {
    if (e.type !== _contextUtils_js__WEBPACK_IMPORTED_MODULE_5__.ContextType.WEBGL2) throw new Error("Uniform buffers are supported in WebGL2 only!");
    return new h(e, _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.UNIFORM_BUFFER, t, r);
  }
  static createPixelPack(e, t = _enums_js__WEBPACK_IMPORTED_MODULE_6__.Usage.STREAM_READ, r) {
    if (e.type !== _contextUtils_js__WEBPACK_IMPORTED_MODULE_5__.ContextType.WEBGL2) throw new Error("Pixel pack buffers are supported in WebGL2 only!");
    const i = new h(e, _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.PIXEL_PACK_BUFFER, t);
    return r && i.setSize(r), i;
  }
  static createPixelUnpack(e, t = _enums_js__WEBPACK_IMPORTED_MODULE_6__.Usage.STREAM_DRAW, r) {
    if (e.type !== _contextUtils_js__WEBPACK_IMPORTED_MODULE_5__.ContextType.WEBGL2) throw new Error("Pixel unpack buffers are supported in WebGL2 only!");
    return new h(e, _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.PIXEL_UNPACK_BUFFER, t, r);
  }
  constructor(e, t, r, i) {
    this._context = e, this.bufferType = t, this.usage = r, this._glName = null, this._size = -1, this._indexType = void 0, e.instanceCounter.increment(_enums_js__WEBPACK_IMPORTED_MODULE_6__.ResourceType.BufferObject, this), this._glName = this._context.gl.createBuffer(), (0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_4__.checkWebGLError)(this._context.gl), i && this.setData(i);
  }
  get glName() {
    return this._glName;
  }
  get size() {
    return this._size;
  }
  get indexType() {
    return this._indexType;
  }
  get byteLength() {
    return this.bufferType === _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.ELEMENT_ARRAY_BUFFER ? this._indexType === _enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_INT ? 4 * this._size : 2 * this._size : this._size;
  }
  get _isVAOAware() {
    return this.bufferType === _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.ELEMENT_ARRAY_BUFFER || this.bufferType === _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.ARRAY_BUFFER;
  }
  dispose() {
    if (this._context?.gl) {
      if (this._glName) {
        this._context.gl.deleteBuffer(this._glName), this._glName = null;
      }
      this._context.instanceCounter.decrement(_enums_js__WEBPACK_IMPORTED_MODULE_6__.ResourceType.BufferObject, this), this._context = null;
    } else this._glName && _.warn("Leaked WebGL buffer object");
  }
  setSize(e, t = null) {
    if (e <= 0 && _.error("Buffer size needs to be positive!"), this.bufferType === _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.ELEMENT_ARRAY_BUFFER && null != t) switch (this._indexType = t, t) {
      case _enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_SHORT:
        e *= 2;
        break;
      case _enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_INT:
        e *= 4;
    }
    this._setBufferData(e);
  }
  setData(e) {
    if (!e) return;
    let t = e.byteLength;
    this.bufferType === _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.ELEMENT_ARRAY_BUFFER && ((0,_core_typedArrayUtil_js__WEBPACK_IMPORTED_MODULE_3__.isUint16Array)(e) && (t /= 2, this._indexType = _enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_SHORT), (0,_core_typedArrayUtil_js__WEBPACK_IMPORTED_MODULE_3__.isUint32Array)(e) && (t /= 4, this._indexType = _enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_INT)), this._setBufferData(t, e);
  }
  _setBufferData(e, t = null) {
    this._size = e;
    const r = this._context.getBoundVAO();
    this._isVAOAware && this._context.bindVAO(null), this._context.bindBuffer(this);
    const i = this._context.gl;
    null != t ? i.bufferData(this.bufferType, t, this.usage) : i.bufferData(this.bufferType, e, this.usage), (0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_4__.checkWebGLError)(i), this._isVAOAware && this._context.bindVAO(r);
  }
  setSubData(e, t, r, i) {
    if (!e) return;
    (t < 0 || t * e.BYTES_PER_ELEMENT >= this.byteLength) && _.error("offset is out of range!"), r >= i && _.error("end must be bigger than start!"), (t + (i - r)) * e.BYTES_PER_ELEMENT > this.byteLength && _.error("An attempt to write beyond the end of the buffer!");
    const o = this._context.getBoundVAO();
    this._isVAOAware && this._context.bindVAO(null), this._context.bindBuffer(this);
    const a = this._context.gl;
    if (this._context.type === _contextUtils_js__WEBPACK_IMPORTED_MODULE_5__.ContextType.WEBGL2) a.bufferSubData(this.bufferType, t * e.BYTES_PER_ELEMENT, e, r, i - r);else {
      const s = 0 === r && i === e.length ? e : e.subarray(r, i);
      a.bufferSubData(this.bufferType, t * e.BYTES_PER_ELEMENT, s);
    }
    (0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_4__.checkWebGLError)(a), this._isVAOAware && this._context.bindVAO(o);
  }
  getSubData(e, t = 0, r, i) {
    if (this._context.type !== _contextUtils_js__WEBPACK_IMPORTED_MODULE_5__.ContextType.WEBGL2) return void _.error("Get buffer subdata is supported in WebGL2 only!");
    if (r < 0 || i < 0) return void _.error("Problem getting subdata: offset and length were less than zero!");
    const s = E(e) ? e.BYTES_PER_ELEMENT : 1;
    if (s * ((r ?? 0) + (i ?? 0)) > e.byteLength) return void _.error("Problem getting subdata: offset and length exceeded destination size!");
    t + s * (i ?? 0) > this.byteLength && _.warn("Potential problem getting subdata: requested data exceeds buffer size!");
    const a = this._context.gl;
    this._context.bindBuffer(this, _enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.COPY_READ_BUFFER), a.getBufferSubData(_enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.COPY_READ_BUFFER, t, e, r, i), this._context.unbindBuffer(_enums_js__WEBPACK_IMPORTED_MODULE_6__.BufferType.COPY_READ_BUFFER);
  }
  getSubDataAsync(e, t = 0, r, i) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this._context.type === _contextUtils_js__WEBPACK_IMPORTED_MODULE_5__.ContextType.WEBGL2 ? (yield _this._context.clientWaitAsync(), _this.getSubData(e, t, r, i)) : _.error("Get buffer subdata is supported in WebGL2 only!");
    })();
  }
}
function E(t) {
  return (0,_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_1__.isArrayLike)(t);
}


/***/ }),

/***/ 2512:
/*!********************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/FramebufferObject.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FramebufferObject": () => (/* binding */ E),
/* harmony export */   "ensureAttachmentMaxSize": () => (/* binding */ S)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/has.js */ 67087);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Logger.js */ 28191);
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/maybe.js */ 53661);
/* harmony import */ var _BufferObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./BufferObject.js */ 10615);
/* harmony import */ var _checkWebGLError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./checkWebGLError.js */ 4907);
/* harmony import */ var _contextUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./contextUtils.js */ 40331);
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./enums.js */ 69923);
/* harmony import */ var _GLObjectType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./GLObjectType.js */ 79818);
/* harmony import */ var _Renderbuffer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Renderbuffer.js */ 80806);
/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Texture.js */ 74697);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/










const x = _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.views.webgl.FramebufferObject");
class E {
  constructor(t, e, i = null) {
    this._context = t, this._glName = null, this._colorAttachments = new Map(), this._depthStencilBuffer = null, this._depthStencilTexture = null, this._initialized = !1, t.instanceCounter.increment(_enums_js__WEBPACK_IMPORTED_MODULE_7__.ResourceType.FramebufferObject, this);
    const r = g(e) ? e : new _Texture_js__WEBPACK_IMPORTED_MODULE_10__.Texture(this._context, e);
    if (this._colorAttachments.set(_enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0, r), this._validateTextureDescriptor(r.descriptor), this._validateColorAttachmentPoint(_enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0), null != i) if (b(i)) this._context.capabilities.depthTexture || console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"), this._depthStencilTexture = g(i) ? i : new _Texture_js__WEBPACK_IMPORTED_MODULE_10__.Texture(this._context, i), this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else {
      const t = A(i) ? i : new _Renderbuffer_js__WEBPACK_IMPORTED_MODULE_9__.Renderbuffer(this._context, i);
      this._depthStencilBuffer = t, this._validateRenderBufferDescriptor(t.descriptor);
    }
  }
  dispose() {
    if (0 === this._colorAttachments.size && !this._glName) return;
    const t = this._context.getBoundFramebufferObject();
    if (this._colorAttachments.forEach((t, e) => this.detachColorTexture(e)?.dispose()), this.detachDepthStencilBuffer()?.dispose(), this.detachDepthStencilTexture()?.dispose(), this._glName) {
      this._context.gl.deleteFramebuffer(this._glName), this._glName = null;
    }
    this._context.bindFramebuffer(t), this._context.instanceCounter.decrement(_enums_js__WEBPACK_IMPORTED_MODULE_7__.ResourceType.FramebufferObject, this);
  }
  get glName() {
    return this._glName;
  }
  get colorTexture() {
    return this._colorAttachments.get(_enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0);
  }
  get depthStencil() {
    return this._depthStencilTexture || this._depthStencilBuffer;
  }
  get depthStencilTexture() {
    return this._depthStencilTexture;
  }
  get width() {
    const t = this._colorAttachments.get(_enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0);
    return t?.descriptor?.width ?? 0;
  }
  get height() {
    const t = this._colorAttachments.get(_enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0);
    return t?.descriptor?.height ?? 0;
  }
  get gpuMemoryUsage() {
    return [...this._colorAttachments].reduce((t, [e, i]) => t + i.gpuMemoryUsage, this.depthStencil?.gpuMemoryUsage ?? 0);
  }
  getColorTexture(t) {
    const e = this._colorAttachments.get(t);
    return e && g(e) ? e : null;
  }
  get colorAttachments() {
    return [...this._colorAttachments.keys()];
  }
  attachColorTexture(t, e = _enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0) {
    if (!t) return;
    this._validateColorAttachmentPoint(e);
    const i = t.descriptor;
    this._validateTextureDescriptor(i), this.detachColorTexture(e)?.dispose(), this._initialized && (this._context.bindFramebuffer(this), this._framebufferTexture2D(t.glName, e)), this._colorAttachments.set(e, t);
  }
  detachColorTexture(t = _enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0) {
    const e = this._colorAttachments.get(t);
    if (e) {
      if (this._initialized) {
        const e = this._context.getBoundFramebufferObject();
        this._context.bindFramebuffer(this), this._framebufferTexture2D(null, t), this._context.bindFramebuffer(e);
      }
      return this._colorAttachments.delete(t), e;
    }
  }
  setColorTextureTarget(t, e = _enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0) {
    const i = this._colorAttachments.get(e);
    i && this._framebufferTexture2D(i.glName, e, t);
  }
  attachDepthStencil(t) {
    if (t) switch (t.type) {
      case _GLObjectType_js__WEBPACK_IMPORTED_MODULE_8__.GLObjectType.Texture:
        return this._attachDepthStencilTexture(t);
      case _GLObjectType_js__WEBPACK_IMPORTED_MODULE_8__.GLObjectType.RenderBuffer:
        return this._attachDepthStencilBuffer(t);
    }
  }
  _attachDepthStencilTexture(t) {
    if (null == t) return;
    const e = t.descriptor;
    e.pixelFormat !== _enums_js__WEBPACK_IMPORTED_MODULE_7__.PixelFormat.DEPTH_STENCIL && e.pixelFormat !== _enums_js__WEBPACK_IMPORTED_MODULE_7__.PixelFormat.DEPTH24_STENCIL8 && console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"), e.dataType !== _enums_js__WEBPACK_IMPORTED_MODULE_7__.PixelType.UNSIGNED_INT_24_8 && console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"), this._context.capabilities.depthTexture || console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"), this._validateTextureDescriptor(e), this._disposeDepthStencilAttachments(), this._initialized && (this._context.bindFramebuffer(this), this._framebufferTexture2D(t.glName, _enums_js__WEBPACK_IMPORTED_MODULE_7__.DepthStencilAttachment)), this._depthStencilTexture?.dispose(), this._depthStencilTexture = t;
  }
  detachDepthStencilTexture() {
    const t = this._depthStencilTexture;
    return t && this._initialized && (this._context.bindFramebuffer(this), this._framebufferTexture2D(null, _enums_js__WEBPACK_IMPORTED_MODULE_7__.DepthStencilAttachment)), this._depthStencilTexture = null, t;
  }
  _attachDepthStencilBuffer(t) {
    if (null == t) return;
    const e = t.descriptor;
    if (this._validateRenderBufferDescriptor(e), this._disposeDepthStencilAttachments(), this._initialized) {
      this._context.bindFramebuffer(this);
      const i = this._context.gl,
        r = this._getGLAttachmentPoint(e);
      i.framebufferRenderbuffer(_enums_js__WEBPACK_IMPORTED_MODULE_7__.FramebufferTarget.FRAMEBUFFER, r, i.RENDERBUFFER, t.glName);
    }
    this._depthStencilBuffer = t;
  }
  detachDepthStencilBuffer() {
    const t = this._depthStencilBuffer;
    if (t && this._initialized) {
      this._context.bindFramebuffer(this);
      const e = this._context.gl,
        i = this._getGLAttachmentPoint(t.descriptor);
      e.framebufferRenderbuffer(_enums_js__WEBPACK_IMPORTED_MODULE_7__.FramebufferTarget.FRAMEBUFFER, i, e.RENDERBUFFER, null);
    }
    return this._depthStencilBuffer = null, t;
  }
  copyToTexture(t, e, i, r, s, h, n) {
    (t < 0 || e < 0 || s < 0 || h < 0) && console.error("Offsets cannot be negative!"), (i <= 0 || r <= 0) && console.error("Copy width and height must be greater than zero!");
    const o = n.descriptor;
    n.descriptor.target !== _enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureType.TEXTURE_2D && console.error("Texture target must be TEXTURE_2D!"), (null == o?.width || null == o?.height || t + i > this.width || e + r > this.height || s + i > o.width || h + r > o.height) && console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");
    const c = this._context,
      a = c.bindTexture(n, _Texture_js__WEBPACK_IMPORTED_MODULE_10__.Texture.TEXTURE_UNIT_FOR_UPDATES);
    c.setActiveTexture(_Texture_js__WEBPACK_IMPORTED_MODULE_10__.Texture.TEXTURE_UNIT_FOR_UPDATES), c.bindFramebuffer(this), c.gl.copyTexSubImage2D(_enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureType.TEXTURE_2D, 0, s, h, t, e, i, r), c.bindTexture(a, _Texture_js__WEBPACK_IMPORTED_MODULE_10__.Texture.TEXTURE_UNIT_FOR_UPDATES);
  }
  readPixels(t, e, i, r, s, h, n) {
    (i <= 0 || r <= 0) && console.error("Copy width and height must be greater than zero!"), n || console.error("Target memory is not initialized!"), this._context.bindFramebuffer(this), this._context.gl.readPixels(t, e, i, r, s, h, n);
  }
  readPixelsAsync(t, e, h, n, o, c, a) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this._context.type !== _contextUtils_js__WEBPACK_IMPORTED_MODULE_6__.ContextType.WEBGL2) return (0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_5__.webglDebugEnabled)() && console.warn("Attempting to read pixels using pixel buffer object without WebGL2"), void _this.readPixels(t, e, h, n, o, c, a);
      const u = _this._context.gl,
        _ = _BufferObject_js__WEBPACK_IMPORTED_MODULE_4__.BufferObject.createPixelPack(_this._context, _enums_js__WEBPACK_IMPORTED_MODULE_7__.Usage.STREAM_READ, a.byteLength);
      _this._context.bindBuffer(_), _this._context.bindFramebuffer(_this), u.readPixels(t, e, h, n, o, c, 0), _this._context.unbindBuffer(_enums_js__WEBPACK_IMPORTED_MODULE_7__.BufferType.PIXEL_PACK_BUFFER), yield _.getSubDataAsync(a), _.dispose();
    })();
  }
  resize(t, e) {
    if (this.width === t && this.height === e) return;
    const i = {
      width: t,
      height: e
    };
    S(i, this._context.parameters.maxTextureSize), this._colorAttachments.forEach(t => t.resize(i.width, i.height)), this._depthStencilTexture?.resize(i.width, i.height), this._initialized && (S(i, this._context.parameters.maxRenderbufferSize), this._depthStencilBuffer?.resize(i.width, i.height), this._context.getBoundFramebufferObject() === this && this._context.bindFramebuffer(null), this._initialized = !1);
  }
  initializeAndBind(t = _enums_js__WEBPACK_IMPORTED_MODULE_7__.FramebufferTarget.FRAMEBUFFER) {
    const e = this._context.gl;
    if (this._initialized) return void e.bindFramebuffer(t, this.glName);
    this._glName && e.deleteFramebuffer(this._glName);
    const i = e.createFramebuffer();
    if (e.bindFramebuffer(t, i), this._colorAttachments.forEach((e, i) => this._framebufferTexture2D(e.glName, i, R(e), t)), this._depthStencilBuffer) {
      const i = this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);
      e.framebufferRenderbuffer(t, i, e.RENDERBUFFER, this._depthStencilBuffer.glName);
    } else this._depthStencilTexture && this._framebufferTexture2D(this._depthStencilTexture.glName, e.DEPTH_STENCIL_ATTACHMENT, R(this._depthStencilTexture), t);
    if ((0,_checkWebGLError_js__WEBPACK_IMPORTED_MODULE_5__.webglDebugEnabled)()) {
      e.checkFramebufferStatus(t) !== e.FRAMEBUFFER_COMPLETE && console.error("Framebuffer is incomplete!");
    }
    this._glName = i, this._initialized = !0;
  }
  _framebufferTexture2D(t, e = _enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0, i = _enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureType.TEXTURE_2D, r = _enums_js__WEBPACK_IMPORTED_MODULE_7__.FramebufferTarget.FRAMEBUFFER, s = 0) {
    this._context.gl.framebufferTexture2D(r, e, i, t, s);
  }
  _disposeDepthStencilAttachments() {
    const t = this._context.gl;
    if (this._depthStencilBuffer) {
      if (this._initialized) {
        this._context.bindFramebuffer(this);
        const e = this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);
        t.framebufferRenderbuffer(_enums_js__WEBPACK_IMPORTED_MODULE_7__.FramebufferTarget.FRAMEBUFFER, e, t.RENDERBUFFER, null);
      }
      this._depthStencilBuffer = (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_3__.disposeMaybe)(this._depthStencilBuffer);
    }
    this._depthStencilTexture && (this._initialized && (this._context.bindFramebuffer(this), this._framebufferTexture2D(null, t.DEPTH_STENCIL_ATTACHMENT)), this._depthStencilTexture = (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_3__.disposeMaybe)(this._depthStencilTexture));
  }
  _validateTextureDescriptor(t) {
    t.target !== _enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureType.TEXTURE_2D && t.target !== _enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureType.TEXTURE_CUBE_MAP && console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"), S(t, this._context.parameters.maxTextureSize), this._validateBufferDimensions(t);
  }
  _validateRenderBufferDescriptor(t) {
    S(t, this._context.parameters.maxRenderbufferSize), this._validateBufferDimensions(t);
  }
  _validateBufferDimensions(t) {
    t.width <= 0 && (t.width = this.width), t.height <= 0 && (t.height = this.height), this.width > 0 && this.height > 0 && (this.width === t.width && this.height === t.height || console.error("Attachment size must match framebuffer size!"));
  }
  _getGLAttachmentPoint(t) {
    switch (t.internalFormat) {
      case _enums_js__WEBPACK_IMPORTED_MODULE_7__.RenderbufferFormat.DEPTH_COMPONENT16:
      case _enums_js__WEBPACK_IMPORTED_MODULE_7__.RenderbufferFormat.DEPTH_COMPONENT24:
      case _enums_js__WEBPACK_IMPORTED_MODULE_7__.RenderbufferFormat.DEPTH_COMPONENT32F:
        return this._context.gl.DEPTH_ATTACHMENT;
      case _enums_js__WEBPACK_IMPORTED_MODULE_7__.RenderbufferFormat.DEPTH24_STENCIL8:
      case _enums_js__WEBPACK_IMPORTED_MODULE_7__.RenderbufferFormat.DEPTH32F_STENCIL8:
      case _enums_js__WEBPACK_IMPORTED_MODULE_7__.RenderbufferFormat.DEPTH_STENCIL:
        return this._context.gl.DEPTH_STENCIL_ATTACHMENT;
      case _enums_js__WEBPACK_IMPORTED_MODULE_7__.RenderbufferFormat.STENCIL_INDEX8:
        return this._context.gl.STENCIL_ATTACHMENT;
    }
  }
  _validateColorAttachmentPoint(e) {
    if (-1 === E._MAX_COLOR_ATTACHMENTS) {
      const t = this._context.capabilities.drawBuffers;
      if (t) {
        const e = this._context.gl;
        E._MAX_COLOR_ATTACHMENTS = e.getParameter(t.MAX_COLOR_ATTACHMENTS);
      } else E._MAX_COLOR_ATTACHMENTS = 1;
    }
    const i = e - _enums_js__WEBPACK_IMPORTED_MODULE_7__.ColorAttachment.COLOR_ATTACHMENT0;
    i + 1 > E._MAX_COLOR_ATTACHMENTS && _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject", `illegal attachment point for color attachment: ${i + 1}. Implementation supports up to ${E._MAX_COLOR_ATTACHMENTS} color attachments`);
  }
}
function g(t) {
  return null != t && "type" in t && t.type === _GLObjectType_js__WEBPACK_IMPORTED_MODULE_8__.GLObjectType.Texture;
}
function A(t) {
  return null != t && "type" in t && t.type === _GLObjectType_js__WEBPACK_IMPORTED_MODULE_8__.GLObjectType.RenderBuffer;
}
function b(t) {
  return g(t) || null != t && "pixelFormat" in t;
}
function S(t, e) {
  const i = Math.max(t.width, t.height);
  if (i > e) {
    x.warn(`Resizing FBO attachment size ${t.width}x${t.height} to device limit ${e}`);
    const r = e / i;
    return t.width = Math.round(t.width * r), t.height = Math.round(t.height * r), !1;
  }
  return !0;
}
function R(t) {
  return t.descriptor.target === _enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureType.TEXTURE_CUBE_MAP ? _enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureType.TEXTURE_CUBE_MAP_POSITIVE_X : _enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureType.TEXTURE_2D;
}
E._MAX_COLOR_ATTACHMENTS = -1;


/***/ }),

/***/ 80806:
/*!***************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/Renderbuffer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Renderbuffer": () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _contextUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contextUtils.js */ 40331);
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums.js */ 69923);
/* harmony import */ var _GLObjectType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GLObjectType.js */ 79818);
/* harmony import */ var _RenderbufferDescriptor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RenderbufferDescriptor.js */ 4419);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/




class i {
  constructor(s, i) {
    this._context = s, this._descriptor = i, this.type = _GLObjectType_js__WEBPACK_IMPORTED_MODULE_2__.GLObjectType.RenderBuffer, this._context.instanceCounter.increment(_enums_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.Renderbuffer, this);
    const n = this._context.gl;
    this.glName = n.createRenderbuffer(), this._context.bindRenderbuffer(this);
    const {
      width: o,
      height: h,
      internalFormat: c,
      multisampled: f
    } = i;
    if (f) {
      if (this._context.type !== _contextUtils_js__WEBPACK_IMPORTED_MODULE_0__.ContextType.WEBGL2) throw new Error("Multisampled renderbuffers are not supported in WebGL1!");
      n.renderbufferStorageMultisample(n.RENDERBUFFER, this.samples, c, o, h);
    } else n.renderbufferStorage(n.RENDERBUFFER, c, o, h);
  }
  get descriptor() {
    return this._descriptor;
  }
  get samples() {
    const e = this._descriptor.samples,
      t = this._context.parameters.maxSamples;
    return e ? Math.min(e, t) : t;
  }
  get gpuMemoryUsage() {
    return (0,_RenderbufferDescriptor_js__WEBPACK_IMPORTED_MODULE_3__.estimateMemory)(this._descriptor);
  }
  resize(e, t) {
    const r = this._descriptor;
    if (r.width === e && r.height === t) return;
    r.width = e, r.height = t;
    const s = this._context.gl;
    if (this._context.bindRenderbuffer(this), r.multisampled) {
      s.renderbufferStorageMultisample(s.RENDERBUFFER, this.samples, r.internalFormat, r.width, r.height);
    } else s.renderbufferStorage(s.RENDERBUFFER, r.internalFormat, r.width, r.height);
  }
  dispose() {
    this._context && (this._context.gl.deleteRenderbuffer(this.glName), this._context.instanceCounter.decrement(_enums_js__WEBPACK_IMPORTED_MODULE_1__.ResourceType.Renderbuffer, this), this._context = null);
  }
}


/***/ }),

/***/ 4419:
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/RenderbufferDescriptor.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RenderbufferDescriptor": () => (/* binding */ i),
/* harmony export */   "estimateMemory": () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var _Util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util.js */ 68267);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/

class i {
  constructor(t, i, h = i) {
    this.internalFormat = t, this.width = i, this.height = h, this.multisampled = !1, this.samples = 1;
  }
}
function h(i) {
  return i.width <= 0 || i.height <= 0 || null == i.internalFormat ? 0 : i.width * i.height * (0,_Util_js__WEBPACK_IMPORTED_MODULE_0__.getBytesPerElementFormat)(i.internalFormat);
}


/***/ })

}]);
//# sourceMappingURL=default-node_modules_arcgis_core_views_webgl_FramebufferObject_js.js.map