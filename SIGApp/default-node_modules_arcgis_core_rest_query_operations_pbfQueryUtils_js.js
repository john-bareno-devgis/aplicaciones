"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["default-node_modules_arcgis_core_rest_query_operations_pbfQueryUtils_js"],{

/***/ 74617:
/*!***********************************************!*\
  !*** ./node_modules/@arcgis/core/core/pbf.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./has.js */ 67087);
/* harmony import */ var _ObjectPool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ObjectPool.js */ 5261);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/


var e;
!function (t) {
  t[t.varint = 0] = "varint", t[t.fixed64 = 1] = "fixed64", t[t.delimited = 2] = "delimited", t[t.fixed32 = 5] = "fixed32", t[t.unknown = 99] = "unknown";
}(e || (e = {}));
const i = 4294967296,
  s = new TextDecoder("utf-8"),
  n = (0,_has_js__WEBPACK_IMPORTED_MODULE_0__["default"])("safari") || (0,_has_js__WEBPACK_IMPORTED_MODULE_0__["default"])("ios") ? 6 : (0,_has_js__WEBPACK_IMPORTED_MODULE_0__["default"])("ff") ? 12 : 32;
class r {
  constructor(t, i, s = 0, n = t ? t.byteLength : 0) {
    this._tag = 0, this._dataType = e.unknown, this._init(t, i, s, n);
  }
  _init(t, e, i, s) {
    this._data = t, this._dataView = e, this._pos = i, this._end = s;
  }
  asUnsafe() {
    return this;
  }
  clone() {
    return new r(this._data, this._dataView, this._pos, this._end);
  }
  pos() {
    return this._pos;
  }
  move(t) {
    this._pos = t;
  }
  nextTag(t) {
    for (;;) {
      if (this._pos === this._end) return !1;
      const e = this._decodeVarint();
      if (this._tag = e >> 3, this._dataType = 7 & e, !t || t === this._tag) break;
      this.skip();
    }
    return !0;
  }
  next() {
    if (this._pos === this._end) return !1;
    const t = this._decodeVarint();
    return this._tag = t >> 3, this._dataType = 7 & t, !0;
  }
  empty() {
    return this._pos >= this._end;
  }
  tag() {
    return this._tag;
  }
  getInt32() {
    return this._decodeVarint();
  }
  getInt64() {
    return this._decodeVarint();
  }
  getUInt32() {
    let t = 4294967295;
    return t = (127 & this._data[this._pos]) >>> 0, this._data[this._pos++] < 128 ? t : (t = (t | (127 & this._data[this._pos]) << 7) >>> 0, this._data[this._pos++] < 128 ? t : (t = (t | (127 & this._data[this._pos]) << 14) >>> 0, this._data[this._pos++] < 128 ? t : (t = (t | (127 & this._data[this._pos]) << 21) >>> 0, this._data[this._pos++] < 128 ? t : (t = (t | (15 & this._data[this._pos]) << 28) >>> 0, this._data[this._pos++] < 128 ? t : void 0))));
  }
  getUInt64() {
    return this._decodeVarint();
  }
  getSInt32() {
    const t = this.getUInt32();
    if (void 0 !== t) return t >>> 1 ^ -(1 & t) | 0;
  }
  getSInt64() {
    return this._decodeSVarint();
  }
  getBool() {
    const t = 0 !== this._data[this._pos];
    return this._skip(1), t;
  }
  getEnum() {
    return this._decodeVarint();
  }
  getFixed64() {
    const t = this._dataView,
      e = this._pos,
      s = t.getUint32(e, !0) + t.getUint32(e + 4, !0) * i;
    return this._skip(8), s;
  }
  getSFixed64() {
    const t = this._dataView,
      e = this._pos,
      s = t.getUint32(e, !0) + t.getInt32(e + 4, !0) * i;
    return this._skip(8), s;
  }
  getDouble() {
    const t = this._dataView.getFloat64(this._pos, !0);
    return this._skip(8), t;
  }
  getFixed32() {
    const t = this._dataView.getUint32(this._pos, !0);
    return this._skip(4), t;
  }
  getSFixed32() {
    const t = this._dataView.getInt32(this._pos, !0);
    return this._skip(4), t;
  }
  getFloat() {
    const t = this._dataView.getFloat32(this._pos, !0);
    return this._skip(4), t;
  }
  getString() {
    const t = this._getLength(),
      e = this._pos,
      i = this._toString(this._data, e, e + t);
    return this._skip(t), i;
  }
  getBytes() {
    const t = this._getLength(),
      e = this._pos,
      i = this._toBytes(this._data, e, e + t);
    return this._skip(t), i;
  }
  getLength() {
    return this._getLengthUnsafe();
  }
  processMessageWithArgs(t, e, i, s) {
    const n = this.getMessage(),
      r = t(n, e, i, s);
    return n.release(), r;
  }
  processMessage(t) {
    const e = this.getMessage(),
      i = t(e);
    return e.release(), i;
  }
  getMessage() {
    const t = this._getLength(),
      e = r.pool.acquire();
    return e._init(this._data, this._dataView, this._pos, this._pos + t), this._skip(t), e;
  }
  release() {
    r.pool.release(this);
  }
  dataType() {
    return this._dataType;
  }
  skip() {
    switch (this._dataType) {
      case e.varint:
        this._decodeVarint();
        break;
      case e.fixed64:
        this._skip(8);
        break;
      case e.delimited:
        this._skip(this._getLength());
        break;
      case e.fixed32:
        this._skip(4);
        break;
      default:
        throw new Error("Invalid data type!");
    }
  }
  skipLen(t) {
    this._skip(t);
  }
  _skip(t) {
    if (this._pos + t > this._end) throw new Error("Attempt to skip past the end of buffer!");
    this._pos += t;
  }
  _decodeVarint() {
    const t = this._data;
    let e = this._pos,
      i = 0,
      s = 0;
    if (this._end - e >= 10) do {
      if (s = t[e++], i |= 127 & s, 0 == (128 & s)) break;
      if (s = t[e++], i |= (127 & s) << 7, 0 == (128 & s)) break;
      if (s = t[e++], i |= (127 & s) << 14, 0 == (128 & s)) break;
      if (s = t[e++], i |= (127 & s) << 21, 0 == (128 & s)) break;
      if (s = t[e++], i += 268435456 * (127 & s), 0 == (128 & s)) break;
      if (s = t[e++], i += 34359738368 * (127 & s), 0 == (128 & s)) break;
      if (s = t[e++], i += 4398046511104 * (127 & s), 0 == (128 & s)) break;
      if (s = t[e++], i += 562949953421312 * (127 & s), 0 == (128 & s)) break;
      if (s = t[e++], i += 72057594037927940 * (127 & s), 0 == (128 & s)) break;
      if (s = t[e++], i += 0x8000000000000000 * (127 & s), 0 == (128 & s)) break;
      throw new Error("Varint too long!");
    } while (0);else {
      let n = 1;
      for (; e !== this._end && (s = t[e], 0 != (128 & s));) ++e, i += (127 & s) * n, n *= 128;
      if (e === this._end) throw new Error("Varint overrun!");
      ++e, i += s * n;
    }
    return this._pos = e, i;
  }
  _decodeSVarint() {
    const t = this._data;
    let e,
      i = 0,
      s = 0;
    const n = 1 & t[this._pos];
    if (s = t[this._pos++], i |= 127 & s, 0 == (128 & s)) return n ? -(i + 1) / 2 : i / 2;
    if (s = t[this._pos++], i |= (127 & s) << 7, 0 == (128 & s)) return n ? -(i + 1) / 2 : i / 2;
    if (s = t[this._pos++], i |= (127 & s) << 14, 0 == (128 & s)) return n ? -(i + 1) / 2 : i / 2;
    if (s = t[this._pos++], i |= (127 & s) << 21, 0 == (128 & s)) return n ? -(i + 1) / 2 : i / 2;
    if (s = t[this._pos++], i += 268435456 * (127 & s), 0 == (128 & s)) return n ? -(i + 1) / 2 : i / 2;
    if (s = t[this._pos++], i += 34359738368 * (127 & s), 0 == (128 & s)) return n ? -(i + 1) / 2 : i / 2;
    if (s = t[this._pos++], i += 4398046511104 * (127 & s), 0 == (128 & s)) return n ? -(i + 1) / 2 : i / 2;
    if (e = BigInt(i), s = t[this._pos++], e += 0x2000000000000n * BigInt(127 & s), 0 == (128 & s)) return Number(n ? -(e + 1n) / 2n : e / 2n);
    if (s = t[this._pos++], e += 0x100000000000000n * BigInt(127 & s), 0 == (128 & s)) return Number(n ? -(e + 1n) / 2n : e / 2n);
    if (s = t[this._pos++], e += 0x8000000000000000n * BigInt(127 & s), 0 == (128 & s)) return Number(n ? -(e + 1n) / 2n : e / 2n);
    throw new Error("Varint too long!");
  }
  _getLength() {
    if (this._dataType !== e.delimited) throw new Error("Not a delimited data type!");
    return this._decodeVarint();
  }
  _getLengthUnsafe() {
    return this.getUInt32();
  }
  _toString(t, e, i) {
    if ((i = Math.min(this._end, i)) - e > n) {
      const n = t.subarray(e, i);
      return s.decode(n);
    }
    let r = "",
      h = "";
    for (let s = e; s < i; ++s) {
      const e = t[s];
      128 & e ? h += "%" + e.toString(16) : (r += decodeURIComponent(h) + String.fromCharCode(e), h = "");
    }
    return h.length && (r += decodeURIComponent(h)), r;
  }
  _toBytes(t, e, i) {
    return i = Math.min(this._end, i), new Uint8Array(t.buffer, e, i - e);
  }
}
r.pool = new _ObjectPool_js__WEBPACK_IMPORTED_MODULE_1__["default"](r, void 0, t => {
  t._data = null, t._dataView = null;
});


/***/ }),

/***/ 58583:
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/query/operations/pbfFeatureServiceParser.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseFeatureQuery": () => (/* binding */ S),
/* harmony export */   "parseField": () => (/* binding */ b),
/* harmony export */   "parseFieldType": () => (/* binding */ o),
/* harmony export */   "parseTransform": () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/Error.js */ 32995);
/* harmony import */ var _core_pbf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pbf.js */ 74617);
/* harmony import */ var _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../layers/graphics/OptimizedGeometry.js */ 93846);
/* harmony import */ var _pbfOptimizedFeatureSet_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pbfOptimizedFeatureSet.js */ 36621);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/




const a = ["esriFieldTypeSmallInteger", "esriFieldTypeInteger", "esriFieldTypeSingle", "esriFieldTypeDouble", "esriFieldTypeString", "esriFieldTypeDate", "esriFieldTypeOID", "esriFieldTypeGeometry", "esriFieldTypeBlob", "esriFieldTypeRaster", "esriFieldTypeGUID", "esriFieldTypeGlobalID", "esriFieldTypeXML", "esriFieldTypeBigInteger", "esriFieldTypeDateOnly", "esriFieldTypeTimeOnly", "esriFieldTypeTimestampOffset"],
  n = ["sqlTypeBigInt", "sqlTypeBinary", "sqlTypeBit", "sqlTypeChar", "sqlTypeDate", "sqlTypeDecimal", "sqlTypeDouble", "sqlTypeFloat", "sqlTypeGeometry", "sqlTypeGUID", "sqlTypeInteger", "sqlTypeLongNVarchar", "sqlTypeLongVarbinary", "sqlTypeLongVarchar", "sqlTypeNChar", "sqlTypeNVarchar", "sqlTypeOther", "sqlTypeReal", "sqlTypeSmallInt", "sqlTypeSqlXml", "sqlTypeTime", "sqlTypeTimestamp", "sqlTypeTimestamp2", "sqlTypeTinyInt", "sqlTypeVarbinary", "sqlTypeVarchar"],
  i = ["upperLeft", "lowerLeft"];
function o(e) {
  return e >= a.length ? null : a[e];
}
function c(e) {
  return e >= n.length ? null : n[e];
}
function l(e) {
  return e >= i.length ? null : i[e];
}
function g(e, t) {
  return t >= e.geometryTypes.length ? null : e.geometryTypes[t];
}
function p(e, t, s) {
  const r = 3,
    a = e.asUnsafe(),
    n = t.createPointGeometry(s);
  for (; a.next();) switch (a.tag()) {
    case r:
      {
        const e = a.getUInt32(),
          s = a.pos() + e;
        let r = 0;
        for (; a.pos() < s;) t.addCoordinatePoint(n, a.getSInt64(), r++);
        break;
      }
    default:
      a.skip();
  }
  return n;
}
function u(e, t, s) {
  const r = 2,
    a = 3,
    n = e.asUnsafe(),
    i = t.createGeometry(s),
    o = 2 + (s.hasZ ? 1 : 0) + (s.hasM ? 1 : 0);
  for (; n.next();) switch (n.tag()) {
    case r:
      {
        const e = n.getUInt32(),
          s = n.pos() + e;
        let r = 0;
        for (; n.pos() < s;) t.addLength(i, n.getUInt32(), r++);
        break;
      }
    case a:
      {
        const e = n.getUInt32(),
          s = n.pos() + e;
        let r = 0;
        for (t.allocateCoordinates(i); n.pos() < s;) t.addCoordinate(i, n.getSInt64(), r), r++, r === o && (r = 0);
        break;
      }
    default:
      n.skip();
  }
  return i;
}
function f(e) {
  const t = 1,
    a = 2,
    n = 3,
    i = e.asUnsafe(),
    o = new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__["default"]();
  let c = "esriGeometryPoint";
  for (; i.next();) switch (i.tag()) {
    case a:
      {
        const e = i.getUInt32(),
          t = i.pos() + e;
        for (; i.pos() < t;) o.lengths.push(i.getUInt32());
        break;
      }
    case n:
      {
        const e = i.getUInt32(),
          t = i.pos() + e;
        for (; i.pos() < t;) o.coords.push(i.getSInt64());
        break;
      }
    case t:
      c = _pbfOptimizedFeatureSet_js__WEBPACK_IMPORTED_MODULE_3__.optimizedGeometryTypes[i.getEnum()];
      break;
    default:
      i.skip();
  }
  return {
    queryGeometry: o,
    queryGeometryType: c
  };
}
function y(e) {
  const t = 1,
    s = 2,
    r = 3,
    a = 4,
    n = 5,
    i = 6,
    o = 7,
    c = 8,
    l = 9,
    g = e.asUnsafe();
  for (; g.next();) switch (g.tag()) {
    case t:
      return g.getString();
    case s:
      return g.getFloat();
    case r:
      return g.getDouble();
    case a:
      return g.getSInt32();
    case n:
      return g.getUInt32();
    case i:
      return g.getInt64();
    case o:
      return g.getUInt64();
    case c:
      return g.getSInt64();
    case l:
      return g.getBool();
    default:
      return g.skip(), null;
  }
  return null;
}
function b(e) {
  const t = 1,
    s = 2,
    r = 3,
    a = 4,
    n = 5,
    i = 6,
    l = e.asUnsafe(),
    g = {
      type: o(0)
    };
  for (; l.next();) switch (l.tag()) {
    case t:
      g.name = l.getString();
      break;
    case s:
      g.type = o(l.getEnum());
      break;
    case r:
      g.alias = l.getString();
      break;
    case a:
      g.sqlType = c(l.getEnum());
      break;
    case n:
      l.skip();
      break;
    case i:
      g.defaultValue = l.getString();
      break;
    default:
      l.skip();
  }
  return g;
}
function k(e) {
  const t = 1,
    s = 2,
    r = {},
    a = e.asUnsafe();
  for (; a.next();) switch (a.tag()) {
    case t:
      r.name = a.getString();
      break;
    case s:
      r.isSystemMaintained = a.getBool();
      break;
    default:
      a.skip();
  }
  return r;
}
function d(e, t, s, r) {
  const a = 1,
    n = 2,
    i = 4,
    o = t.createFeature(s);
  let c = 0;
  for (; e.next();) switch (e.tag()) {
    case a:
      {
        const t = r[c++].name;
        o.attributes[t] = e.processMessage(y);
        break;
      }
    case n:
      o.geometry = e.processMessageWithArgs(u, t, s);
      break;
    case i:
      o.centroid = e.processMessageWithArgs(p, t, s);
      break;
    default:
      e.skip();
  }
  return o;
}
function T(e) {
  const t = 1,
    s = 2,
    r = 3,
    a = 4,
    n = [1, 1, 1, 1],
    i = e.asUnsafe();
  for (; i.next();) switch (i.tag()) {
    case t:
      n[0] = i.getDouble();
      break;
    case s:
      n[1] = i.getDouble();
      break;
    case a:
      n[2] = i.getDouble();
      break;
    case r:
      n[3] = i.getDouble();
      break;
    default:
      i.skip();
  }
  return n;
}
function m(e) {
  const t = 1,
    s = 2,
    r = 3,
    a = 4,
    n = [0, 0, 0, 0],
    i = e.asUnsafe();
  for (; i.next();) switch (i.tag()) {
    case t:
      n[0] = i.getDouble();
      break;
    case s:
      n[1] = i.getDouble();
      break;
    case a:
      n[2] = i.getDouble();
      break;
    case r:
      n[3] = i.getDouble();
      break;
    default:
      i.skip();
  }
  return n;
}
function h(e) {
  const t = 1,
    s = 2,
    r = 3,
    a = {
      originPosition: l(0)
    },
    n = e.asUnsafe();
  for (; n.next();) switch (n.tag()) {
    case t:
      a.originPosition = l(n.getEnum());
      break;
    case s:
      a.scale = n.processMessage(T);
      break;
    case r:
      a.translate = n.processMessage(m);
      break;
    default:
      n.skip();
  }
  return a;
}
function F(e) {
  const t = 1,
    s = 2,
    r = 3,
    a = {},
    n = e.asUnsafe();
  for (; n.next();) switch (n.tag()) {
    case t:
      a.shapeAreaFieldName = n.getString();
      break;
    case s:
      a.shapeLengthFieldName = n.getString();
      break;
    case r:
      a.units = n.getString();
      break;
    default:
      n.skip();
  }
  return a;
}
function q(e, t) {
  const s = 1,
    r = 2,
    a = 3,
    n = 4,
    i = 5,
    o = t.createSpatialReference();
  for (; e.next();) switch (e.tag()) {
    case s:
      o.wkid = e.getUInt32();
      break;
    case i:
      o.wkt = e.getString();
      break;
    case r:
      o.latestWkid = e.getUInt32();
      break;
    case a:
      o.vcsWkid = e.getUInt32();
      break;
    case n:
      o.latestVcsWkid = e.getUInt32();
      break;
    default:
      e.skip();
  }
  return o;
}
function I(e, t) {
  const s = 1,
    r = 2,
    a = 3,
    n = 4,
    i = 5,
    o = 7,
    c = 8,
    l = 9,
    p = 10,
    u = 11,
    f = 12,
    y = 13,
    T = 15,
    m = t.createFeatureResult(),
    I = e.asUnsafe();
  m.geometryType = g(t, 0);
  let U = !1;
  for (; I.next();) switch (I.tag()) {
    case s:
      m.objectIdFieldName = I.getString();
      break;
    case a:
      m.globalIdFieldName = I.getString();
      break;
    case n:
      m.geohashFieldName = I.getString();
      break;
    case i:
      m.geometryProperties = I.processMessage(F);
      break;
    case o:
      m.geometryType = g(t, I.getEnum());
      break;
    case c:
      m.spatialReference = I.processMessageWithArgs(q, t);
      break;
    case p:
      m.hasZ = I.getBool();
      break;
    case u:
      m.hasM = I.getBool();
      break;
    case f:
      m.transform = I.processMessage(h);
      break;
    case l:
      m.exceededTransferLimit = I.getBool();
      break;
    case y:
      t.addField(m, I.processMessage(b));
      break;
    case T:
      U || (t.prepareFeatures(m), U = !0), t.addFeature(m, I.processMessageWithArgs(d, t, m, m.fields));
      break;
    case r:
      m.uniqueIdField = I.processMessage(k);
      break;
    default:
      I.skip();
  }
  return t.finishFeatureResult(m), m;
}
function U(e, t) {
  const s = 1,
    r = 4,
    a = {};
  let n = null;
  for (; e.next();) switch (e.tag()) {
    case r:
      n = e.processMessageWithArgs(f);
      break;
    case s:
      a.featureResult = e.processMessageWithArgs(I, t);
      break;
    default:
      e.skip();
  }
  return null != n && a.featureResult && t.addQueryGeometry(a, n), a;
}
function S(s, r) {
  try {
    const e = 2,
      a = new _core_pbf_js__WEBPACK_IMPORTED_MODULE_1__["default"](new Uint8Array(s), new DataView(s)),
      n = {};
    for (; a.next();) if (a.tag() === e) n.queryResult = a.processMessageWithArgs(U, r);else a.skip();
    return n;
  } catch (a) {
    throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("query:parsing-pbf", "Error while parsing FeatureSet PBF payload", {
      error: a
    });
  }
}


/***/ }),

/***/ 36621:
/*!***********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/query/operations/pbfOptimizedFeatureSet.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OptimizedFeatureSetParserContext": () => (/* binding */ a),
/* harmony export */   "optimizedGeometryTypes": () => (/* binding */ n)
/* harmony export */ });
/* harmony import */ var _core_unitUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/unitUtils.js */ 82769);
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry/support/spatialReferenceUtils.js */ 53492);
/* harmony import */ var _layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../layers/graphics/OptimizedFeature.js */ 33510);
/* harmony import */ var _layers_graphics_OptimizedFeatureSet_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../layers/graphics/OptimizedFeatureSet.js */ 43921);
/* harmony import */ var _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../layers/graphics/OptimizedGeometry.js */ 93846);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/





const n = ["esriGeometryPoint", "esriGeometryMultipoint", "esriGeometryPolyline", "esriGeometryPolygon"];
class a {
  constructor(e) {
    this._options = e, this.geometryTypes = n, this._coordinatePtr = 0, this._vertexDimension = 0;
  }
  createFeatureResult() {
    return new _layers_graphics_OptimizedFeatureSet_js__WEBPACK_IMPORTED_MODULE_3__["default"]();
  }
  prepareFeatures(e) {
    this._vertexDimension = 2, e.hasZ && this._vertexDimension++, e.hasM && this._vertexDimension++;
  }
  finishFeatureResult(o) {
    if (!o?.features || !o.hasZ || !this._options.sourceSpatialReference || !o.spatialReference || (0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_1__.equals)(o.spatialReference, this._options.sourceSpatialReference) || o.spatialReference.vcsWkid) return;
    const i = (0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_0__.getMetersPerVerticalUnitForSR)(this._options.sourceSpatialReference) / (0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_0__.getMetersPerVerticalUnitForSR)(o.spatialReference);
    if (1 !== i) for (const e of o.features) {
      if (!(0,_layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_2__.hasGeometry)(e)) continue;
      const t = e.geometry.coords;
      for (let e = 2; e < t.length; e += 3) t[e] *= i;
    }
  }
  addFeature(e, t) {
    e.features.push(t);
  }
  createFeature() {
    return new _layers_graphics_OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_2__.OptimizedFeature();
  }
  createSpatialReference() {
    return {
      wkid: 0
    };
  }
  createGeometry() {
    return new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__["default"]();
  }
  addField(e, t) {
    e.fields.push(t);
  }
  allocateCoordinates(e) {
    e.coords.length = e.lengths.reduce((e, t) => e + t, 0) * this._vertexDimension, this._coordinatePtr = 0;
  }
  addCoordinate(e, t) {
    e.coords[this._coordinatePtr++] = t;
  }
  addCoordinatePoint(e, t) {
    e.coords.push(t);
  }
  addLength(e, t) {
    e.lengths.push(t);
  }
  addQueryGeometry(e, t) {
    e.queryGeometry = t.queryGeometry, e.queryGeometryType = t.queryGeometryType;
  }
  createPointGeometry() {
    return new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__["default"]();
  }
}


/***/ }),

/***/ 49592:
/*!**************************************************************************!*\
  !*** ./node_modules/@arcgis/core/rest/query/operations/pbfQueryUtils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parsePBFFeatureQuery": () => (/* binding */ t)
/* harmony export */ });
/* harmony import */ var _pbfFeatureServiceParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pbfFeatureServiceParser.js */ 58583);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/

function t(t, r) {
  const u = (0,_pbfFeatureServiceParser_js__WEBPACK_IMPORTED_MODULE_0__.parseFeatureQuery)(t, r),
    o = u.queryResult.featureResult,
    s = u.queryResult.queryGeometry,
    y = u.queryResult.queryGeometryType;
  if (o && o.features && o.features.length && o.objectIdFieldName) {
    const e = o.objectIdFieldName;
    for (const t of o.features) t.attributes && (t.objectId = t.attributes[e]);
  }
  return o && (o.queryGeometry = s, o.queryGeometryType = y), o;
}


/***/ })

}]);
//# sourceMappingURL=default-node_modules_arcgis_core_rest_query_operations_pbfQueryUtils_js.js.map