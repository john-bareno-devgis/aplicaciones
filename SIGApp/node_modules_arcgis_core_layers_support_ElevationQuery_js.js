"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["node_modules_arcgis_core_layers_support_ElevationQuery_js"],{

/***/ 80947:
/*!********************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/ElevationQuery.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ElevationQuery": () => (/* binding */ T),
/* harmony export */   "GeometryDescriptor": () => (/* binding */ v),
/* harmony export */   "getFinestLodIndex": () => (/* binding */ E)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/asyncUtils.js */ 11823);
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Error.js */ 32995);
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/maybe.js */ 53661);
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/promiseUtils.js */ 30801);
/* harmony import */ var _core_unitUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/unitUtils.js */ 82769);
/* harmony import */ var _geometry_Multipoint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../geometry/Multipoint.js */ 23675);
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../geometry/Point.js */ 72062);
/* harmony import */ var _geometry_Polyline_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../geometry/Polyline.js */ 7913);
/* harmony import */ var _geometry_projection_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../geometry/projection.js */ 89487);
/* harmony import */ var _geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../geometry/support/aaBoundingRect.js */ 6848);
/* harmony import */ var _ElevationSampler_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ElevationSampler.js */ 78867);
/* harmony import */ var _ElevationTile_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ElevationTile.js */ 77346);
/* harmony import */ var _TileKey_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./TileKey.js */ 45933);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/













class T {
  queryAll(e, i, n) {
    var _this = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (!(e = n && n.ignoreInvisibleLayers ? e.filter(e => e.visible) : e.slice()).length) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:invalid-layer", "Elevation queries require at least one elevation layer to fetch tiles from");
      const l = v.fromGeometry(i);
      let s = !1;
      n && n.returnSampleInfo || (s = !0);
      const o = {
          ...R,
          ...n,
          returnSampleInfo: !0
        },
        a = yield _this.query(e[e.length - 1], l, o),
        r = yield _this._queryAllContinue(e, a, o);
      return r.geometry = r.geometry.export(), s && delete r.sampleInfo, r;
    })();
  }
  query(e, i, n) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (!e) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:invalid-layer", "Elevation queries require an elevation layer to fetch tiles from");
      if (!i || !(i instanceof v) && "point" !== i.type && "multipoint" !== i.type && "polyline" !== i.type) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:invalid-geometry", "Only point, polyline and multipoint geometries can be used to query elevation");
      const l = {
          ...R,
          ...n
        },
        s = new x(e, i.spatialReference, l),
        o = l.signal;
      return yield e.load({
        signal: o
      }), yield _this2._createGeometryDescriptor(s, i, o), yield _this2._selectTiles(s, o), yield _this2._populateElevationTiles(s, o), _this2._sampleGeometryWithElevation(s), _this2._createQueryResult(s, o);
    })();
  }
  createSampler(e, i, n) {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (!e) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:invalid-layer", "Elevation queries require an elevation layer to fetch tiles from");
      if (!i || "extent" !== i.type) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:invalid-extent", "Invalid or undefined extent");
      const l = {
        ...R,
        ...n
      };
      return _this3._createSampler(e, i, l);
    })();
  }
  createSamplerAll(e, i, n) {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (!(e = n && n.ignoreInvisibleLayers ? e.filter(e => e.visible) : e.slice()).length) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:invalid-layer", "Elevation queries require at least one elevation layer to fetch tiles from");
      if (!i || "extent" !== i.type) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:invalid-extent", "Invalid or undefined extent");
      const l = {
          ...R,
          ...n,
          returnSampleInfo: !0
        },
        s = yield _this4._createSampler(e[e.length - 1], i, l);
      return _this4._createSamplerAllContinue(e, i, s, l);
    })();
  }
  _createSampler(e, t, i, n) {
    var _this5 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const l = i.signal;
      yield e.load({
        signal: l
      });
      const s = t.spatialReference,
        o = e.tileInfo.spatialReference;
      s.equals(o) || (yield (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_9__.initializeProjection)([{
        source: s,
        dest: o
      }], {
        signal: l
      }), t = (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_9__.project)(t, o));
      const a = new _(e, t, i, n);
      return yield _this5._selectTiles(a, l), yield _this5._populateElevationTiles(a, l), new _ElevationSampler_js__WEBPACK_IMPORTED_MODULE_11__.MultiTileElevationSampler(a.elevationTiles, a.layer.tileInfo, a.options.noDataValue);
    })();
  }
  _createSamplerAllContinue(e, t, i, n) {
    var _this6 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (e.pop(), !e.length) return i;
      const l = i.samplers.map(e => (0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_10__.fromExtent)(e.extent)),
        s = yield _this6._createSampler(e[e.length - 1], t, n, l);
      if (0 === s.samplers.length) return i;
      const o = i.samplers.concat(s.samplers),
        a = new _ElevationSampler_js__WEBPACK_IMPORTED_MODULE_11__.MultiTileElevationSampler(o, n.noDataValue);
      return _this6._createSamplerAllContinue(e, t, a, n);
    })();
  }
  _queryAllContinue(e, t, n) {
    var _this7 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const l = e.pop(),
        s = t.geometry.coordinates,
        o = t.sampleInfo;
      (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_3__.assertIsSome)(o);
      const a = [],
        r = [];
      for (let i = 0; i < s.length; i++) {
        const t = o[i];
        t.demResolution >= 0 ? t.source || (t.source = l) : e.length && (a.push(s[i]), r.push(i));
      }
      if (!e.length || 0 === a.length) return t;
      const c = t.geometry.clone(a),
        u = yield _this7.query(e[e.length - 1], c, n),
        h = u.sampleInfo;
      if (!h) throw new Error("no sampleInfo");
      return r.forEach((e, t) => {
        s[e].z = u.geometry.coordinates[t].z, o[e].demResolution = h[t].demResolution;
      }), _this7._queryAllContinue(e, t, n);
    })();
  }
  _createQueryResult(e, t) {
    var _this8 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const n = yield e.geometry.project(e.outSpatialReference, t);
      (0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_3__.assertIsSome)(n);
      const l = {
        geometry: n.export(),
        noDataValue: e.options.noDataValue
      };
      return e.options.returnSampleInfo && (l.sampleInfo = _this8._extractSampleInfo(e)), e.geometry.coordinates.forEach(e => {
        e.tile = null, e.elevationTile = null;
      }), l;
    })();
  }
  _createGeometryDescriptor(e, i, n) {
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      let l;
      const s = e.layer.tileInfo.spatialReference;
      if (i instanceof v ? l = yield i.project(s, n) : (yield (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_9__.initializeProjection)([{
        source: i.spatialReference,
        dest: s
      }], {
        signal: n
      }), l = (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_9__.project)(i, s)), !l) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:spatial-reference-mismatch", `Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${s.wkid}'`);
      e.geometry = v.fromGeometry(l);
    })();
  }
  _selectTiles(e, i) {
    var _this9 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      "geometry" === e.type && _this9._preselectOutsideLayerExtent(e);
      const n = e.options.demResolution;
      if ("number" == typeof n) _this9._selectTilesClosestResolution(e, n);else if ("finest-contiguous" === n) yield _this9._selectTilesFinestContiguous(e, i);else {
        if ("auto" !== n) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:invalid-dem-resolution", `Invalid dem resolution value '${n}', expected a number, "finest-contiguous" or "auto"`);
        yield _this9._selectTilesAuto(e, i);
      }
    })();
  }
  _preselectOutsideLayerExtent(e) {
    if (null == e.layer.fullExtent) return;
    const t = new _ElevationTile_js__WEBPACK_IMPORTED_MODULE_12__.ElevationTile(null);
    t.sample = () => e.options.noDataValue, e.outsideExtentTile = t;
    const i = e.layer.fullExtent;
    e.geometry.coordinates.forEach(e => {
      const n = e.x,
        l = e.y;
      (n < i.xmin || n > i.xmax || l < i.ymin || l > i.ymax) && (e.elevationTile = t);
    });
  }
  _selectTilesClosestResolution(e, t) {
    const i = this._findNearestDemResolutionLODIndex(e, t);
    e.selectTilesAtLOD(i);
  }
  _findNearestDemResolutionLODIndex(e, t) {
    const {
        tileInfo: i,
        tilemapCache: n
      } = e.layer,
      l = t / (0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_5__.getMetersPerUnitForSR)(i.spatialReference),
      o = q(i, n);
    let a = o[0],
      r = 0;
    for (let s = 1; s < o.length; s++) {
      const e = o[s];
      Math.abs(e.resolution - l) < Math.abs(a.resolution - l) && (a = e, r = s);
    }
    return r;
  }
  _selectTilesFinestContiguous(e, t) {
    var _this10 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
          tileInfo: i,
          tilemapCache: n
        } = e.layer,
        l = E(i, n, e.options.minDemResolution);
      yield _this10._selectTilesFinestContiguousAt(e, l, t);
    })();
  }
  _selectTilesFinestContiguousAt(e, i, s) {
    var _this11 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const o = e.layer;
      if (e.selectTilesAtLOD(i), i < 0) return;
      const a = o.tilemapCache,
        r = e.getTilesToFetch();
      try {
        if (a && !I(a)) yield (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.whenOrAbort)(Promise.all(r.map(e => a.fetchAvailability(e.level, e.row, e.col, {
          signal: s
        }))), s);else if (yield _this11._populateElevationTiles(e, s), !e.allElevationTilesFetched()) throw e.clearElevationTiles(), new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("elevation-query:has-unavailable-tiles");
      } catch (c) {
        (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.throwIfAbortError)(c), yield _this11._selectTilesFinestContiguousAt(e, i - 1, s);
      }
    })();
  }
  _populateElevationTiles(e, t) {
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const i = e.getTilesToFetch(),
        l = {},
        s = e.options.cache,
        o = e.options.noDataValue,
        a = i.map( /*#__PURE__*/function () {
          var _ref = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (i) {
            if (null == i.id) return;
            const n = `${e.layer.uid}:${i.id}:${o}`,
              a = null != s ? s.get(n) : null,
              r = null != a ? a : yield e.layer.fetchTile(i.level, i.row, i.col, {
                noDataValue: o,
                signal: t
              });
            null != s && s.put(n, r), l[i.id] = new _ElevationTile_js__WEBPACK_IMPORTED_MODULE_12__.ElevationTile(i, r);
          });
          return function (_x) {
            return _ref.apply(this, arguments);
          };
        }());
      yield (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.whenOrAbort)(Promise.allSettled(a), t), e.populateElevationTiles(l);
    })();
  }
  _selectTilesAuto(t, i) {
    var _this12 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this12._selectTilesAutoFinest(t), _this12._reduceTilesForMaximumRequests(t);
      const s = t.layer.tilemapCache;
      if (!s || I(s)) return _this12._selectTilesAutoPrefetchUpsample(t, i);
      const o = t.getTilesToFetch(),
        a = {},
        r = o.map( /*#__PURE__*/function () {
          var _ref2 = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (t) {
            const n = new _TileKey_js__WEBPACK_IMPORTED_MODULE_13__.TileKey(null, 0, 0, 0, (0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_10__.create)()),
              o = yield (0,_core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_1__.result)(s.fetchAvailabilityUpsample(t.level, t.row, t.col, n, {
                signal: i
              }));
            !1 !== o.ok ? null != t.id && (a[t.id] = n) : (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.throwIfAbortError)(o.error);
          });
          return function (_x2) {
            return _ref2.apply(this, arguments);
          };
        }());
      yield (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.whenOrAbort)(Promise.all(r), i), t.remapTiles(a);
    })();
  }
  _reduceTilesForMaximumRequests(e) {
    const t = e.layer.tileInfo;
    let i = 0;
    const n = {},
      l = e => {
        null != e.id && (e.id in n ? n[e.id]++ : (n[e.id] = 1, i++));
      },
      s = e => {
        if (null == e.id) return;
        const t = n[e.id];
        1 === t ? (delete n[e.id], i--) : n[e.id] = t - 1;
      };
    e.forEachTileToFetch(l, s);
    let o = !0;
    for (; o && (o = !1, e.forEachTileToFetch(n => {
      i <= e.options.maximumAutoTileRequests || (s(n), t.upsampleTile(n) && (o = !0), l(n));
    }, s), o););
  }
  _selectTilesAutoFinest(e) {
    const {
        tileInfo: t,
        tilemapCache: i
      } = e.layer,
      n = E(t, i, e.options.minDemResolution);
    e.selectTilesAtLOD(n, e.options.maximumAutoTileRequests);
  }
  _selectTilesAutoPrefetchUpsample(e, t) {
    var _this13 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const i = e.layer.tileInfo;
      yield _this13._populateElevationTiles(e, t);
      let n = !1;
      e.forEachTileToFetch((e, t) => {
        i.upsampleTile(e) ? n = !0 : t();
      }), n && (yield _this13._selectTilesAutoPrefetchUpsample(e, t));
    })();
  }
  _sampleGeometryWithElevation(e) {
    e.geometry.coordinates.forEach(t => {
      const i = t.elevationTile;
      let n = e.options.noDataValue;
      if (i) {
        const e = i.sample(t.x, t.y);
        null != e ? n = e : t.elevationTile = null;
      }
      t.z = n;
    });
  }
  _extractSampleInfo(e) {
    const t = e.layer.tileInfo,
      i = (0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_5__.getMetersPerUnitForSR)(t.spatialReference);
    return e.geometry.coordinates.map(n => {
      let l = -1;
      if (n.elevationTile && n.elevationTile !== e.outsideExtentTile) {
        l = t.lodAt(n.elevationTile.tile.level).resolution * i;
      }
      return {
        demResolution: l
      };
    });
  }
}
class v {
  export() {
    return this._exporter(this.coordinates, this.spatialReference);
  }
  clone(e) {
    const t = new v();
    return t.geometry = this.geometry, t.spatialReference = this.spatialReference, t.coordinates = e || this.coordinates.map(e => e.clone()), t._exporter = this._exporter, t;
  }
  project(e, t) {
    var _this14 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this14.spatialReference.equals(e)) return _this14.clone();
      yield (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_9__.initializeProjection)([{
        source: _this14.spatialReference,
        dest: e
      }], {
        signal: t
      });
      const i = new _geometry_Multipoint_js__WEBPACK_IMPORTED_MODULE_6__["default"]({
          spatialReference: _this14.spatialReference,
          points: _this14.coordinates.map(e => [e.x, e.y])
        }),
        n = (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_9__.project)(i, e);
      if (!n) return null;
      const l = _this14.coordinates.map((e, t) => {
          const i = e.clone(),
            l = n.points[t];
          return i.x = l[0], i.y = l[1], i;
        }),
        s = _this14.clone(l);
      return s.spatialReference = e, s;
    })();
  }
  static fromGeometry(e) {
    const t = new v();
    if (t.geometry = e, t.spatialReference = e.spatialReference, e instanceof v) t.coordinates = e.coordinates.map(e => e.clone()), t._exporter = (t, i) => {
      const n = e.clone(t);
      return n.spatialReference = i, n;
    };else switch (e.type) {
      case "point":
        {
          const i = e,
            {
              hasZ: n,
              hasM: l
            } = i;
          t.coordinates = n && l ? [new w(i.x, i.y, i.z, i.m)] : n ? [new w(i.x, i.y, i.z)] : l ? [new w(i.x, i.y, null, i.m)] : [new w(i.x, i.y)], t._exporter = (t, i) => e.hasM ? new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__["default"](t[0].x, t[0].y, t[0].z, t[0].m, i) : new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__["default"](t[0].x, t[0].y, t[0].z, i);
          break;
        }
      case "multipoint":
        {
          const i = e,
            {
              hasZ: n,
              hasM: l
            } = i;
          t.coordinates = n && l ? i.points.map(e => new w(e[0], e[1], e[2], e[3])) : n ? i.points.map(e => new w(e[0], e[1], e[2])) : l ? i.points.map(e => new w(e[0], e[1], null, e[2])) : i.points.map(e => new w(e[0], e[1])), t._exporter = (t, i) => e.hasM ? new _geometry_Multipoint_js__WEBPACK_IMPORTED_MODULE_6__["default"]({
            points: t.map(e => [e.x, e.y, e.z, e.m]),
            hasZ: !0,
            hasM: !0,
            spatiaReference: i
          }) : new _geometry_Multipoint_js__WEBPACK_IMPORTED_MODULE_6__["default"](t.map(e => [e.x, e.y, e.z]), i);
          break;
        }
      case "polyline":
        {
          const i = e,
            n = [],
            l = [],
            {
              hasZ: s,
              hasM: o
            } = e;
          let a = 0;
          for (const e of i.paths) if (l.push([a, a + e.length]), a += e.length, s && o) for (const t of e) n.push(new w(t[0], t[1], t[2], t[3]));else if (s) for (const t of e) n.push(new w(t[0], t[1], t[2]));else if (o) for (const t of e) n.push(new w(t[0], t[1], null, t[2]));else for (const t of e) n.push(new w(t[0], t[1]));
          t.coordinates = n, t._exporter = (t, i) => {
            const n = e.hasM ? t.map(e => [e.x, e.y, e.z, e.m]) : t.map(e => [e.x, e.y, e.z]),
              s = l.map(e => n.slice(e[0], e[1]));
            return new _geometry_Polyline_js__WEBPACK_IMPORTED_MODULE_8__["default"]({
              paths: s,
              hasM: e.hasM,
              hasZ: !0,
              spatialReference: i
            });
          };
          break;
        }
    }
    return t;
  }
}
class w {
  constructor(e, t, i = null, n = null, l = null, s = null) {
    this.x = e, this.y = t, this.z = i, this.m = n, this.tile = l, this.elevationTile = s;
  }
  clone() {
    return new w(this.x, this.y, this.z, this.m);
  }
}
class g {
  constructor(e, t) {
    this.layer = e, this.options = t;
  }
}
class x extends g {
  constructor(e, t, i) {
    super(e, i), this.outSpatialReference = t, this.type = "geometry";
  }
  selectTilesAtLOD(e) {
    if (e < 0) this.geometry.coordinates.forEach(e => e.tile = null);else {
      const {
          tileInfo: t,
          tilemapCache: i
        } = this.layer,
        n = q(t, i)[e].level;
      this.geometry.coordinates.forEach(e => e.tile = t.tileAt(n, e.x, e.y));
    }
  }
  allElevationTilesFetched() {
    return !this.geometry.coordinates.some(e => !e.elevationTile);
  }
  clearElevationTiles() {
    for (const e of this.geometry.coordinates) e.elevationTile !== this.outsideExtentTile && (e.elevationTile = null);
  }
  populateElevationTiles(e) {
    for (const t of this.geometry.coordinates) !t.elevationTile && t.tile?.id && (t.elevationTile = e[t.tile.id]);
  }
  remapTiles(e) {
    for (const t of this.geometry.coordinates) {
      const i = t.tile?.id;
      t.tile = i ? e[i] : null;
    }
  }
  getTilesToFetch() {
    const e = {},
      t = [];
    for (const i of this.geometry.coordinates) {
      const n = i.tile;
      if (!n) continue;
      const l = i.tile?.id;
      i.elevationTile || !l || e[l] || (e[l] = n, t.push(n));
    }
    return t;
  }
  forEachTileToFetch(e) {
    for (const t of this.geometry.coordinates) t.tile && !t.elevationTile && e(t.tile, () => {
      t.tile = null;
    });
  }
}
class _ extends g {
  constructor(e, t, i, n) {
    super(e, i), this.type = "extent", this.elevationTiles = [], this._candidateTiles = [], this._fetchedCandidates = new Set(), this.extent = t.intersection(e.fullExtent), this.maskExtents = n;
  }
  selectTilesAtLOD(e, t) {
    const i = this._maximumLodForRequests(t),
      n = Math.min(i, e);
    n < 0 ? this._candidateTiles.length = 0 : this._selectCandidateTilesCoveringExtentAt(n);
  }
  _maximumLodForRequests(e) {
    const {
        tileInfo: t,
        tilemapCache: i
      } = this.layer,
      n = q(t, i);
    if (!e) return n.length - 1;
    const l = this.extent;
    if (null == l) return -1;
    for (let s = n.length - 1; s >= 0; s--) {
      const i = n[s],
        o = i.resolution * t.size[0],
        a = i.resolution * t.size[1];
      if (Math.ceil(l.width / o) * Math.ceil(l.height / a) <= e) return s;
    }
    return -1;
  }
  allElevationTilesFetched() {
    return this._candidateTiles.length === this.elevationTiles.length;
  }
  clearElevationTiles() {
    this.elevationTiles.length = 0, this._fetchedCandidates.clear();
  }
  populateElevationTiles(e) {
    for (const t of this._candidateTiles) {
      const i = t.id && e[t.id];
      i && (this._fetchedCandidates.add(t), this.elevationTiles.push(i));
    }
  }
  remapTiles(e) {
    this._candidateTiles = this._uniqueNonOverlappingTiles(this._candidateTiles.map(t => e[t.id]));
  }
  getTilesToFetch() {
    return this._candidateTiles;
  }
  forEachTileToFetch(e, t) {
    const i = this._candidateTiles;
    this._candidateTiles = [], i.forEach(i => {
      if (this._fetchedCandidates.has(i)) return void (t && t(i));
      let n = !1;
      e(i, () => n = !0), n ? t && t(i) : this._candidateTiles.push(i);
    }), this._candidateTiles = this._uniqueNonOverlappingTiles(this._candidateTiles, t);
  }
  _uniqueNonOverlappingTiles(e, t) {
    const i = {},
      n = [];
    for (const s of e) {
      const e = s.id;
      e && !i[e] ? (i[e] = s, n.push(s)) : t && t(s);
    }
    const l = n.sort((e, t) => e.level - t.level);
    return l.filter((e, i) => {
      for (let n = 0; n < i; n++) {
        const i = l[n].extent;
        if (i && e.extent && (0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_10__.contains)(i, e.extent)) return t && t(e), !1;
      }
      return !0;
    });
  }
  _selectCandidateTilesCoveringExtentAt(e) {
    this._candidateTiles.length = 0;
    const t = this.extent;
    if (null == t) return;
    const {
        tileInfo: i,
        tilemapCache: n
      } = this.layer,
      l = q(i, n)[e],
      s = i.tileAt(l.level, t.xmin, t.ymin),
      o = s.extent;
    if (null == o) return;
    const a = l.resolution * i.size[0],
      r = l.resolution * i.size[1],
      c = Math.ceil((t.xmax - o[0]) / a),
      u = Math.ceil((t.ymax - o[1]) / r);
    for (let h = 0; h < u; h++) for (let e = 0; e < c; e++) {
      const t = new _TileKey_js__WEBPACK_IMPORTED_MODULE_13__.TileKey(null, s.level, s.row - h, s.col + e);
      i.updateTileInfo(t), this._tileIsMasked(t) || this._candidateTiles.push(t);
    }
  }
  _tileIsMasked(e) {
    return !!this.maskExtents && this.maskExtents.some(t => e.extent && (0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_10__.contains)(t, e.extent));
  }
}
function E(e, t, i = 0) {
  const n = q(e, t);
  let l = n.length - 1;
  if (i > 0) {
    const t = i / (0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_5__.getMetersPerUnitForSR)(e.spatialReference),
      o = n.findIndex(e => e.resolution < t);
    0 === o ? l = 0 : o > 0 && (l = o - 1);
  }
  return l;
}
const R = {
  maximumAutoTileRequests: 20,
  noDataValue: 0,
  returnSampleInfo: !1,
  demResolution: "auto",
  minDemResolution: 0
};
function q(e, t) {
  const i = e.lods;
  if (I(t)) {
    const {
      effectiveMinLOD: e,
      effectiveMaxLOD: n
    } = t;
    return i.filter(t => t.level >= e && t.level <= n);
  }
  return i;
}
function I(e) {
  return null != e?.tileInfo;
}


/***/ }),

/***/ 78867:
/*!**********************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/ElevationSampler.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ElevationSamplerBase": () => (/* binding */ m),
/* harmony export */   "MultiTileElevationSampler": () => (/* binding */ u),
/* harmony export */   "TileElevationSampler": () => (/* binding */ c),
/* harmony export */   "updateGeometryElevation": () => (/* binding */ p)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../geometry.js */ 6010);
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/has.js */ 67087);
/* harmony import */ var _core_handleUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/handleUtils.js */ 70120);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Logger.js */ 28191);
/* harmony import */ var _core_unitUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/unitUtils.js */ 82769);
/* harmony import */ var _geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../geometry/support/aaBoundingRect.js */ 6848);
/* harmony import */ var _geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../geometry/support/webMercatorUtils.js */ 83550);
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../geometry/Point.js */ 72062);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/








const l = _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__["default"].getLogger("esri.layers.support.ElevationSampler");
class m {
  queryElevation(e) {
    return p(e.clone(), this);
  }
  on() {
    return (0,_core_handleUtils_js__WEBPACK_IMPORTED_MODULE_2__.makeHandle)();
  }
  projectIfRequired(e, t) {
    return h(e, t);
  }
}
class c extends m {
  get spatialReference() {
    return this.extent.spatialReference;
  }
  constructor(e, t, i) {
    super(), this.tile = e, this.noDataValue = i;
    const o = e.tile.extent;
    this.extent = (0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_5__.toExtent)(o, t.spatialReference), this.extent.zmin = e.zmin, this.extent.zmax = e.zmax, this._aaExtent = o;
    const a = (0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_4__.getMetersPerUnitForSR)(t.spatialReference),
      r = t.lodAt(e.tile.level).resolution * a;
    this.demResolution = {
      min: r,
      max: r
    };
  }
  contains(e) {
    const t = this.projectIfRequired(e, this.spatialReference);
    return null != t && this.containsAt(t.x, t.y);
  }
  containsAt(e, t) {
    return (0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_5__.containsXY)(this._aaExtent, e, t);
  }
  elevationAt(e, t) {
    if (!this.containsAt(e, t)) {
      const n = this.extent,
        s = `${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`;
      return l.warn("#elevationAt()", `Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${s})`), this.noDataValue;
    }
    return this.tile.sample(e, t) ?? this.noDataValue;
  }
}
class u extends m {
  get spatialReference() {
    return this.extent.spatialReference;
  }
  constructor(e, t, n) {
    let i;
    super(), "number" == typeof t ? (this.noDataValue = t, i = null) : (i = t, this.noDataValue = n), this.samplers = i ? e.map(e => new c(e, i, this.noDataValue)) : e;
    const a = this.samplers[0];
    if (a) {
      this.extent = a.extent.clone();
      const {
        min: e,
        max: t
      } = a.demResolution;
      this.demResolution = {
        min: e,
        max: t
      };
      for (let n = 1; n < this.samplers.length; n++) {
        const e = this.samplers[n];
        this.extent.union(e.extent), this.demResolution.min = Math.min(this.demResolution.min, e.demResolution.min), this.demResolution.max = Math.max(this.demResolution.max, e.demResolution.max);
      }
    } else this.extent = (0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_5__.toExtent)((0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_5__.create)(), i.spatialReference), this.demResolution = {
      min: 0,
      max: 0
    };
  }
  elevationAt(e, t) {
    for (const n of this.samplers) if (n.containsAt(e, t)) return n.elevationAt(e, t);
    return l.warn("#elevationAt()", `Point used to sample elevation (${e}, ${t}) is outside of the sampler`), this.noDataValue;
  }
}
function p(e, t) {
  const n = h(e, t.spatialReference);
  if (!n) return null;
  switch (e.type) {
    case "point":
      f(e, n, t);
      break;
    case "polyline":
      x(e, n, t);
      break;
    case "multipoint":
      R(e, n, t);
  }
  return e;
}
function h(e, t) {
  if (null == e) return null;
  const n = e.spatialReference;
  if (n.equals(t)) return e;
  const s = (0,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_6__.project)(e, t);
  return s || l.error(`Cannot project geometry spatial reference (wkid:${n.wkid}) to elevation sampler spatial reference (wkid:${t.wkid})`), s;
}
function f(e, t, n) {
  e.z = n.elevationAt(t.x, t.y);
}
function x(e, t, n) {
  d.spatialReference = t.spatialReference;
  const s = e.hasM && !e.hasZ;
  for (let i = 0; i < e.paths.length; i++) {
    const o = e.paths[i],
      a = t.paths[i];
    for (let e = 0; e < o.length; e++) {
      const t = o[e],
        i = a[e];
      d.x = i[0], d.y = i[1], s && (t[3] = t[2]), t[2] = n.elevationAt(d.x, d.y);
    }
  }
  e.hasZ = !0;
}
function R(e, t, n) {
  d.spatialReference = t.spatialReference;
  const s = e.hasM && !e.hasZ;
  for (let i = 0; i < e.points.length; i++) {
    const o = e.points[i],
      a = t.points[i];
    d.x = a[0], d.y = a[1], s && (o[3] = o[2]), o[2] = n.elevationAt(d.x, d.y);
  }
  e.hasZ = !0;
}
const d = new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__["default"]();


/***/ }),

/***/ 95428:
/*!**************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/ElevationSamplerData.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ElevationSamplerData": () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class t {
  constructor(t, h) {
    this.data = t, this.safeWidth = .99999999 * (t.width - 1), this.dx = (t.width - 1) / (h[2] - h[0]), this.dy = (t.width - 1) / (h[3] - h[1]), this.x0 = h[0], this.y1 = h[3];
  }
}


/***/ }),

/***/ 77346:
/*!*******************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/ElevationTile.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ElevationTile": () => (/* binding */ t)
/* harmony export */ });
/* harmony import */ var _ElevationSamplerData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ElevationSamplerData.js */ 95428);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/

class t {
  constructor(t, l = null) {
    if (this.tile = t, null != l && null != t) {
      const e = t.extent;
      this._samplerData = new _ElevationSamplerData_js__WEBPACK_IMPORTED_MODULE_0__.ElevationSamplerData(l, e);
    }
  }
  get zmin() {
    return null != this._samplerData ? this._samplerData.data.minValue : 0;
  }
  get zmax() {
    return null != this._samplerData ? this._samplerData.data.maxValue : 0;
  }
  sample(a, t) {
    if (null == this._samplerData) return;
    const {
        safeWidth: e,
        data: r,
        dx: s,
        dy: n,
        y1: i,
        x0: u
      } = this._samplerData,
      {
        width: m,
        values: o,
        noDataValue: h
      } = r,
      p = l(n * (i - t), 0, e),
      D = l(s * (a - u), 0, e),
      f = Math.floor(p),
      c = Math.floor(D),
      d = f * m + c,
      _ = d + m,
      x = o[d],
      V = o[_],
      g = o[d + 1],
      v = o[_ + 1];
    if (x !== h && V !== h && g !== h && v !== h) {
      const a = D - c,
        t = x + (g - x) * a;
      return t + (V + (v - V) * a - t) * (p - f);
    }
  }
}
function l(a, t, l) {
  return a < t ? t : a > l ? l : a;
}


/***/ })

}]);
//# sourceMappingURL=node_modules_arcgis_core_layers_support_ElevationQuery_js.js.map