"use strict";
(self["webpackChunkrealgis"] = self["webpackChunkrealgis"] || []).push([["node_modules_arcgis_core_layers_graphics_sources_geojson_GeoJSONSourceWorker_js"],{

/***/ 26019:
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Q)
/* harmony export */ });
/* harmony import */ var _home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../request.js */ 1897);
/* harmony import */ var _core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/asyncUtils.js */ 11823);
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/Error.js */ 32995);
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/Logger.js */ 28191);
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ 30801);
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../geometry/support/jsonUtils.js */ 71182);
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ 53492);
/* harmony import */ var _featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../featureConversionUtils.js */ 50805);
/* harmony import */ var _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../data/FeatureStore.js */ 92203);
/* harmony import */ var _data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../data/projectionSupport.js */ 19482);
/* harmony import */ var _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../data/QueryEngine.js */ 59266);
/* harmony import */ var _geojson_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./geojson.js */ 70554);
/* harmony import */ var _support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../support/clientSideDefaults.js */ 34524);
/* harmony import */ var _support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../support/sourceUtils.js */ 65210);
/* harmony import */ var _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../support/FieldsIndex.js */ 19346);
/* harmony import */ var _support_fieldType_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../support/fieldType.js */ 43651);
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ 32746);
/* harmony import */ var _time_timeZoneUtils_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../time/timeZoneUtils.js */ 92691);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/


















const D = {
  hasAttachments: !1,
  capabilities: "query, editing, create, delete, update",
  useStandardizedQueries: !0,
  supportsCoordinatesQuantization: !0,
  supportsReturningQueryGeometry: !0,
  advancedQueryCapabilities: {
    supportsQueryAttachments: !1,
    supportsStatistics: !0,
    supportsPercentileStatistics: !0,
    supportsReturningGeometryCentroid: !0,
    supportsQueryWithDistance: !0,
    supportsDistinct: !0,
    supportsReturningQueryExtent: !0,
    supportsReturningGeometryProperties: !1,
    supportsHavingClause: !0,
    supportsOrderBy: !0,
    supportsPagination: !0,
    supportsQueryWithResultType: !1,
    supportsSqlExpression: !0,
    supportsDisjointSpatialRel: !0
  }
};
class Q {
  constructor() {
    var _this = this;
    this._queryEngine = null, this._snapshotFeatures = /*#__PURE__*/function () {
      var _ref = (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (e) {
        const t = yield _this._fetch(e);
        return _this._createFeatures(t);
      });
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  }
  destroy() {
    this._queryEngine?.destroy(), this._queryEngine = this._createDefaultAttributes = null;
  }
  load(e, t = {}) {
    var _this2 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this2._loadOptions = {
        url: e.url,
        customParameters: e.customParameters
      };
      const i = [],
        [r] = yield Promise.all([e.url ? _this2._fetch(t?.signal) : null, _this2._checkProjection(e.spatialReference)]),
        n = (0,_geojson_js__WEBPACK_IMPORTED_MODULE_12__.inferLayerProperties)(r, {
          geometryType: e.geometryType
        }),
        o = e.fields || n.fields || [],
        l = null != e.hasZ ? e.hasZ : n.hasZ,
        u = n.geometryType;
      let d = e.objectIdField || n.objectIdFieldName || "__OBJECTID";
      const p = e.spatialReference || _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.WGS84;
      let c = e.timeInfo;
      o === n.fields && n.unknownFields.length > 0 && i.push({
        name: "geojson-layer:unknown-field-types",
        message: "Some fields types couldn't be inferred from the features and were dropped",
        details: {
          unknownFields: n.unknownFields
        }
      });
      const y = new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_15__["default"](o);
      let h = y.get(d);
      h ? ("esriFieldTypeString" !== h.type && (h.type = "esriFieldTypeOID"), h.editable = !1, h.nullable = !1, d = h.name) : (h = {
        alias: d,
        name: d,
        type: "string" === n.objectIdFieldType ? "esriFieldTypeString" : "esriFieldTypeOID",
        editable: !1,
        nullable: !1
      }, o.unshift(h));
      const _ = {};
      for (const a of o) {
        if (null == a.name && (a.name = a.alias), null == a.alias && (a.alias = a.name), !a.name) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("geojson-layer:invalid-field-name", "field name is missing", {
          field: a
        });
        if (!_support_fieldType_js__WEBPACK_IMPORTED_MODULE_16__.kebabDict.jsonValues.includes(a.type)) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("geojson-layer:invalid-field-type", `invalid type for field "${a.name}"`, {
          field: a
        });
        if (a.name !== h.name) {
          const e = (0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_17__.getFieldDefaultValue)(a);
          void 0 !== e && (_[a.name] = e);
        }
        null == a.length && (a.length = (0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_17__.getFieldDefaultLength)(a));
      }
      if (c) {
        if (c.startTimeField) {
          const e = y.get(c.startTimeField);
          e ? (c.startTimeField = e.name, e.type = "esriFieldTypeDate") : c.startTimeField = null;
        }
        if (c.endTimeField) {
          const e = y.get(c.endTimeField);
          e ? (c.endTimeField = e.name, e.type = "esriFieldTypeDate") : c.endTimeField = null;
        }
        if (c.trackIdField) {
          const e = y.get(c.trackIdField);
          e ? c.trackIdField = e.name : (c.trackIdField = null, i.push({
            name: "geojson-layer:invalid-timeInfo-trackIdField",
            message: "trackIdField is missing",
            details: {
              timeInfo: c
            }
          }));
        }
        c.startTimeField || c.endTimeField || (i.push({
          name: "geojson-layer:invalid-timeInfo",
          message: "startTimeField and endTimeField are missing",
          details: {
            timeInfo: c
          }
        }), c = null);
      }
      const F = u ? (0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_13__.createDrawingInfo)(u) : void 0,
        b = y.dateFields.length ? {
          timeZoneIANA: _time_timeZoneUtils_js__WEBPACK_IMPORTED_MODULE_18__.utc
        } : null,
        T = {
          warnings: i,
          featureErrors: [],
          layerDefinition: {
            ...D,
            drawingInfo: F ?? void 0,
            templates: (0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_13__.createDefaultTemplate)(_),
            extent: void 0,
            geometryType: u,
            objectIdField: d,
            fields: o,
            hasZ: !!l,
            timeInfo: c,
            dateFieldsTimeReference: b
          }
        };
      _this2._queryEngine = new _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_11__.QueryEngine({
        fieldsIndex: _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_15__["default"].fromLayerJSON({
          fields: o,
          timeInfo: c,
          dateFieldsTimeReference: b
        }),
        geometryType: u,
        hasM: !1,
        hasZ: l,
        objectIdField: d,
        spatialReference: p,
        timeInfo: c,
        featureStore: new _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_9__["default"]({
          geometryType: u,
          hasM: !1,
          hasZ: l
        }),
        cacheSpatialQueries: !0
      });
      const w = _this2._queryEngine.fieldsIndex.requiredFields.indexOf(h);
      w > -1 && _this2._queryEngine.fieldsIndex.requiredFields.splice(w, 1), _this2._createDefaultAttributes = (0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_13__.createDefaultAttributesFunction)(_, d);
      const q = yield _this2._createFeatures(r);
      _this2._objectIdGenerator = _this2._createObjectIdGenerator(_this2._queryEngine, q);
      const x = _this2._normalizeFeatures(q, T.featureErrors);
      _this2._queryEngine.featureStore.addMany(x);
      const {
        fullExtent: Q,
        timeExtent: v
      } = yield _this2._queryEngine.fetchRecomputedExtents();
      if (T.layerDefinition.extent = Q, v) {
        const {
          start: e,
          end: t
        } = v;
        T.layerDefinition.timeInfo.timeExtent = [e, t];
      }
      return T;
    })();
  }
  applyEdits(e) {
    var _this3 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
        spatialReference: t,
        geometryType: s
      } = _this3._queryEngine;
      return yield Promise.all([(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.loadGeometryEngineForSimplify)(t, s), (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_10__.checkProjectionSupport)(e.adds, t), (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_10__.checkProjectionSupport)(e.updates, t)]), yield _this3._waitSnapshotComplete(), _this3._applyEdits(e);
    })();
  }
  queryFeatures(e = {}, t = {}) {
    var _this4 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return yield _this4._waitSnapshotComplete(), _this4._queryEngine.executeQuery(e, t.signal);
    })();
  }
  queryFeatureCount(e = {}, t = {}) {
    var _this5 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return yield _this5._waitSnapshotComplete(), _this5._queryEngine.executeQueryForCount(e, t.signal);
    })();
  }
  queryObjectIds(e = {}, t = {}) {
    var _this6 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return yield _this6._waitSnapshotComplete(), _this6._queryEngine.executeQueryForIds(e, t.signal);
    })();
  }
  queryExtent(e = {}, t = {}) {
    var _this7 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return yield _this7._waitSnapshotComplete(), _this7._queryEngine.executeQueryForExtent(e, t.signal);
    })();
  }
  querySnapping(e, t = {}) {
    var _this8 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return yield _this8._waitSnapshotComplete(), _this8._queryEngine.executeQueryForSnapping(e, t.signal);
    })();
  }
  refresh(e) {
    var _this9 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this9._loadOptions.customParameters = e, _this9._snapshotTask?.abort(), _this9._snapshotTask = (0,_core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_2__.createTask)(_this9._snapshotFeatures), _this9._snapshotTask.promise.then(e => {
        _this9._queryEngine.featureStore.clear(), _this9._objectIdGenerator = _this9._createObjectIdGenerator(_this9._queryEngine, e);
        const t = _this9._normalizeFeatures(e);
        t && _this9._queryEngine.featureStore.addMany(t);
      }, e => {
        _this9._queryEngine.featureStore.clear(), (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.isAbortError)(e) || _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__["default"].getLogger("esri.layers.GeoJSONLayer").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("geojson-layer:refresh", "An error occurred during refresh", {
          error: e
        }));
      }), yield _this9._waitSnapshotComplete();
      const {
        fullExtent: n,
        timeExtent: a
      } = yield _this9._queryEngine.fetchRecomputedExtents();
      return {
        extent: n,
        timeExtent: a
      };
    })();
  }
  _createFeatures(e) {
    var _this10 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (null == e) return [];
      const {
          geometryType: t,
          hasZ: s,
          objectIdField: i
        } = _this10._queryEngine,
        r = (0,_geojson_js__WEBPACK_IMPORTED_MODULE_12__.createOptimizedFeatures)(e, {
          geometryType: t,
          hasZ: s,
          objectIdField: i
        });
      if (!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.equals)(_this10._queryEngine.spatialReference, _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.WGS84)) for (const n of r) null != n.geometry && (n.geometry = (0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_8__.convertFromGeometry)((0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_10__.project)((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_8__.convertToGeometry)(n.geometry, _this10._queryEngine.geometryType, _this10._queryEngine.hasZ, !1), _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.WGS84, _this10._queryEngine.spatialReference)));
      return r;
    })();
  }
  _waitSnapshotComplete() {
    var _this11 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this11._snapshotTask && !_this11._snapshotTask.finished) {
        try {
          yield _this11._snapshotTask.promise;
        } catch {}
        return _this11._waitSnapshotComplete();
      }
    })();
  }
  _fetch(t) {
    var _this12 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
          url: s,
          customParameters: i
        } = _this12._loadOptions,
        r = (yield (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(s, {
          responseType: "json",
          query: {
            ...i
          },
          signal: t
        })).data;
      return (0,_geojson_js__WEBPACK_IMPORTED_MODULE_12__.validateGeoJSON)(r), r;
    })();
  }
  _normalizeFeatures(e, t) {
    const {
        objectIdField: s,
        fieldsIndex: i
      } = this._queryEngine,
      r = [];
    for (const n of e) {
      const e = this._createDefaultAttributes(),
        a = (0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.mixAttributes)(i, e, n.attributes, !0);
      a ? t?.push(a) : (this._assignObjectId(e, n.attributes, !0), n.attributes = e, n.objectId = e[s], r.push(n));
    }
    return r;
  }
  _applyEdits(e) {
    var _this13 = this;
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const {
          adds: t,
          updates: s,
          deletes: i
        } = e,
        r = {
          addResults: [],
          deleteResults: [],
          updateResults: [],
          uidToObjectId: {}
        };
      if (t?.length && _this13._applyAddEdits(r, t), s?.length && _this13._applyUpdateEdits(r, s), i?.length) {
        for (const e of i) r.deleteResults.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.createFeatureEditSuccessResult)(e));
        _this13._queryEngine.featureStore.removeManyById(i);
      }
      const {
        fullExtent: n,
        timeExtent: a
      } = yield _this13._queryEngine.fetchRecomputedExtents();
      return {
        extent: n,
        timeExtent: a,
        featureEditResults: r
      };
    })();
  }
  _applyAddEdits(e, t) {
    const {
        addResults: s
      } = e,
      {
        geometryType: i,
        hasM: r,
        hasZ: a,
        objectIdField: o,
        spatialReference: l,
        featureStore: u,
        fieldsIndex: p
      } = this._queryEngine,
      c = [];
    for (const d of t) {
      if (d.geometry && i !== (0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_6__.getJsonType)(d.geometry)) {
        s.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.createFeatureEditErrorResult)("Incorrect geometry type."));
        continue;
      }
      const t = this._createDefaultAttributes(),
        r = (0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.mixAttributes)(p, t, d.attributes);
      if (r) s.push(r);else {
        if (this._assignObjectId(t, d.attributes), d.attributes = t, null != d.uid) {
          const t = d.attributes[o];
          e.uidToObjectId[d.uid] = t;
        }
        if (null != d.geometry) {
          const e = d.geometry.spatialReference ?? l;
          d.geometry = (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_10__.project)((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.simplify)(d.geometry, e), e, l);
        }
        c.push(d), s.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.createFeatureEditSuccessResult)(d.attributes[o]));
      }
    }
    u.addMany((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_8__.convertFromFeatures)([], c, i, a, r, o));
  }
  _applyUpdateEdits({
    updateResults: e
  }, t) {
    const {
      geometryType: s,
      hasM: i,
      hasZ: r,
      objectIdField: a,
      spatialReference: o,
      featureStore: l,
      fieldsIndex: u
    } = this._queryEngine;
    for (const d of t) {
      const {
          attributes: t,
          geometry: m
        } = d,
        y = t?.[a];
      if (null == y) {
        e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.createFeatureEditErrorResult)(`Identifier field ${a} missing`));
        continue;
      }
      if (!l.has(y)) {
        e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.createFeatureEditErrorResult)(`Feature with object id ${y} missing`));
        continue;
      }
      const f = (0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_8__.convertToFeature)(l.getFeature(y), s, r, i);
      if (null != m) {
        if (s !== (0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_6__.getJsonType)(m)) {
          e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.createFeatureEditErrorResult)("Incorrect geometry type."));
          continue;
        }
        const t = m.spatialReference ?? o;
        f.geometry = (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_10__.project)((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.simplify)(m, t), t, o);
      }
      if (t) {
        const s = (0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.mixAttributes)(u, f.attributes, t);
        if (s) {
          e.push(s);
          continue;
        }
      }
      l.add((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_8__.convertFromFeature)(f, s, r, i, a)), e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_14__.createFeatureEditSuccessResult)(y));
    }
  }
  _createObjectIdGenerator(e, t) {
    const s = e.fieldsIndex.get(e.objectIdField);
    if ("esriFieldTypeString" === s.type) return () => s.name + "-" + Date.now().toString(16);
    let i = Number.NEGATIVE_INFINITY;
    for (const r of t) r.objectId && (i = Math.max(i, r.objectId));
    return i = Math.max(0, i) + 1, () => i++;
  }
  _assignObjectId(e, t, s = !1) {
    const i = this._queryEngine.objectIdField;
    e[i] = s && i in t ? t[i] : this._objectIdGenerator();
  }
  _checkProjection(e) {
    return (0,_home_ohnj_Documentos_realG4Life_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      try {
        yield (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_10__.checkProjectionSupport)(_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.WGS84, e);
      } catch {
        throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("geojson-layer", "Projection not supported");
      }
    })();
  }
}


/***/ }),

/***/ 70554:
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createOptimizedFeatures": () => (/* binding */ N),
/* harmony export */   "getGeometryType": () => (/* binding */ u),
/* harmony export */   "inferLayerProperties": () => (/* binding */ I),
/* harmony export */   "validateGeoJSON": () => (/* binding */ E)
/* harmony export */ });
/* harmony import */ var _core_date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/date.js */ 77029);
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Error.js */ 32995);
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ 53492);
/* harmony import */ var _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../OptimizedFeature.js */ 33510);
/* harmony import */ var _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../OptimizedGeometry.js */ 93846);
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ 32746);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/






const c = {
  LineString: "esriGeometryPolyline",
  MultiLineString: "esriGeometryPolyline",
  MultiPoint: "esriGeometryMultipoint",
  Point: "esriGeometryPoint",
  Polygon: "esriGeometryPolygon",
  MultiPolygon: "esriGeometryPolygon"
};
function u(e) {
  return c[e];
}
function* l(e) {
  switch (e.type) {
    case "Feature":
      yield e;
      break;
    case "FeatureCollection":
      for (const t of e.features) t && (yield t);
  }
}
function* f(e) {
  if (e) switch (e.type) {
    case "Point":
      yield e.coordinates;
      break;
    case "LineString":
    case "MultiPoint":
      yield* e.coordinates;
      break;
    case "MultiLineString":
    case "Polygon":
      for (const t of e.coordinates) yield* t;
      break;
    case "MultiPolygon":
      for (const t of e.coordinates) for (const e of t) yield* e;
  }
}
function* p(e, t = {}) {
  const {
    geometryType: n,
    objectIdField: i
  } = t;
  for (const s of e) {
    const {
      geometry: e,
      properties: c,
      id: l
    } = s;
    if (e && u(e.type) !== n) continue;
    const f = c || {};
    let p;
    i && (p = f[i], null == l || p || (f[i] = p = l));
    const a = new _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_3__.OptimizedFeature(e ? h(new _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__["default"](), e, t) : null, f, null, p ?? void 0);
    yield a;
  }
}
function a(e) {
  for (const t of e) if (t.length > 2) return !0;
  return !1;
}
function y(e) {
  return !g(e);
}
function d(e) {
  return g(e);
}
function g(e) {
  let t = 0;
  for (let n = 0; n < e.length; n++) {
    const o = e[n],
      r = e[(n + 1) % e.length];
    t += o[0] * r[1] - r[0] * o[1];
  }
  return t <= 0;
}
function m(e) {
  const t = e[0],
    n = e[e.length - 1];
  return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] || e.push(t), e;
}
function h(e, t, n) {
  switch (t.type) {
    case "LineString":
      return w(e, t, n);
    case "MultiLineString":
      return P(e, t, n);
    case "MultiPoint":
      return j(e, t, n);
    case "MultiPolygon":
      return b(e, t, n);
    case "Point":
      return S(e, t, n);
    case "Polygon":
      return F(e, t, n);
  }
}
function w(e, t, n) {
  return M(e, t.coordinates, n), e;
}
function P(e, t, n) {
  for (const o of t.coordinates) M(e, o, n);
  return e;
}
function j(e, t, n) {
  return M(e, t.coordinates, n), e;
}
function b(e, t, n) {
  for (const o of t.coordinates) {
    G(e, o[0], n);
    for (let t = 1; t < o.length; t++) k(e, o[t], n);
  }
  return e;
}
function S(e, t, n) {
  return O(e, t.coordinates, n), e;
}
function F(e, t, n) {
  const o = t.coordinates;
  G(e, o[0], n);
  for (let r = 1; r < o.length; r++) k(e, o[r], n);
  return e;
}
function G(e, t, n) {
  const o = m(t);
  y(o) ? T(e, o, n) : M(e, o, n);
}
function k(e, t, n) {
  const o = m(t);
  d(o) ? T(e, o, n) : M(e, o, n);
}
function M(e, t, n) {
  for (const o of t) O(e, o, n);
  e.lengths.push(t.length);
}
function T(e, t, n) {
  for (let o = t.length - 1; o >= 0; o--) O(e, t[o], n);
  e.lengths.push(t.length);
}
function O(e, t, n) {
  const [o, r, i] = t;
  e.coords.push(o, r), n.hasZ && e.coords.push(i || 0);
}
function L(t) {
  switch (typeof t) {
    case "string":
      return (0,_core_date_js__WEBPACK_IMPORTED_MODULE_0__.isISO8601Date)(t) ? "esriFieldTypeDate" : "esriFieldTypeString";
    case "number":
      return "esriFieldTypeDouble";
    default:
      return "unknown";
  }
}
function E(e, o = 4326) {
  if (!e) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("geojson-layer:empty", "GeoJSON data is empty");
  if ("Feature" !== e.type && "FeatureCollection" !== e.type) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("geojson-layer:unsupported-geojson-object", "missing or not supported GeoJSON object type", {
    data: e
  });
  const {
    crs: r
  } = e;
  if (!r) return;
  const i = "string" == typeof r ? r : "name" === r.type ? r.properties.name : "EPSG" === r.type ? r.properties.code : null,
    s = (0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_2__.isWGS84)({
      wkid: o
    }) ? new RegExp(".*(CRS84H?|4326)$", "i") : new RegExp(`.*(${o})$`, "i");
  if (!i || !s.test(i)) throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("geojson:unsupported-crs", "unsupported GeoJSON 'crs' member", {
    crs: r
  });
}
function I(e, t = {}) {
  const n = [],
    o = new Set(),
    r = new Set();
  let c,
    p = !1,
    y = null,
    d = !1,
    {
      geometryType: g = null
    } = t,
    m = !1;
  for (const s of l(e)) {
    const {
      geometry: e,
      properties: t,
      id: l
    } = s;
    if (!e || (g || (g = u(e.type)), u(e.type) === g)) {
      if (!p) {
        p = a(f(e));
      }
      if (d || (d = null != l, d && (c = typeof l, t && (y = Object.keys(t).filter(e => t[e] === l)))), t && y && d && null != l && (y.length > 1 ? y = y.filter(e => t[e] === l) : 1 === y.length && (y = t[y[0]] === l ? y : [])), !m && t) {
        let e = !0;
        for (const s in t) {
          if (o.has(s)) continue;
          const c = t[s];
          if (null == c) {
            e = !1, r.add(s);
            continue;
          }
          const u = L(c);
          if ("unknown" === u) {
            r.add(s);
            continue;
          }
          r.delete(s), o.add(s);
          const l = (0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_5__.normalizeFieldName)(s);
          l && n.push({
            name: l,
            alias: s,
            type: u
          });
        }
        m = e;
      }
    }
  }
  const h = (0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_5__.normalizeFieldName)(1 === y?.length && y[0] || null) ?? void 0;
  if (h) for (const i of n) if (i.name === h && (0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_5__.isNumericField)(i)) {
    i.type = "esriFieldTypeOID";
    break;
  }
  return {
    fields: n,
    geometryType: g,
    hasZ: p,
    objectIdFieldName: h,
    objectIdFieldType: c,
    unknownFields: Array.from(r)
  };
}
function N(e, t) {
  return Array.from(p(l(e), t));
}


/***/ })

}]);
//# sourceMappingURL=node_modules_arcgis_core_layers_graphics_sources_geojson_GeoJSONSourceWorker_js.js.map